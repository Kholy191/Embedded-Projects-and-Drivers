

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Sep 03 20:15:51 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23   000000                     
    24                           ; Generated 23/03/2023 GMT
    25                           ; 
    26                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4620 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58   000000                     
    59                           	psect	idataCOMRAM
    60   00F891                     __pidataCOMRAM:
    61                           	callstack 0
    62                           
    63                           ;initializer for _PORT_REG
    64   00F891  80                 	db	128
    65   00F892  0F                 	db	15
    66   00F893  81                 	db	129
    67   00F894  0F                 	db	15
    68   00F895  82                 	db	130
    69   00F896  0F                 	db	15
    70   00F897  83                 	db	131
    71   00F898  0F                 	db	15
    72   00F899  84                 	db	132
    73   00F89A  0F                 	db	15
    74                           
    75                           ;initializer for _TRIS_REG
    76   00F89B  92                 	db	146
    77   00F89C  0F                 	db	15
    78   00F89D  93                 	db	147
    79   00F89E  0F                 	db	15
    80   00F89F  94                 	db	148
    81   00F8A0  0F                 	db	15
    82   00F8A1  95                 	db	149
    83   00F8A2  0F                 	db	15
    84   00F8A3  96                 	db	150
    85   00F8A4  0F                 	db	15
    86                           
    87                           ;initializer for _LAT_REG
    88   00F8A5  89                 	db	137
    89   00F8A6  0F                 	db	15
    90   00F8A7  8A                 	db	138
    91   00F8A8  0F                 	db	15
    92   00F8A9  8B                 	db	139
    93   00F8AA  0F                 	db	15
    94   00F8AB  8C                 	db	140
    95   00F8AC  0F                 	db	15
    96   00F8AD  8D                 	db	141
    97   00F8AE  0F                 	db	15
    98                           
    99                           ;initializer for _seg_1
   100   00F8AF  10                 	db	16
   101   00F8B0  11                 	db	17
   102   00F8B1  12                 	db	18
   103   00F8B2  13                 	db	19
   104   00F8B3  00                 	db	0
   105                           
   106                           ;initializer for _control_pin_4
   107   00F8B4  1B                 	db	27
   108                           
   109                           ;initializer for _control_pin_3
   110   00F8B5  1A                 	db	26
   111                           
   112                           ;initializer for _control_pin_2
   113   00F8B6  19                 	db	25
   114                           
   115                           ;initializer for _control_pin_1
   116   00F8B7  18                 	db	24
   117                           
   118                           	psect	nvCOMRAM
   119   000042                     __pnvCOMRAM:
   120                           	callstack 0
   121   000042                     _counter:
   122                           	callstack 0
   123   000042                     	ds	1
   124   000043                     _ret:
   125                           	callstack 0
   126   000043                     	ds	1
   127   000000                     _PORTE	set	3972
   128   000000                     _PORTD	set	3971
   129   000000                     _PORTC	set	3970
   130   000000                     _PORTB	set	3969
   131   000000                     _PORTA	set	3968
   132   000000                     _LATA	set	3977
   133   000000                     _TRISA	set	3986
   134   000000                     _LATE	set	3981
   135   000000                     _LATD	set	3980
   136   000000                     _LATC	set	3979
   137   000000                     _LATB	set	3978
   138   000000                     _TRISE	set	3990
   139   000000                     _TRISD	set	3989
   140   000000                     _TRISC	set	3988
   141   000000                     _TRISB	set	3987
   142                           
   143                           ; #config settings
   144                           
   145                           	psect	cinit
   146   00F8B8                     __pcinit:
   147                           	callstack 0
   148   00F8B8                     start_initialization:
   149                           	callstack 0
   150   00F8B8                     __initialization:
   151                           	callstack 0
   152                           
   153                           ; Initialize objects allocated to COMRAM (39 bytes)
   154                           ; load TBLPTR registers with __pidataCOMRAM
   155   00F8B8  0E91               	movlw	low __pidataCOMRAM
   156   00F8BA  6EF6               	movwf	tblptrl,c
   157   00F8BC  0EF8               	movlw	high __pidataCOMRAM
   158   00F8BE  6EF7               	movwf	tblptrh,c
   159   00F8C0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   160   00F8C2  6EF8               	movwf	tblptru,c
   161   00F8C4  EE00  F001         	lfsr	0,__pdataCOMRAM
   162   00F8C8  EE10 F027          	lfsr	1,39
   163   00F8CC                     copy_data0:
   164   00F8CC  0009               	tblrd		*+
   165   00F8CE  CFF5 FFEE          	movff	tablat,postinc0
   166   00F8D2  50E5               	movf	postdec1,w,c
   167   00F8D4  50E1               	movf	fsr1l,w,c
   168   00F8D6  E1FA               	bnz	copy_data0
   169                           
   170                           ; Clear objects allocated to COMRAM (9 bytes)
   171   00F8D8  EE00  F039         	lfsr	0,__pbssCOMRAM
   172   00F8DC  0E09               	movlw	9
   173   00F8DE                     clear_0:
   174   00F8DE  6AEE               	clrf	postinc0,c
   175   00F8E0  06E8               	decf	wreg,f,c
   176   00F8E2  E1FD               	bnz	clear_0
   177   00F8E4                     end_of_initialization:
   178                           	callstack 0
   179   00F8E4                     __end_of__initialization:
   180                           	callstack 0
   181   00F8E4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   182   00F8E6  6EF8               	movwf	tblptru,c
   183   00F8E8  0100               	movlb	0
   184   00F8EA  EF1E  F07F         	goto	_main	;jump to C main() function
   185                           
   186                           	psect	bssCOMRAM
   187   000039                     __pbssCOMRAM:
   188                           	callstack 0
   189   000039                     _secs:
   190                           	callstack 0
   191   000039                     	ds	1
   192   00003A                     _mins:
   193                           	callstack 0
   194   00003A                     	ds	1
   195   00003B                     relay_off@F3052:
   196                           	callstack 0
   197   00003B                     	ds	1
   198   00003C                     relay_on@F3047:
   199                           	callstack 0
   200   00003C                     	ds	1
   201   00003D                     relay_initialize@F3042:
   202                           	callstack 0
   203   00003D                     	ds	1
   204   00003E                     led_toggle@F3063:
   205                           	callstack 0
   206   00003E                     	ds	1
   207   00003F                     led_turn_off@F3058:
   208                           	callstack 0
   209   00003F                     	ds	1
   210   000040                     led_turn_on@F3053:
   211                           	callstack 0
   212   000040                     	ds	1
   213   000041                     led_intialize@F3048:
   214                           	callstack 0
   215   000041                     	ds	1
   216                           
   217                           	psect	dataCOMRAM
   218   000001                     __pdataCOMRAM:
   219                           	callstack 0
   220   000001                     _PORT_REG:
   221                           	callstack 0
   222   000001                     	ds	10
   223   00000B                     _TRIS_REG:
   224                           	callstack 0
   225   00000B                     	ds	10
   226   000015                     _LAT_REG:
   227                           	callstack 0
   228   000015                     	ds	10
   229   00001F                     _seg_1:
   230                           	callstack 0
   231   00001F                     	ds	5
   232   000024                     _control_pin_4:
   233                           	callstack 0
   234   000024                     	ds	1
   235   000025                     _control_pin_3:
   236                           	callstack 0
   237   000025                     	ds	1
   238   000026                     _control_pin_2:
   239                           	callstack 0
   240   000026                     	ds	1
   241   000027                     _control_pin_1:
   242                           	callstack 0
   243   000027                     	ds	1
   244                           
   245                           	psect	cstackCOMRAM
   246   000028                     __pcstackCOMRAM:
   247                           	callstack 0
   248   000028                     ?___awdiv:
   249                           	callstack 0
   250   000028                     ?___awmod:
   251                           	callstack 0
   252   000028                     gpio_port_write_logic@LOG:
   253                           	callstack 0
   254   000028                     gpio_pin_direction_intialize@str:
   255                           	callstack 0
   256   000028                     gpio_pin_write_logic@str:
   257                           	callstack 0
   258   000028                     ___awdiv@dividend:
   259                           	callstack 0
   260   000028                     ___awmod@dividend:
   261                           	callstack 0
   262                           
   263                           ; 2 bytes @ 0x0
   264   000028                     	ds	1
   265   000029                     ??_gpio_port_write_logic:
   266                           
   267                           ; 1 bytes @ 0x1
   268   000029                     	ds	1
   269   00002A                     ??_gpio_pin_direction_intialize:
   270   00002A                     gpio_pin_write_logic@LOG:
   271                           	callstack 0
   272   00002A                     ___awdiv@divisor:
   273                           	callstack 0
   274   00002A                     ___awmod@divisor:
   275                           	callstack 0
   276                           
   277                           ; 2 bytes @ 0x2
   278   00002A                     	ds	1
   279   00002B                     ??_gpio_pin_write_logic:
   280   00002B                     gpio_port_write_logic@PORT:
   281                           	callstack 0
   282                           
   283                           ; 1 bytes @ 0x3
   284   00002B                     	ds	1
   285   00002C                     ___awdiv@counter:
   286                           	callstack 0
   287   00002C                     ___awmod@counter:
   288                           	callstack 0
   289                           
   290                           ; 1 bytes @ 0x4
   291   00002C                     	ds	1
   292   00002D                     ___awdiv@sign:
   293                           	callstack 0
   294   00002D                     ___awmod@sign:
   295                           	callstack 0
   296                           
   297                           ; 1 bytes @ 0x5
   298   00002D                     	ds	1
   299   00002E                     ___awdiv@quotient:
   300                           	callstack 0
   301                           
   302                           ; 2 bytes @ 0x6
   303   00002E                     	ds	3
   304   000031                     gpio_pin_intialize@str:
   305                           	callstack 0
   306   000031                     seg_7_pins_write@_seg_:
   307                           	callstack 0
   308                           
   309                           ; 2 bytes @ 0x9
   310   000031                     	ds	2
   311   000033                     ??_gpio_pin_intialize:
   312   000033                     seg_7_pins_write@number:
   313                           	callstack 0
   314                           
   315                           ; 1 bytes @ 0xB
   316   000033                     	ds	1
   317   000034                     gpio_pin_intialize@ret:
   318                           	callstack 0
   319   000034                     seg_7_pins_write@ret:
   320                           	callstack 0
   321                           
   322                           ; 1 bytes @ 0xC
   323   000034                     	ds	1
   324   000035                     seg_7_pins_intialize@_seg_:
   325                           	callstack 0
   326                           
   327                           ; 2 bytes @ 0xD
   328   000035                     	ds	2
   329   000037                     seg_7_pins_intialize@ret:
   330                           	callstack 0
   331                           
   332                           ; 1 bytes @ 0xF
   333   000037                     	ds	1
   334   000038                     ??_main:
   335                           
   336                           ; 1 bytes @ 0x10
   337   000038                     	ds	1
   338                           
   339 ;;
   340 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   341 ;;
   342 ;; *************** function _main *****************
   343 ;; Defined at:
   344 ;;		line 76 in file "Application.c"
   345 ;; Parameters:    Size  Location     Type
   346 ;;		None
   347 ;; Auto vars:     Size  Location     Type
   348 ;;		None
   349 ;; Return value:  Size  Location     Type
   350 ;;                  2  239[None  ] int 
   351 ;; Registers used:
   352 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   353 ;; Tracked objects:
   354 ;;		On entry : 0/0
   355 ;;		On exit  : 0/0
   356 ;;		Unchanged: 0/0
   357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   360 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   361 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   362 ;;Total ram usage:        1 bytes
   363 ;; Hardware stack levels required when called: 3
   364 ;; This function calls:
   365 ;;		___awdiv
   366 ;;		___awmod
   367 ;;		_gpio_pin_intialize
   368 ;;		_gpio_port_write_logic
   369 ;;		_seg_7_pins_intialize
   370 ;;		_seg_7_pins_write
   371 ;; This function is called by:
   372 ;;		Startup code after reset
   373 ;; This function uses a non-reentrant model
   374 ;;
   375                           
   376                           	psect	text0
   377   00FE3C                     __ptext0:
   378                           	callstack 0
   379   00FE3C                     _main:
   380                           	callstack 28
   381   00FE3C                     
   382                           ;Application.c: 78:     ret = seg_7_pins_intialize(&seg_1);
   383   00FE3C  0E1F               	movlw	low _seg_1
   384   00FE3E  6E35               	movwf	seg_7_pins_intialize@_seg_^0,c
   385   00FE40  0E00               	movlw	high _seg_1
   386   00FE42  6E36               	movwf	(seg_7_pins_intialize@_seg_+1)^0,c
   387   00FE44  EC96  F07C         	call	_seg_7_pins_intialize	;wreg free
   388   00FE48  6E43               	movwf	_ret^0,c
   389                           
   390                           ;Application.c: 80:     ret = gpio_pin_intialize(&control_pin_1);
   391   00FE4A  0E27               	movlw	low _control_pin_1
   392   00FE4C  6E31               	movwf	gpio_pin_intialize@str^0,c
   393   00FE4E  0E00               	movlw	high _control_pin_1
   394   00FE50  6E32               	movwf	(gpio_pin_intialize@str+1)^0,c
   395   00FE52  ECC7  F07C         	call	_gpio_pin_intialize	;wreg free
   396   00FE56  6E43               	movwf	_ret^0,c
   397                           
   398                           ;Application.c: 81:     ret = gpio_pin_intialize(&control_pin_2);
   399   00FE58  0E26               	movlw	low _control_pin_2
   400   00FE5A  6E31               	movwf	gpio_pin_intialize@str^0,c
   401   00FE5C  0E00               	movlw	high _control_pin_2
   402   00FE5E  6E32               	movwf	(gpio_pin_intialize@str+1)^0,c
   403   00FE60  ECC7  F07C         	call	_gpio_pin_intialize	;wreg free
   404   00FE64  6E43               	movwf	_ret^0,c
   405                           
   406                           ;Application.c: 82:     ret = gpio_pin_intialize(&control_pin_3);
   407   00FE66  0E25               	movlw	low _control_pin_3
   408   00FE68  6E31               	movwf	gpio_pin_intialize@str^0,c
   409   00FE6A  0E00               	movlw	high _control_pin_3
   410   00FE6C  6E32               	movwf	(gpio_pin_intialize@str+1)^0,c
   411   00FE6E  ECC7  F07C         	call	_gpio_pin_intialize	;wreg free
   412   00FE72  6E43               	movwf	_ret^0,c
   413                           
   414                           ;Application.c: 83:     ret = gpio_pin_intialize(&control_pin_4);
   415   00FE74  0E24               	movlw	low _control_pin_4
   416   00FE76  6E31               	movwf	gpio_pin_intialize@str^0,c
   417   00FE78  0E00               	movlw	high _control_pin_4
   418   00FE7A  6E32               	movwf	(gpio_pin_intialize@str+1)^0,c
   419   00FE7C  ECC7  F07C         	call	_gpio_pin_intialize	;wreg free
   420   00FE80  6E43               	movwf	_ret^0,c
   421   00FE82                     l1763:
   422                           
   423                           ;Application.c: 88:         for(counter=0;counter<50;counter++){
   424   00FE82  0E00               	movlw	0
   425   00FE84  6E42               	movwf	_counter^0,c
   426   00FE86                     l1769:
   427                           
   428                           ;Application.c: 90:             ret = seg_7_pins_write(&seg_1 , (uint8)(mins/10));
   429   00FE86  0E1F               	movlw	low _seg_1
   430   00FE88  6E31               	movwf	seg_7_pins_write@_seg_^0,c
   431   00FE8A  0E00               	movlw	high _seg_1
   432   00FE8C  6E32               	movwf	(seg_7_pins_write@_seg_+1)^0,c
   433   00FE8E  C03A  F028         	movff	_mins,___awdiv@dividend
   434   00FE92  6A29               	clrf	(___awdiv@dividend+1)^0,c
   435   00FE94  0E00               	movlw	0
   436   00FE96  6E2B               	movwf	(___awdiv@divisor+1)^0,c
   437   00FE98  0E0A               	movlw	10
   438   00FE9A  6E2A               	movwf	___awdiv@divisor^0,c
   439   00FE9C  EC9D  F07D         	call	___awdiv	;wreg free
   440   00FEA0  5028               	movf	?___awdiv^0,w,c
   441   00FEA2  6E33               	movwf	seg_7_pins_write@number^0,c
   442   00FEA4  ECFB  F07C         	call	_seg_7_pins_write	;wreg free
   443   00FEA8  6E43               	movwf	_ret^0,c
   444                           
   445                           ;Application.c: 91:             ret = gpio_port_write_logic(&control_pin_1 , GPIO_HIGH);
   446   00FEAA  0E01               	movlw	1
   447   00FEAC  6E28               	movwf	gpio_port_write_logic@LOG^0,c
   448   00FEAE  0E27               	movlw	_control_pin_1& (0+255)
   449   00FEB0  EC77  F07C         	call	_gpio_port_write_logic
   450   00FEB4  6E43               	movwf	_ret^0,c
   451   00FEB6                     
   452                           ;Application.c: 92:             _delay((unsigned long)((10)*(8000000U/4000.0)));
   453   00FEB6  0E1A               	movlw	26
   454   00FEB8  6E38               	movwf	??_main^0,c
   455   00FEBA  0EF8               	movlw	248
   456   00FEBC                     u1347:
   457   00FEBC  2EE8               	decfsz	wreg,f,c
   458   00FEBE  D7FE               	bra	u1347
   459   00FEC0  2E38               	decfsz	??_main^0,f,c
   460   00FEC2  D7FC               	bra	u1347
   461   00FEC4  D000               	nop2	
   462   00FEC6                     
   463                           ;Application.c: 93:             ret = gpio_port_write_logic(&control_pin_1 , GPIO_LOW);
   464   00FEC6  0E00               	movlw	0
   465   00FEC8  6E28               	movwf	gpio_port_write_logic@LOG^0,c
   466   00FECA  0E27               	movlw	_control_pin_1& (0+255)
   467   00FECC  EC77  F07C         	call	_gpio_port_write_logic
   468   00FED0  6E43               	movwf	_ret^0,c
   469   00FED2                     
   470                           ;Application.c: 95:             ret = seg_7_pins_write(&seg_1 , (uint8)(mins%10));
   471   00FED2  0E1F               	movlw	low _seg_1
   472   00FED4  6E31               	movwf	seg_7_pins_write@_seg_^0,c
   473   00FED6  0E00               	movlw	high _seg_1
   474   00FED8  6E32               	movwf	(seg_7_pins_write@_seg_+1)^0,c
   475   00FEDA  C03A  F028         	movff	_mins,___awmod@dividend
   476   00FEDE  6A29               	clrf	(___awmod@dividend+1)^0,c
   477   00FEE0  0E00               	movlw	0
   478   00FEE2  6E2B               	movwf	(___awmod@divisor+1)^0,c
   479   00FEE4  0E0A               	movlw	10
   480   00FEE6  6E2A               	movwf	___awmod@divisor^0,c
   481   00FEE8  EC45  F07D         	call	___awmod	;wreg free
   482   00FEEC  5028               	movf	?___awmod^0,w,c
   483   00FEEE  6E33               	movwf	seg_7_pins_write@number^0,c
   484   00FEF0  ECFB  F07C         	call	_seg_7_pins_write	;wreg free
   485   00FEF4  6E43               	movwf	_ret^0,c
   486   00FEF6                     
   487                           ;Application.c: 96:             ret = gpio_port_write_logic(&control_pin_2 , GPIO_HIGH);
   488   00FEF6  0E01               	movlw	1
   489   00FEF8  6E28               	movwf	gpio_port_write_logic@LOG^0,c
   490   00FEFA  0E26               	movlw	_control_pin_2& (0+255)
   491   00FEFC  EC77  F07C         	call	_gpio_port_write_logic
   492   00FF00  6E43               	movwf	_ret^0,c
   493                           
   494                           ;Application.c: 97:             _delay((unsigned long)((10)*(8000000U/4000.0)));
   495   00FF02  0E1A               	movlw	26
   496   00FF04  6E38               	movwf	??_main^0,c
   497   00FF06  0EF8               	movlw	248
   498   00FF08                     u1357:
   499   00FF08  2EE8               	decfsz	wreg,f,c
   500   00FF0A  D7FE               	bra	u1357
   501   00FF0C  2E38               	decfsz	??_main^0,f,c
   502   00FF0E  D7FC               	bra	u1357
   503   00FF10  D000               	nop2	
   504   00FF12                     
   505                           ;Application.c: 98:             ret = gpio_port_write_logic(&control_pin_2 , GPIO_LOW);
   506   00FF12  0E00               	movlw	0
   507   00FF14  6E28               	movwf	gpio_port_write_logic@LOG^0,c
   508   00FF16  0E26               	movlw	_control_pin_2& (0+255)
   509   00FF18  EC77  F07C         	call	_gpio_port_write_logic
   510   00FF1C  6E43               	movwf	_ret^0,c
   511   00FF1E                     
   512                           ;Application.c: 101:             ret = seg_7_pins_write(&seg_1 , (uint8)(secs/10));
   513   00FF1E  0E1F               	movlw	low _seg_1
   514   00FF20  6E31               	movwf	seg_7_pins_write@_seg_^0,c
   515   00FF22  0E00               	movlw	high _seg_1
   516   00FF24  6E32               	movwf	(seg_7_pins_write@_seg_+1)^0,c
   517   00FF26  C039  F028         	movff	_secs,___awdiv@dividend
   518   00FF2A  6A29               	clrf	(___awdiv@dividend+1)^0,c
   519   00FF2C  0E00               	movlw	0
   520   00FF2E  6E2B               	movwf	(___awdiv@divisor+1)^0,c
   521   00FF30  0E0A               	movlw	10
   522   00FF32  6E2A               	movwf	___awdiv@divisor^0,c
   523   00FF34  EC9D  F07D         	call	___awdiv	;wreg free
   524   00FF38  5028               	movf	?___awdiv^0,w,c
   525   00FF3A  6E33               	movwf	seg_7_pins_write@number^0,c
   526   00FF3C  ECFB  F07C         	call	_seg_7_pins_write	;wreg free
   527   00FF40  6E43               	movwf	_ret^0,c
   528   00FF42                     
   529                           ;Application.c: 102:             ret = gpio_port_write_logic(&control_pin_3 , GPIO_HIGH)
      +                          ;
   530   00FF42  0E01               	movlw	1
   531   00FF44  6E28               	movwf	gpio_port_write_logic@LOG^0,c
   532   00FF46  0E25               	movlw	_control_pin_3& (0+255)
   533   00FF48  EC77  F07C         	call	_gpio_port_write_logic
   534   00FF4C  6E43               	movwf	_ret^0,c
   535   00FF4E                     
   536                           ;Application.c: 103:             _delay((unsigned long)((10)*(8000000U/4000.0)));
   537   00FF4E  0E1A               	movlw	26
   538   00FF50  6E38               	movwf	??_main^0,c
   539   00FF52  0EF8               	movlw	248
   540   00FF54                     u1367:
   541   00FF54  2EE8               	decfsz	wreg,f,c
   542   00FF56  D7FE               	bra	u1367
   543   00FF58  2E38               	decfsz	??_main^0,f,c
   544   00FF5A  D7FC               	bra	u1367
   545   00FF5C  D000               	nop2	
   546                           
   547                           ;Application.c: 104:             ret = gpio_port_write_logic(&control_pin_3 , GPIO_LOW);
   548   00FF5E  0E00               	movlw	0
   549   00FF60  6E28               	movwf	gpio_port_write_logic@LOG^0,c
   550   00FF62  0E25               	movlw	_control_pin_3& (0+255)
   551   00FF64  EC77  F07C         	call	_gpio_port_write_logic
   552   00FF68  6E43               	movwf	_ret^0,c
   553                           
   554                           ;Application.c: 106:             ret = seg_7_pins_write(&seg_1 , (uint8)(secs%10));
   555   00FF6A  0E1F               	movlw	low _seg_1
   556   00FF6C  6E31               	movwf	seg_7_pins_write@_seg_^0,c
   557   00FF6E  0E00               	movlw	high _seg_1
   558   00FF70  6E32               	movwf	(seg_7_pins_write@_seg_+1)^0,c
   559   00FF72  C039  F028         	movff	_secs,___awmod@dividend
   560   00FF76  6A29               	clrf	(___awmod@dividend+1)^0,c
   561   00FF78  0E00               	movlw	0
   562   00FF7A  6E2B               	movwf	(___awmod@divisor+1)^0,c
   563   00FF7C  0E0A               	movlw	10
   564   00FF7E  6E2A               	movwf	___awmod@divisor^0,c
   565   00FF80  EC45  F07D         	call	___awmod	;wreg free
   566   00FF84  5028               	movf	?___awmod^0,w,c
   567   00FF86  6E33               	movwf	seg_7_pins_write@number^0,c
   568   00FF88  ECFB  F07C         	call	_seg_7_pins_write	;wreg free
   569   00FF8C  6E43               	movwf	_ret^0,c
   570                           
   571                           ;Application.c: 107:             ret = gpio_port_write_logic(&control_pin_4 , GPIO_HIGH)
      +                          ;
   572   00FF8E  0E01               	movlw	1
   573   00FF90  6E28               	movwf	gpio_port_write_logic@LOG^0,c
   574   00FF92  0E24               	movlw	_control_pin_4& (0+255)
   575   00FF94  EC77  F07C         	call	_gpio_port_write_logic
   576   00FF98  6E43               	movwf	_ret^0,c
   577   00FF9A                     
   578                           ;Application.c: 108:             _delay((unsigned long)((10)*(8000000U/4000.0)));
   579   00FF9A  0E1A               	movlw	26
   580   00FF9C  6E38               	movwf	??_main^0,c
   581   00FF9E  0EF8               	movlw	248
   582   00FFA0                     u1377:
   583   00FFA0  2EE8               	decfsz	wreg,f,c
   584   00FFA2  D7FE               	bra	u1377
   585   00FFA4  2E38               	decfsz	??_main^0,f,c
   586   00FFA6  D7FC               	bra	u1377
   587   00FFA8  D000               	nop2	
   588   00FFAA                     
   589                           ;Application.c: 109:             ret = gpio_port_write_logic(&control_pin_4 , GPIO_LOW);
   590   00FFAA  0E00               	movlw	0
   591   00FFAC  6E28               	movwf	gpio_port_write_logic@LOG^0,c
   592   00FFAE  0E24               	movlw	_control_pin_4& (0+255)
   593   00FFB0  EC77  F07C         	call	_gpio_port_write_logic
   594   00FFB4  6E43               	movwf	_ret^0,c
   595   00FFB6                     
   596                           ;Application.c: 110:         }
   597   00FFB6  2A42               	incf	_counter^0,f,c
   598   00FFB8  0E31               	movlw	49
   599   00FFBA  6442               	cpfsgt	_counter^0,c
   600   00FFBC  EFE2  F07F         	goto	u1271
   601   00FFC0  EFE4  F07F         	goto	u1270
   602   00FFC4                     u1271:
   603   00FFC4  EF43  F07F         	goto	l1769
   604   00FFC8                     u1270:
   605   00FFC8                     
   606                           ;Application.c: 112:         secs++;
   607   00FFC8  2A39               	incf	_secs^0,f,c
   608   00FFCA                     
   609                           ;Application.c: 114:         if(60 == secs){
   610   00FFCA  0E3C               	movlw	60
   611   00FFCC  1839               	xorwf	_secs^0,w,c
   612   00FFCE  A4D8               	btfss	status,2,c
   613   00FFD0  EFEC  F07F         	goto	u1281
   614   00FFD4  EFEE  F07F         	goto	u1280
   615   00FFD8                     u1281:
   616   00FFD8  EFF1  F07F         	goto	l1801
   617   00FFDC                     u1280:
   618   00FFDC                     
   619                           ;Application.c: 115:             secs = 0;
   620   00FFDC  0E00               	movlw	0
   621   00FFDE  6E39               	movwf	_secs^0,c
   622   00FFE0                     
   623                           ;Application.c: 116:             mins++;
   624   00FFE0  2A3A               	incf	_mins^0,f,c
   625   00FFE2                     l1801:
   626                           
   627                           ;Application.c: 119:         if(60 == mins){
   628   00FFE2  0E3C               	movlw	60
   629   00FFE4  183A               	xorwf	_mins^0,w,c
   630   00FFE6  A4D8               	btfss	status,2,c
   631   00FFE8  EFF8  F07F         	goto	u1291
   632   00FFEC  EFFA  F07F         	goto	u1290
   633   00FFF0                     u1291:
   634   00FFF0  EF41  F07F         	goto	l1763
   635   00FFF4                     u1290:
   636   00FFF4                     
   637                           ;Application.c: 120:             mins = 0;
   638   00FFF4  0E00               	movlw	0
   639   00FFF6  6E3A               	movwf	_mins^0,c
   640   00FFF8  EF41  F07F         	goto	l1763
   641   00FFFC  EF00  F000         	goto	start
   642   010000                     __end_of_main:
   643                           	callstack 0
   644                           
   645 ;; *************** function _seg_7_pins_write *****************
   646 ;; Defined at:
   647 ;;		line 29 in file "ECU_Layer/SEG_7/Seg_7.c"
   648 ;; Parameters:    Size  Location     Type
   649 ;;  _seg_           2    9[COMRAM] PTR struct .
   650 ;;		 -> seg_1(5), 
   651 ;;  number          1   11[COMRAM] unsigned char 
   652 ;; Auto vars:     Size  Location     Type
   653 ;;  ret             1   12[COMRAM] unsigned char 
   654 ;; Return value:  Size  Location     Type
   655 ;;                  1    wreg      unsigned char 
   656 ;; Registers used:
   657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   658 ;; Tracked objects:
   659 ;;		On entry : 0/0
   660 ;;		On exit  : 0/0
   661 ;;		Unchanged: 0/0
   662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   663 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   664 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   666 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   667 ;;Total ram usage:        4 bytes
   668 ;; Hardware stack levels used: 1
   669 ;; Hardware stack levels required when called: 1
   670 ;; This function calls:
   671 ;;		_gpio_pin_write_logic
   672 ;; This function is called by:
   673 ;;		_main
   674 ;; This function uses a non-reentrant model
   675 ;;
   676                           
   677                           	psect	text1
   678   00F9F6                     __ptext1:
   679                           	callstack 0
   680   00F9F6                     _seg_7_pins_write:
   681                           	callstack 29
   682   00F9F6                     
   683                           ;ECU_Layer/SEG_7/Seg_7.c: 33:     if(((void*)0) == _seg_ || (number > 9)){;ECU_Layer/SEG
      +                          _7/Seg_7.c: 33:     if(((void*)0) == _seg_ || (number > 9)){
   684   00F9F6  5031               	movf	seg_7_pins_write@_seg_^0,w,c
   685   00F9F8  1032               	iorwf	(seg_7_pins_write@_seg_+1)^0,w,c
   686   00F9FA  B4D8               	btfsc	status,2,c
   687   00F9FC  EF02  F07D         	goto	u941
   688   00FA00  EF04  F07D         	goto	u940
   689   00FA04                     u941:
   690   00FA04  EF0C  F07D         	goto	l1561
   691   00FA08                     u940:
   692   00FA08  0E09               	movlw	9
   693   00FA0A  6433               	cpfsgt	seg_7_pins_write@number^0,c
   694   00FA0C  EF0A  F07D         	goto	u951
   695   00FA10  EF0C  F07D         	goto	u950
   696   00FA14                     u951:
   697   00FA14  EF10  F07D         	goto	l1563
   698   00FA18                     u950:
   699   00FA18                     l1561:
   700                           
   701                           ;ECU_Layer/SEG_7/Seg_7.c: 34:         ret = (Std_ReturnType)0x01;;ECU_Layer/SEG_7/Seg_7.
      +                          c: 34:         ret = (Std_ReturnType)0x01;
   702   00FA18  0E01               	movlw	1
   703   00FA1A  6E34               	movwf	seg_7_pins_write@ret^0,c
   704                           
   705                           ;ECU_Layer/SEG_7/Seg_7.c: 35:     };ECU_Layer/SEG_7/Seg_7.c: 35:     }
   706   00FA1C  EF43  F07D         	goto	l1565
   707   00FA20                     l1563:
   708                           
   709                           ;ECU_Layer/SEG_7/Seg_7.c: 38:         ret = gpio_pin_write_logic(&(_seg_->SEG_PINS[0]) ,
      +                           number & 0x01);;ECU_Layer/SEG_7/Seg_7.c: 38:         ret = gpio_pin_write_logic(&(_seg_
      +                          ->SEG_PINS[0]) , number & 0x01);
   710   00FA20  C031  F028         	movff	seg_7_pins_write@_seg_,gpio_pin_write_logic@str
   711   00FA24  C032  F029         	movff	seg_7_pins_write@_seg_+1,gpio_pin_write_logic@str+1
   712   00FA28  5033               	movf	seg_7_pins_write@number^0,w,c
   713   00FA2A  0B01               	andlw	1
   714   00FA2C  6E2A               	movwf	gpio_pin_write_logic@LOG^0,c
   715   00FA2E  EC8E  F07E         	call	_gpio_pin_write_logic	;wreg free
   716   00FA32  6E34               	movwf	seg_7_pins_write@ret^0,c
   717                           
   718                           ;ECU_Layer/SEG_7/Seg_7.c: 39:         ret = gpio_pin_write_logic(&(_seg_->SEG_PINS[1]) ,
      +                           (number>>1) & 0x01);;ECU_Layer/SEG_7/Seg_7.c: 39:         ret = gpio_pin_write_logic(&(
      +                          _seg_->SEG_PINS[1]) , (number>>1) & 0x01);
   719   00FA34  0E01               	movlw	1
   720   00FA36  2431               	addwf	seg_7_pins_write@_seg_^0,w,c
   721   00FA38  6E28               	movwf	gpio_pin_write_logic@str^0,c
   722   00FA3A  0E00               	movlw	0
   723   00FA3C  2032               	addwfc	(seg_7_pins_write@_seg_+1)^0,w,c
   724   00FA3E  6E29               	movwf	(gpio_pin_write_logic@str+1)^0,c
   725   00FA40  90D8               	bcf	status,0,c
   726   00FA42  3033               	rrcf	seg_7_pins_write@number^0,w,c
   727   00FA44  0B01               	andlw	1
   728   00FA46  6E2A               	movwf	gpio_pin_write_logic@LOG^0,c
   729   00FA48  EC8E  F07E         	call	_gpio_pin_write_logic	;wreg free
   730   00FA4C  6E34               	movwf	seg_7_pins_write@ret^0,c
   731                           
   732                           ;ECU_Layer/SEG_7/Seg_7.c: 40:         ret = gpio_pin_write_logic(&(_seg_->SEG_PINS[2]) ,
      +                           (number>>2) & 0x01);;ECU_Layer/SEG_7/Seg_7.c: 40:         ret = gpio_pin_write_logic(&(
      +                          _seg_->SEG_PINS[2]) , (number>>2) & 0x01);
   733   00FA4E  0E02               	movlw	2
   734   00FA50  2431               	addwf	seg_7_pins_write@_seg_^0,w,c
   735   00FA52  6E28               	movwf	gpio_pin_write_logic@str^0,c
   736   00FA54  0E00               	movlw	0
   737   00FA56  2032               	addwfc	(seg_7_pins_write@_seg_+1)^0,w,c
   738   00FA58  6E29               	movwf	(gpio_pin_write_logic@str+1)^0,c
   739   00FA5A  4033               	rrncf	seg_7_pins_write@number^0,w,c
   740   00FA5C  42E8               	rrncf	wreg,f,c
   741   00FA5E  0B3F               	andlw	63
   742   00FA60  0B01               	andlw	1
   743   00FA62  6E2A               	movwf	gpio_pin_write_logic@LOG^0,c
   744   00FA64  EC8E  F07E         	call	_gpio_pin_write_logic	;wreg free
   745   00FA68  6E34               	movwf	seg_7_pins_write@ret^0,c
   746                           
   747                           ;ECU_Layer/SEG_7/Seg_7.c: 41:         ret = gpio_pin_write_logic(&(_seg_->SEG_PINS[3]) ,
      +                           (number>>3) & 0x01);;ECU_Layer/SEG_7/Seg_7.c: 41:         ret = gpio_pin_write_logic(&(
      +                          _seg_->SEG_PINS[3]) , (number>>3) & 0x01);
   748   00FA6A  0E03               	movlw	3
   749   00FA6C  2431               	addwf	seg_7_pins_write@_seg_^0,w,c
   750   00FA6E  6E28               	movwf	gpio_pin_write_logic@str^0,c
   751   00FA70  0E00               	movlw	0
   752   00FA72  2032               	addwfc	(seg_7_pins_write@_seg_+1)^0,w,c
   753   00FA74  6E29               	movwf	(gpio_pin_write_logic@str+1)^0,c
   754   00FA76  3833               	swapf	seg_7_pins_write@number^0,w,c
   755   00FA78  46E8               	rlncf	wreg,f,c
   756   00FA7A  0B1F               	andlw	31
   757   00FA7C  0B01               	andlw	1
   758   00FA7E  6E2A               	movwf	gpio_pin_write_logic@LOG^0,c
   759   00FA80  EC8E  F07E         	call	_gpio_pin_write_logic	;wreg free
   760   00FA84  6E34               	movwf	seg_7_pins_write@ret^0,c
   761   00FA86                     l1565:
   762                           
   763                           ;ECU_Layer/SEG_7/Seg_7.c: 44:     return ret;;ECU_Layer/SEG_7/Seg_7.c: 44:     return re
      +                          t;
   764   00FA86  5034               	movf	seg_7_pins_write@ret^0,w,c
   765   00FA88  0012               	return		;funcret
   766   00FA8A                     __end_of_seg_7_pins_write:
   767                           	callstack 0
   768                           
   769 ;; *************** function _seg_7_pins_intialize *****************
   770 ;; Defined at:
   771 ;;		line 11 in file "ECU_Layer/SEG_7/Seg_7.c"
   772 ;; Parameters:    Size  Location     Type
   773 ;;  _seg_           2   13[COMRAM] PTR struct .
   774 ;;		 -> seg_1(5), 
   775 ;; Auto vars:     Size  Location     Type
   776 ;;  ret             1   15[COMRAM] unsigned char 
   777 ;; Return value:  Size  Location     Type
   778 ;;                  1    wreg      unsigned char 
   779 ;; Registers used:
   780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   781 ;; Tracked objects:
   782 ;;		On entry : 0/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   786 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   787 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   789 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   790 ;;Total ram usage:        3 bytes
   791 ;; Hardware stack levels used: 1
   792 ;; Hardware stack levels required when called: 2
   793 ;; This function calls:
   794 ;;		_gpio_pin_intialize
   795 ;; This function is called by:
   796 ;;		_main
   797 ;; This function uses a non-reentrant model
   798 ;;
   799                           
   800                           	psect	text2
   801   00F92C                     __ptext2:
   802                           	callstack 0
   803   00F92C                     _seg_7_pins_intialize:
   804                           	callstack 28
   805   00F92C                     
   806                           ;ECU_Layer/SEG_7/Seg_7.c: 15:     if(((void*)0) == _seg_){;ECU_Layer/SEG_7/Seg_7.c: 15: 
      +                              if(((void*)0) == _seg_){
   807   00F92C  5035               	movf	seg_7_pins_intialize@_seg_^0,w,c
   808   00F92E  1036               	iorwf	(seg_7_pins_intialize@_seg_+1)^0,w,c
   809   00F930  A4D8               	btfss	status,2,c
   810   00F932  EF9D  F07C         	goto	u931
   811   00F936  EF9F  F07C         	goto	u930
   812   00F93A                     u931:
   813   00F93A  EFA3  F07C         	goto	l1549
   814   00F93E                     u930:
   815   00F93E                     
   816                           ;ECU_Layer/SEG_7/Seg_7.c: 16:         ret = (Std_ReturnType)0x01;;ECU_Layer/SEG_7/Seg_7.
      +                          c: 16:         ret = (Std_ReturnType)0x01;
   817   00F93E  0E01               	movlw	1
   818   00F940  6E37               	movwf	seg_7_pins_intialize@ret^0,c
   819                           
   820                           ;ECU_Layer/SEG_7/Seg_7.c: 17:     };ECU_Layer/SEG_7/Seg_7.c: 17:     }
   821   00F942  EFC5  F07C         	goto	l1551
   822   00F946                     l1549:
   823                           
   824                           ;ECU_Layer/SEG_7/Seg_7.c: 20:         ret = gpio_pin_intialize(&(_seg_->SEG_PINS[0]));;E
      +                          CU_Layer/SEG_7/Seg_7.c: 20:         ret = gpio_pin_intialize(&(_seg_->SEG_PINS[0]));
   825   00F946  C035  F031         	movff	seg_7_pins_intialize@_seg_,gpio_pin_intialize@str
   826   00F94A  C036  F032         	movff	seg_7_pins_intialize@_seg_+1,gpio_pin_intialize@str+1
   827   00F94E  ECC7  F07C         	call	_gpio_pin_intialize	;wreg free
   828   00F952  6E37               	movwf	seg_7_pins_intialize@ret^0,c
   829                           
   830                           ;ECU_Layer/SEG_7/Seg_7.c: 21:         ret = gpio_pin_intialize(&(_seg_->SEG_PINS[1]));;E
      +                          CU_Layer/SEG_7/Seg_7.c: 21:         ret = gpio_pin_intialize(&(_seg_->SEG_PINS[1]));
   831   00F954  0E01               	movlw	1
   832   00F956  2435               	addwf	seg_7_pins_intialize@_seg_^0,w,c
   833   00F958  6E31               	movwf	gpio_pin_intialize@str^0,c
   834   00F95A  0E00               	movlw	0
   835   00F95C  2036               	addwfc	(seg_7_pins_intialize@_seg_+1)^0,w,c
   836   00F95E  6E32               	movwf	(gpio_pin_intialize@str+1)^0,c
   837   00F960  ECC7  F07C         	call	_gpio_pin_intialize	;wreg free
   838   00F964  6E37               	movwf	seg_7_pins_intialize@ret^0,c
   839                           
   840                           ;ECU_Layer/SEG_7/Seg_7.c: 22:         ret = gpio_pin_intialize(&(_seg_->SEG_PINS[2]));;E
      +                          CU_Layer/SEG_7/Seg_7.c: 22:         ret = gpio_pin_intialize(&(_seg_->SEG_PINS[2]));
   841   00F966  0E02               	movlw	2
   842   00F968  2435               	addwf	seg_7_pins_intialize@_seg_^0,w,c
   843   00F96A  6E31               	movwf	gpio_pin_intialize@str^0,c
   844   00F96C  0E00               	movlw	0
   845   00F96E  2036               	addwfc	(seg_7_pins_intialize@_seg_+1)^0,w,c
   846   00F970  6E32               	movwf	(gpio_pin_intialize@str+1)^0,c
   847   00F972  ECC7  F07C         	call	_gpio_pin_intialize	;wreg free
   848   00F976  6E37               	movwf	seg_7_pins_intialize@ret^0,c
   849                           
   850                           ;ECU_Layer/SEG_7/Seg_7.c: 23:         ret = gpio_pin_intialize(&(_seg_->SEG_PINS[3]));;E
      +                          CU_Layer/SEG_7/Seg_7.c: 23:         ret = gpio_pin_intialize(&(_seg_->SEG_PINS[3]));
   851   00F978  0E03               	movlw	3
   852   00F97A  2435               	addwf	seg_7_pins_intialize@_seg_^0,w,c
   853   00F97C  6E31               	movwf	gpio_pin_intialize@str^0,c
   854   00F97E  0E00               	movlw	0
   855   00F980  2036               	addwfc	(seg_7_pins_intialize@_seg_+1)^0,w,c
   856   00F982  6E32               	movwf	(gpio_pin_intialize@str+1)^0,c
   857   00F984  ECC7  F07C         	call	_gpio_pin_intialize	;wreg free
   858   00F988  6E37               	movwf	seg_7_pins_intialize@ret^0,c
   859   00F98A                     l1551:
   860                           
   861                           ;ECU_Layer/SEG_7/Seg_7.c: 26:     return ret;;ECU_Layer/SEG_7/Seg_7.c: 26:     return re
      +                          t;
   862   00F98A  5037               	movf	seg_7_pins_intialize@ret^0,w,c
   863   00F98C  0012               	return		;funcret
   864   00F98E                     __end_of_seg_7_pins_intialize:
   865                           	callstack 0
   866                           
   867 ;; *************** function _gpio_pin_intialize *****************
   868 ;; Defined at:
   869 ;;		line 108 in file "MCAL_Layer/GPIO/hal_gpio.c"
   870 ;; Parameters:    Size  Location     Type
   871 ;;  str             2    9[COMRAM] PTR const struct .
   872 ;;		 -> control_pin_4(1), control_pin_3(1), control_pin_2(1), control_pin_1(1), 
   873 ;;		 -> seg_1.SEG_PINS(4), seg_1(5), relay_initialize@rel_pin(1), led_intialize@LED_IN(1), 
   874 ;; Auto vars:     Size  Location     Type
   875 ;;  ret             1   12[COMRAM] unsigned char 
   876 ;; Return value:  Size  Location     Type
   877 ;;                  1    wreg      unsigned char 
   878 ;; Registers used:
   879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   880 ;; Tracked objects:
   881 ;;		On entry : 0/0
   882 ;;		On exit  : 0/0
   883 ;;		Unchanged: 0/0
   884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   885 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   886 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   887 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   888 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   889 ;;Total ram usage:        4 bytes
   890 ;; Hardware stack levels used: 1
   891 ;; Hardware stack levels required when called: 1
   892 ;; This function calls:
   893 ;;		_gpio_pin_direction_intialize
   894 ;;		_gpio_pin_write_logic
   895 ;; This function is called by:
   896 ;;		_main
   897 ;;		_seg_7_pins_intialize
   898 ;;		_led_intialize
   899 ;;		_relay_initialize
   900 ;; This function uses a non-reentrant model
   901 ;;
   902                           
   903                           	psect	text3
   904   00F98E                     __ptext3:
   905                           	callstack 0
   906   00F98E                     _gpio_pin_intialize:
   907                           	callstack 28
   908   00F98E                     
   909                           ;MCAL_Layer/GPIO/hal_gpio.c: 112:     if(str == ((void*)0) || (str->PIN > 7)){;MCAL_Laye
      +                          r/GPIO/hal_gpio.c: 112:     if(str == ((void*)0) || (str->PIN > 7)){
   910   00F98E  5031               	movf	gpio_pin_intialize@str^0,w,c
   911   00F990  1032               	iorwf	(gpio_pin_intialize@str+1)^0,w,c
   912   00F992  B4D8               	btfsc	status,2,c
   913   00F994  EFCE  F07C         	goto	u901
   914   00F998  EFD0  F07C         	goto	u900
   915   00F99C                     u901:
   916   00F99C  EFDF  F07C         	goto	l1523
   917   00F9A0                     u900:
   918   00F9A0  C031  FFD9         	movff	gpio_pin_intialize@str,fsr2l
   919   00F9A4  C032  FFDA         	movff	gpio_pin_intialize@str+1,fsr2h
   920   00F9A8  50DF               	movf	223,w,c
   921   00F9AA  0B07               	andlw	7
   922   00F9AC  6E33               	movwf	??_gpio_pin_intialize^0,c
   923   00F9AE  0E07               	movlw	7
   924   00F9B0  6433               	cpfsgt	??_gpio_pin_intialize^0,c
   925   00F9B2  EFDD  F07C         	goto	u911
   926   00F9B6  EFDF  F07C         	goto	u910
   927   00F9BA                     u911:
   928   00F9BA  EFE3  F07C         	goto	l1525
   929   00F9BE                     u910:
   930   00F9BE                     l1523:
   931                           
   932                           ;MCAL_Layer/GPIO/hal_gpio.c: 113:         ret = (Std_ReturnType)0x01;;MCAL_Layer/GPIO/ha
      +                          l_gpio.c: 113:         ret = (Std_ReturnType)0x01;
   933   00F9BE  0E01               	movlw	1
   934   00F9C0  6E34               	movwf	gpio_pin_intialize@ret^0,c
   935                           
   936                           ;MCAL_Layer/GPIO/hal_gpio.c: 114:     };MCAL_Layer/GPIO/hal_gpio.c: 114:     }
   937   00F9C2  EFF9  F07C         	goto	l1527
   938   00F9C6                     l1525:
   939                           
   940                           ;MCAL_Layer/GPIO/hal_gpio.c: 116:        ret = gpio_pin_direction_intialize(str);;MCAL_L
      +                          ayer/GPIO/hal_gpio.c: 116:        ret = gpio_pin_direction_intialize(str);
   941   00F9C6  C031  F028         	movff	gpio_pin_intialize@str,gpio_pin_direction_intialize@str
   942   00F9CA  C032  F029         	movff	gpio_pin_intialize@str+1,gpio_pin_direction_intialize@str+1
   943   00F9CE  ECFF  F07D         	call	_gpio_pin_direction_intialize	;wreg free
   944   00F9D2  6E34               	movwf	gpio_pin_intialize@ret^0,c
   945                           
   946                           ;MCAL_Layer/GPIO/hal_gpio.c: 117:        ret = gpio_pin_write_logic(str , str->Logic);;M
      +                          CAL_Layer/GPIO/hal_gpio.c: 117:        ret = gpio_pin_write_logic(str , str->Logic);
   947   00F9D4  C031  F028         	movff	gpio_pin_intialize@str,gpio_pin_write_logic@str
   948   00F9D8  C032  F029         	movff	gpio_pin_intialize@str+1,gpio_pin_write_logic@str+1
   949   00F9DC  C031  FFD9         	movff	gpio_pin_intialize@str,fsr2l
   950   00F9E0  C032  FFDA         	movff	gpio_pin_intialize@str+1,fsr2h
   951   00F9E4  0E00               	movlw	0
   952   00F9E6  BEDF               	btfsc	indf2,7,c
   953   00F9E8  0E01               	movlw	1
   954   00F9EA  6E2A               	movwf	gpio_pin_write_logic@LOG^0,c
   955   00F9EC  EC8E  F07E         	call	_gpio_pin_write_logic	;wreg free
   956   00F9F0  6E34               	movwf	gpio_pin_intialize@ret^0,c
   957   00F9F2                     l1527:
   958                           
   959                           ;MCAL_Layer/GPIO/hal_gpio.c: 120:     return ret;;MCAL_Layer/GPIO/hal_gpio.c: 120:     r
      +                          eturn ret;
   960   00F9F2  5034               	movf	gpio_pin_intialize@ret^0,w,c
   961   00F9F4  0012               	return		;funcret
   962   00F9F6                     __end_of_gpio_pin_intialize:
   963                           	callstack 0
   964                           
   965 ;; *************** function _gpio_pin_write_logic *****************
   966 ;; Defined at:
   967 ;;		line 58 in file "MCAL_Layer/GPIO/hal_gpio.c"
   968 ;; Parameters:    Size  Location     Type
   969 ;;  str             2    0[COMRAM] PTR const struct .
   970 ;;		 -> control_pin_4(1), control_pin_3(1), control_pin_2(1), control_pin_1(1), 
   971 ;;		 -> seg_1.SEG_PINS(4), seg_1(5), relay_off@rel_pin(1), relay_on@rel_pin(1), 
   972 ;;		 -> relay_initialize@rel_pin(1), led_turn_off@LED_IN(1), led_turn_on@LED_IN(1), led_intialize@LED_IN(1), 
   973 ;;  LOG             1    2[COMRAM] enum E2989
   974 ;; Auto vars:     Size  Location     Type
   975 ;;  ret             1    0        unsigned char 
   976 ;; Return value:  Size  Location     Type
   977 ;;                  1    wreg      unsigned char 
   978 ;; Registers used:
   979 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   980 ;; Tracked objects:
   981 ;;		On entry : 0/0
   982 ;;		On exit  : 0/0
   983 ;;		Unchanged: 0/0
   984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   985 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   987 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   988 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   989 ;;Total ram usage:        9 bytes
   990 ;; Hardware stack levels used: 1
   991 ;; This function calls:
   992 ;;		Nothing
   993 ;; This function is called by:
   994 ;;		_gpio_pin_intialize
   995 ;;		_seg_7_pins_write
   996 ;;		_led_turn_on
   997 ;;		_led_turn_off
   998 ;;		_relay_on
   999 ;;		_relay_off
  1000 ;;		_dc_motor_move_forward
  1001 ;;		_dc_motor_move_backward
  1002 ;;		_dc_motor_stop
  1003 ;; This function uses a non-reentrant model
  1004 ;;
  1005                           
  1006                           	psect	text4
  1007   00FD1C                     __ptext4:
  1008                           	callstack 0
  1009   00FD1C                     _gpio_pin_write_logic:
  1010                           	callstack 29
  1011   00FD1C                     
  1012                           ;MCAL_Layer/GPIO/hal_gpio.c: 61:     if(str == ((void*)0) || (str->PIN > 7)){;MCAL_Layer
      +                          /GPIO/hal_gpio.c: 61:     if(str == ((void*)0) || (str->PIN > 7)){
  1013   00FD1C  5028               	movf	gpio_pin_write_logic@str^0,w,c
  1014   00FD1E  1029               	iorwf	(gpio_pin_write_logic@str+1)^0,w,c
  1015   00FD20  B4D8               	btfsc	status,2,c
  1016   00FD22  EF95  F07E         	goto	u861
  1017   00FD26  EF97  F07E         	goto	u860
  1018   00FD2A                     u861:
  1019   00FD2A  EFA6  F07E         	goto	l1499
  1020   00FD2E                     u860:
  1021   00FD2E  C028  FFD9         	movff	gpio_pin_write_logic@str,fsr2l
  1022   00FD32  C029  FFDA         	movff	gpio_pin_write_logic@str+1,fsr2h
  1023   00FD36  50DF               	movf	223,w,c
  1024   00FD38  0B07               	andlw	7
  1025   00FD3A  6E2B               	movwf	??_gpio_pin_write_logic^0,c
  1026   00FD3C  0E07               	movlw	7
  1027   00FD3E  642B               	cpfsgt	??_gpio_pin_write_logic^0,c
  1028   00FD40  EFA4  F07E         	goto	u871
  1029   00FD44  EFA6  F07E         	goto	u870
  1030   00FD48                     u871:
  1031   00FD48  EF07  F07F         	goto	l1507
  1032   00FD4C                     u870:
  1033   00FD4C                     l1499:
  1034                           
  1035                           ;MCAL_Layer/GPIO/hal_gpio.c: 63:     };MCAL_Layer/GPIO/hal_gpio.c: 63:     }
  1036   00FD4C  EF1C  F07F         	goto	l1509
  1037   00FD50                     l1501:
  1038                           
  1039                           ;MCAL_Layer/GPIO/hal_gpio.c: 68:                 (*LAT_REG[str->PORT] |= (0x01 << str->P
      +                          IN));;MCAL_Layer/GPIO/hal_gpio.c: 68:                 (*LAT_REG[str->PORT] |= (0x01 << s
      +                          tr->PIN));
  1040   00FD50  C028  FFD9         	movff	gpio_pin_write_logic@str,fsr2l
  1041   00FD54  C029  FFDA         	movff	gpio_pin_write_logic@str+1,fsr2h
  1042   00FD58  50DF               	movf	223,w,c
  1043   00FD5A  0B07               	andlw	7
  1044   00FD5C  6E2B               	movwf	??_gpio_pin_write_logic^0,c
  1045   00FD5E  0E01               	movlw	1
  1046   00FD60  6E2C               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1047   00FD62  2A2B               	incf	??_gpio_pin_write_logic^0,f,c
  1048   00FD64  EFB6  F07E         	goto	u884
  1049   00FD68                     u885:
  1050   00FD68  90D8               	bcf	status,0,c
  1051   00FD6A  362C               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1052   00FD6C                     u884:
  1053   00FD6C  2E2B               	decfsz	??_gpio_pin_write_logic^0,f,c
  1054   00FD6E  EFB4  F07E         	goto	u885
  1055   00FD72  C028  FFD9         	movff	gpio_pin_write_logic@str,fsr2l
  1056   00FD76  C029  FFDA         	movff	gpio_pin_write_logic@str+1,fsr2h
  1057   00FD7A  30DF               	rrcf	223,w,c
  1058   00FD7C  32E8               	rrcf	wreg,f,c
  1059   00FD7E  32E8               	rrcf	wreg,f,c
  1060   00FD80  0B07               	andlw	7
  1061   00FD82  6E2D               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1062   00FD84  502D               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1063   00FD86  0D02               	mullw	2
  1064   00FD88  0E15               	movlw	low _LAT_REG
  1065   00FD8A  24F3               	addwf	243,w,c
  1066   00FD8C  6ED9               	movwf	fsr2l,c
  1067   00FD8E  0E00               	movlw	high _LAT_REG
  1068   00FD90  20F4               	addwfc	prodh,w,c
  1069   00FD92  6EDA               	movwf	fsr2h,c
  1070   00FD94  CFDE F02E          	movff	postinc2,??_gpio_pin_write_logic+3
  1071   00FD98  CFDD F02F          	movff	postdec2,??_gpio_pin_write_logic+4
  1072   00FD9C  C02E  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1073   00FDA0  C02F  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1074   00FDA4  502C               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1075   00FDA6  12DF               	iorwf	indf2,f,c
  1076                           
  1077                           ;MCAL_Layer/GPIO/hal_gpio.c: 69:                 break;;MCAL_Layer/GPIO/hal_gpio.c: 69: 
      +                                          break;
  1078   00FDA8  EF1C  F07F         	goto	l1509
  1079   00FDAC                     l1503:
  1080                           
  1081                           ;MCAL_Layer/GPIO/hal_gpio.c: 71:                 (*LAT_REG[str->PORT] &= ~(0x01 << str->
      +                          PIN));;MCAL_Layer/GPIO/hal_gpio.c: 71:                 (*LAT_REG[str->PORT] &= ~(0x01 <<
      +                           str->PIN));
  1082   00FDAC  C028  FFD9         	movff	gpio_pin_write_logic@str,fsr2l
  1083   00FDB0  C029  FFDA         	movff	gpio_pin_write_logic@str+1,fsr2h
  1084   00FDB4  50DF               	movf	223,w,c
  1085   00FDB6  0B07               	andlw	7
  1086   00FDB8  6E2B               	movwf	??_gpio_pin_write_logic^0,c
  1087   00FDBA  0E01               	movlw	1
  1088   00FDBC  6E2C               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1089   00FDBE  2A2B               	incf	??_gpio_pin_write_logic^0,f,c
  1090   00FDC0  EFE4  F07E         	goto	u894
  1091   00FDC4                     u895:
  1092   00FDC4  90D8               	bcf	status,0,c
  1093   00FDC6  362C               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1094   00FDC8                     u894:
  1095   00FDC8  2E2B               	decfsz	??_gpio_pin_write_logic^0,f,c
  1096   00FDCA  EFE2  F07E         	goto	u895
  1097   00FDCE  502C               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1098   00FDD0  0AFF               	xorlw	255
  1099   00FDD2  6E2D               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1100   00FDD4  C028  FFD9         	movff	gpio_pin_write_logic@str,fsr2l
  1101   00FDD8  C029  FFDA         	movff	gpio_pin_write_logic@str+1,fsr2h
  1102   00FDDC  30DF               	rrcf	223,w,c
  1103   00FDDE  32E8               	rrcf	wreg,f,c
  1104   00FDE0  32E8               	rrcf	wreg,f,c
  1105   00FDE2  0B07               	andlw	7
  1106   00FDE4  6E2E               	movwf	(??_gpio_pin_write_logic+3)^0,c
  1107   00FDE6  502E               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  1108   00FDE8  0D02               	mullw	2
  1109   00FDEA  0E15               	movlw	low _LAT_REG
  1110   00FDEC  24F3               	addwf	243,w,c
  1111   00FDEE  6ED9               	movwf	fsr2l,c
  1112   00FDF0  0E00               	movlw	high _LAT_REG
  1113   00FDF2  20F4               	addwfc	prodh,w,c
  1114   00FDF4  6EDA               	movwf	fsr2h,c
  1115   00FDF6  CFDE F02F          	movff	postinc2,??_gpio_pin_write_logic+4
  1116   00FDFA  CFDD F030          	movff	postdec2,??_gpio_pin_write_logic+5
  1117   00FDFE  C02F  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  1118   00FE02  C030  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  1119   00FE06  502D               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1120   00FE08  16DF               	andwf	indf2,f,c
  1121                           
  1122                           ;MCAL_Layer/GPIO/hal_gpio.c: 72:                 break;;MCAL_Layer/GPIO/hal_gpio.c: 72: 
      +                                          break;
  1123   00FE0A  EF1C  F07F         	goto	l1509
  1124   00FE0E                     l1507:
  1125   00FE0E  502A               	movf	gpio_pin_write_logic@LOG^0,w,c
  1126   00FE10  6E2B               	movwf	??_gpio_pin_write_logic^0,c
  1127   00FE12  6A2C               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1128                           
  1129                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1130                           ; Switch size 1, requested type "simple"
  1131                           ; Number of cases is 1, Range of values is 0 to 0
  1132                           ; switch strategies available:
  1133                           ; Name         Instructions Cycles
  1134                           ; simple_byte            4     3 (average)
  1135                           ;	Chosen strategy is simple_byte
  1136   00FE14  502C               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1137   00FE16  0A00               	xorlw	0	; case 0
  1138   00FE18  B4D8               	btfsc	status,2,c
  1139   00FE1A  EF11  F07F         	goto	l1849
  1140   00FE1E  EFA6  F07E         	goto	l1499
  1141   00FE22                     l1849:
  1142                           
  1143                           ; Switch size 1, requested type "simple"
  1144                           ; Number of cases is 2, Range of values is 0 to 1
  1145                           ; switch strategies available:
  1146                           ; Name         Instructions Cycles
  1147                           ; simple_byte            7     4 (average)
  1148                           ;	Chosen strategy is simple_byte
  1149   00FE22  502B               	movf	??_gpio_pin_write_logic^0,w,c
  1150   00FE24  0A00               	xorlw	0	; case 0
  1151   00FE26  B4D8               	btfsc	status,2,c
  1152   00FE28  EFD6  F07E         	goto	l1503
  1153   00FE2C  0A01               	xorlw	1	; case 1
  1154   00FE2E  B4D8               	btfsc	status,2,c
  1155   00FE30  EFA8  F07E         	goto	l1501
  1156   00FE34  EFA6  F07E         	goto	l1499
  1157   00FE38                     l1509:
  1158                           
  1159                           ;MCAL_Layer/GPIO/hal_gpio.c: 78:     return ret;;MCAL_Layer/GPIO/hal_gpio.c: 78:     ret
      +                          urn ret;
  1160   00FE38  0E01               	movlw	1
  1161   00FE3A  0012               	return		;funcret
  1162   00FE3C                     __end_of_gpio_pin_write_logic:
  1163                           	callstack 0
  1164                           
  1165 ;; *************** function _gpio_pin_direction_intialize *****************
  1166 ;; Defined at:
  1167 ;;		line 20 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1168 ;; Parameters:    Size  Location     Type
  1169 ;;  str             2    0[COMRAM] PTR const struct .
  1170 ;;		 -> control_pin_4(1), control_pin_3(1), control_pin_2(1), control_pin_1(1), 
  1171 ;;		 -> seg_1.SEG_PINS(4), seg_1(5), relay_initialize@rel_pin(1), led_intialize@LED_IN(1), 
  1172 ;; Auto vars:     Size  Location     Type
  1173 ;;  ret             1    0        unsigned char 
  1174 ;; Return value:  Size  Location     Type
  1175 ;;                  1    wreg      unsigned char 
  1176 ;; Registers used:
  1177 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1178 ;; Tracked objects:
  1179 ;;		On entry : 0/0
  1180 ;;		On exit  : 0/0
  1181 ;;		Unchanged: 0/0
  1182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1183 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1185 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1186 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1187 ;;Total ram usage:        8 bytes
  1188 ;; Hardware stack levels used: 1
  1189 ;; This function calls:
  1190 ;;		Nothing
  1191 ;; This function is called by:
  1192 ;;		_gpio_pin_intialize
  1193 ;;		_button_initialize
  1194 ;;		_dc_motor_initialize
  1195 ;; This function uses a non-reentrant model
  1196 ;;
  1197                           
  1198                           	psect	text5
  1199   00FBFE                     __ptext5:
  1200                           	callstack 0
  1201   00FBFE                     _gpio_pin_direction_intialize:
  1202                           	callstack 28
  1203   00FBFE                     
  1204                           ;MCAL_Layer/GPIO/hal_gpio.c: 24:     if(str == ((void*)0) || (str->PIN > 7)){;MCAL_Layer
      +                          /GPIO/hal_gpio.c: 24:     if(str == ((void*)0) || (str->PIN > 7)){
  1205   00FBFE  5028               	movf	gpio_pin_direction_intialize@str^0,w,c
  1206   00FC00  1029               	iorwf	(gpio_pin_direction_intialize@str+1)^0,w,c
  1207   00FC02  B4D8               	btfsc	status,2,c
  1208   00FC04  EF06  F07E         	goto	u801
  1209   00FC08  EF08  F07E         	goto	u800
  1210   00FC0C                     u801:
  1211   00FC0C  EF17  F07E         	goto	l1479
  1212   00FC10                     u800:
  1213   00FC10  C028  FFD9         	movff	gpio_pin_direction_intialize@str,fsr2l
  1214   00FC14  C029  FFDA         	movff	gpio_pin_direction_intialize@str+1,fsr2h
  1215   00FC18  50DF               	movf	223,w,c
  1216   00FC1A  0B07               	andlw	7
  1217   00FC1C  6E2A               	movwf	??_gpio_pin_direction_intialize^0,c
  1218   00FC1E  0E07               	movlw	7
  1219   00FC20  642A               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  1220   00FC22  EF15  F07E         	goto	u811
  1221   00FC26  EF17  F07E         	goto	u810
  1222   00FC2A                     u811:
  1223   00FC2A  EF19  F07E         	goto	l1481
  1224   00FC2E                     u810:
  1225   00FC2E                     l1479:
  1226                           
  1227                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:     };MCAL_Layer/GPIO/hal_gpio.c: 26:     }
  1228   00FC2E  EF8C  F07E         	goto	l129
  1229   00FC32                     l1481:
  1230                           
  1231                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:         if(GPIO_DIRECTION_OUTPUT == str->Direction){;MC
      +                          AL_Layer/GPIO/hal_gpio.c: 28:         if(GPIO_DIRECTION_OUTPUT == str->Direction){
  1232   00FC32  C028  FFD9         	movff	gpio_pin_direction_intialize@str,fsr2l
  1233   00FC36  C029  FFDA         	movff	gpio_pin_direction_intialize@str+1,fsr2h
  1234   00FC3A  BCDF               	btfsc	indf2,6,c
  1235   00FC3C  EF22  F07E         	goto	u821
  1236   00FC40  EF24  F07E         	goto	u820
  1237   00FC44                     u821:
  1238   00FC44  EF55  F07E         	goto	l1485
  1239   00FC48                     u820:
  1240   00FC48                     
  1241                           ;MCAL_Layer/GPIO/hal_gpio.c: 30:             (*TRIS_REG[str->PORT] &= ~(0x01 << str->PIN
      +                          ));;MCAL_Layer/GPIO/hal_gpio.c: 30:             (*TRIS_REG[str->PORT] &= ~(0x01 << str->
      +                          PIN));
  1242   00FC48  C028  FFD9         	movff	gpio_pin_direction_intialize@str,fsr2l
  1243   00FC4C  C029  FFDA         	movff	gpio_pin_direction_intialize@str+1,fsr2h
  1244   00FC50  50DF               	movf	223,w,c
  1245   00FC52  0B07               	andlw	7
  1246   00FC54  6E2A               	movwf	??_gpio_pin_direction_intialize^0,c
  1247   00FC56  0E01               	movlw	1
  1248   00FC58  6E2B               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  1249   00FC5A  2A2A               	incf	??_gpio_pin_direction_intialize^0,f,c
  1250   00FC5C  EF32  F07E         	goto	u834
  1251   00FC60                     u835:
  1252   00FC60  90D8               	bcf	status,0,c
  1253   00FC62  362B               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  1254   00FC64                     u834:
  1255   00FC64  2E2A               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  1256   00FC66  EF30  F07E         	goto	u835
  1257   00FC6A  502B               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1258   00FC6C  0AFF               	xorlw	255
  1259   00FC6E  6E2C               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  1260   00FC70  C028  FFD9         	movff	gpio_pin_direction_intialize@str,fsr2l
  1261   00FC74  C029  FFDA         	movff	gpio_pin_direction_intialize@str+1,fsr2h
  1262   00FC78  30DF               	rrcf	223,w,c
  1263   00FC7A  32E8               	rrcf	wreg,f,c
  1264   00FC7C  32E8               	rrcf	wreg,f,c
  1265   00FC7E  0B07               	andlw	7
  1266   00FC80  6E2D               	movwf	(??_gpio_pin_direction_intialize+3)^0,c
  1267   00FC82  502D               	movf	(??_gpio_pin_direction_intialize+3)^0,w,c
  1268   00FC84  0D02               	mullw	2
  1269   00FC86  0E0B               	movlw	low _TRIS_REG
  1270   00FC88  24F3               	addwf	243,w,c
  1271   00FC8A  6ED9               	movwf	fsr2l,c
  1272   00FC8C  0E00               	movlw	high _TRIS_REG
  1273   00FC8E  20F4               	addwfc	prodh,w,c
  1274   00FC90  6EDA               	movwf	fsr2h,c
  1275   00FC92  CFDE F02E          	movff	postinc2,??_gpio_pin_direction_intialize+4
  1276   00FC96  CFDD F02F          	movff	postdec2,??_gpio_pin_direction_intialize+5
  1277   00FC9A  C02E  FFD9         	movff	??_gpio_pin_direction_intialize+4,fsr2l
  1278   00FC9E  C02F  FFDA         	movff	??_gpio_pin_direction_intialize+5,fsr2h
  1279   00FCA2  502C               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  1280   00FCA4  16DF               	andwf	indf2,f,c
  1281                           
  1282                           ;MCAL_Layer/GPIO/hal_gpio.c: 31:         };MCAL_Layer/GPIO/hal_gpio.c: 31:         }
  1283   00FCA6  EF8C  F07E         	goto	l129
  1284   00FCAA                     l1485:
  1285   00FCAA  C028  FFD9         	movff	gpio_pin_direction_intialize@str,fsr2l
  1286   00FCAE  C029  FFDA         	movff	gpio_pin_direction_intialize@str+1,fsr2h
  1287   00FCB2  ACDF               	btfss	indf2,6,c
  1288   00FCB4  EF5E  F07E         	goto	u841
  1289   00FCB8  EF60  F07E         	goto	u840
  1290   00FCBC                     u841:
  1291   00FCBC  EF17  F07E         	goto	l1479
  1292   00FCC0                     u840:
  1293   00FCC0                     
  1294                           ;MCAL_Layer/GPIO/hal_gpio.c: 34:             (*TRIS_REG[str->PORT] |= (0x01 << str->PIN)
      +                          );;MCAL_Layer/GPIO/hal_gpio.c: 34:             (*TRIS_REG[str->PORT] |= (0x01 << str->PI
      +                          N));
  1295   00FCC0  C028  FFD9         	movff	gpio_pin_direction_intialize@str,fsr2l
  1296   00FCC4  C029  FFDA         	movff	gpio_pin_direction_intialize@str+1,fsr2h
  1297   00FCC8  50DF               	movf	223,w,c
  1298   00FCCA  0B07               	andlw	7
  1299   00FCCC  6E2A               	movwf	??_gpio_pin_direction_intialize^0,c
  1300   00FCCE  0E01               	movlw	1
  1301   00FCD0  6E2B               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  1302   00FCD2  2A2A               	incf	??_gpio_pin_direction_intialize^0,f,c
  1303   00FCD4  EF6E  F07E         	goto	u854
  1304   00FCD8                     u855:
  1305   00FCD8  90D8               	bcf	status,0,c
  1306   00FCDA  362B               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  1307   00FCDC                     u854:
  1308   00FCDC  2E2A               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  1309   00FCDE  EF6C  F07E         	goto	u855
  1310   00FCE2  C028  FFD9         	movff	gpio_pin_direction_intialize@str,fsr2l
  1311   00FCE6  C029  FFDA         	movff	gpio_pin_direction_intialize@str+1,fsr2h
  1312   00FCEA  30DF               	rrcf	223,w,c
  1313   00FCEC  32E8               	rrcf	wreg,f,c
  1314   00FCEE  32E8               	rrcf	wreg,f,c
  1315   00FCF0  0B07               	andlw	7
  1316   00FCF2  6E2C               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  1317   00FCF4  502C               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  1318   00FCF6  0D02               	mullw	2
  1319   00FCF8  0E0B               	movlw	low _TRIS_REG
  1320   00FCFA  24F3               	addwf	243,w,c
  1321   00FCFC  6ED9               	movwf	fsr2l,c
  1322   00FCFE  0E00               	movlw	high _TRIS_REG
  1323   00FD00  20F4               	addwfc	prodh,w,c
  1324   00FD02  6EDA               	movwf	fsr2h,c
  1325   00FD04  CFDE F02D          	movff	postinc2,??_gpio_pin_direction_intialize+3
  1326   00FD08  CFDD F02E          	movff	postdec2,??_gpio_pin_direction_intialize+4
  1327   00FD0C  C02D  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  1328   00FD10  C02E  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  1329   00FD14  502B               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1330   00FD16  12DF               	iorwf	indf2,f,c
  1331   00FD18                     l129:
  1332                           
  1333                           ;MCAL_Layer/GPIO/hal_gpio.c: 40:     return ret;;MCAL_Layer/GPIO/hal_gpio.c: 40:     ret
      +                          urn ret;
  1334   00FD18  0E01               	movlw	1
  1335   00FD1A  0012               	return		;funcret
  1336   00FD1C                     __end_of_gpio_pin_direction_intialize:
  1337                           	callstack 0
  1338                           
  1339 ;; *************** function _gpio_port_write_logic *****************
  1340 ;; Defined at:
  1341 ;;		line 164 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1342 ;; Parameters:    Size  Location     Type
  1343 ;;  PORT            1    wreg     enum E2978
  1344 ;;  LOG             1    0[COMRAM] unsigned char 
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;  PORT            1    3[COMRAM] enum E2978
  1347 ;;  ret             1    0        unsigned char 
  1348 ;; Return value:  Size  Location     Type
  1349 ;;                  1    wreg      unsigned char 
  1350 ;; Registers used:
  1351 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1352 ;; Tracked objects:
  1353 ;;		On entry : 0/0
  1354 ;;		On exit  : 0/0
  1355 ;;		Unchanged: 0/0
  1356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1357 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1358 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1359 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1360 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1361 ;;Total ram usage:        4 bytes
  1362 ;; Hardware stack levels used: 1
  1363 ;; This function calls:
  1364 ;;		Nothing
  1365 ;; This function is called by:
  1366 ;;		_main
  1367 ;; This function uses a non-reentrant model
  1368 ;;
  1369                           
  1370                           	psect	text6
  1371   00F8EE                     __ptext6:
  1372                           	callstack 0
  1373   00F8EE                     _gpio_port_write_logic:
  1374                           	callstack 30
  1375                           
  1376                           ;incstack = 0
  1377                           ;gpio_port_write_logic@PORT stored from wreg
  1378   00F8EE  6E2B               	movwf	gpio_port_write_logic@PORT^0,c
  1379   00F8F0                     
  1380                           ;MCAL_Layer/GPIO/hal_gpio.c: 168:     if(PORT>4){;MCAL_Layer/GPIO/hal_gpio.c: 168:     i
      +                          f(PORT>4){
  1381   00F8F0  0E04               	movlw	4
  1382   00F8F2  642B               	cpfsgt	gpio_port_write_logic@PORT^0,c
  1383   00F8F4  EF7E  F07C         	goto	u921
  1384   00F8F8  EF80  F07C         	goto	u920
  1385   00F8FC                     u921:
  1386   00F8FC  EF82  F07C         	goto	l1537
  1387   00F900                     u920:
  1388   00F900                     
  1389                           ;MCAL_Layer/GPIO/hal_gpio.c: 170:     };MCAL_Layer/GPIO/hal_gpio.c: 170:     }
  1390   00F900  EF94  F07C         	goto	l1539
  1391   00F904                     l1537:
  1392                           
  1393                           ;MCAL_Layer/GPIO/hal_gpio.c: 172:         *LAT_REG[PORT] = LOG;;MCAL_Layer/GPIO/hal_gpio
      +                          .c: 172:         *LAT_REG[PORT] = LOG;
  1394   00F904  502B               	movf	gpio_port_write_logic@PORT^0,w,c
  1395   00F906  0D02               	mullw	2
  1396   00F908  0E15               	movlw	low _LAT_REG
  1397   00F90A  24F3               	addwf	243,w,c
  1398   00F90C  6ED9               	movwf	fsr2l,c
  1399   00F90E  0E00               	movlw	high _LAT_REG
  1400   00F910  20F4               	addwfc	prodh,w,c
  1401   00F912  6EDA               	movwf	fsr2h,c
  1402   00F914  CFDE F029          	movff	postinc2,??_gpio_port_write_logic
  1403   00F918  CFDD F02A          	movff	postdec2,??_gpio_port_write_logic+1
  1404   00F91C  C029  FFD9         	movff	??_gpio_port_write_logic,fsr2l
  1405   00F920  C02A  FFDA         	movff	??_gpio_port_write_logic+1,fsr2h
  1406   00F924  C028  FFDF         	movff	gpio_port_write_logic@LOG,indf2
  1407   00F928                     l1539:
  1408                           
  1409                           ;MCAL_Layer/GPIO/hal_gpio.c: 175:     return ret;;MCAL_Layer/GPIO/hal_gpio.c: 175:     r
      +                          eturn ret;
  1410   00F928  0E01               	movlw	1
  1411   00F92A  0012               	return		;funcret
  1412   00F92C                     __end_of_gpio_port_write_logic:
  1413                           	callstack 0
  1414                           
  1415 ;; *************** function ___awmod *****************
  1416 ;; Defined at:
  1417 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  1418 ;; Parameters:    Size  Location     Type
  1419 ;;  dividend        2    0[COMRAM] int 
  1420 ;;  divisor         2    2[COMRAM] int 
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;  sign            1    5[COMRAM] unsigned char 
  1423 ;;  counter         1    4[COMRAM] unsigned char 
  1424 ;; Return value:  Size  Location     Type
  1425 ;;                  2    0[COMRAM] int 
  1426 ;; Registers used:
  1427 ;;		wreg, status,2, status,0
  1428 ;; Tracked objects:
  1429 ;;		On entry : 0/0
  1430 ;;		On exit  : 0/0
  1431 ;;		Unchanged: 0/0
  1432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1433 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1434 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1436 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1437 ;;Total ram usage:        6 bytes
  1438 ;; Hardware stack levels used: 1
  1439 ;; This function calls:
  1440 ;;		Nothing
  1441 ;; This function is called by:
  1442 ;;		_main
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446                           	psect	text7
  1447   00FA8A                     __ptext7:
  1448                           	callstack 0
  1449   00FA8A                     ___awmod:
  1450                           	callstack 30
  1451   00FA8A  0E00               	movlw	0
  1452   00FA8C  6E2D               	movwf	___awmod@sign^0,c
  1453   00FA8E  BE29               	btfsc	(___awmod@dividend+1)^0,7,c
  1454   00FA90  EF4E  F07D         	goto	u1020
  1455   00FA94  EF4C  F07D         	goto	u1021
  1456   00FA98                     u1021:
  1457   00FA98  EF54  F07D         	goto	l1621
  1458   00FA9C                     u1020:
  1459   00FA9C  6C28               	negf	___awmod@dividend^0,c
  1460   00FA9E  1E29               	comf	(___awmod@dividend+1)^0,f,c
  1461   00FAA0  B0D8               	btfsc	status,0,c
  1462   00FAA2  2A29               	incf	(___awmod@dividend+1)^0,f,c
  1463   00FAA4  0E01               	movlw	1
  1464   00FAA6  6E2D               	movwf	___awmod@sign^0,c
  1465   00FAA8                     l1621:
  1466   00FAA8  BE2B               	btfsc	(___awmod@divisor+1)^0,7,c
  1467   00FAAA  EF5B  F07D         	goto	u1030
  1468   00FAAE  EF59  F07D         	goto	u1031
  1469   00FAB2                     u1031:
  1470   00FAB2  EF5F  F07D         	goto	l1625
  1471   00FAB6                     u1030:
  1472   00FAB6  6C2A               	negf	___awmod@divisor^0,c
  1473   00FAB8  1E2B               	comf	(___awmod@divisor+1)^0,f,c
  1474   00FABA  B0D8               	btfsc	status,0,c
  1475   00FABC  2A2B               	incf	(___awmod@divisor+1)^0,f,c
  1476   00FABE                     l1625:
  1477   00FABE  502A               	movf	___awmod@divisor^0,w,c
  1478   00FAC0  102B               	iorwf	(___awmod@divisor+1)^0,w,c
  1479   00FAC2  B4D8               	btfsc	status,2,c
  1480   00FAC4  EF66  F07D         	goto	u1041
  1481   00FAC8  EF68  F07D         	goto	u1040
  1482   00FACC                     u1041:
  1483   00FACC  EF8C  F07D         	goto	l1641
  1484   00FAD0                     u1040:
  1485   00FAD0  0E01               	movlw	1
  1486   00FAD2  6E2C               	movwf	___awmod@counter^0,c
  1487   00FAD4  EF70  F07D         	goto	l1631
  1488   00FAD8                     l1629:
  1489   00FAD8  90D8               	bcf	status,0,c
  1490   00FADA  362A               	rlcf	___awmod@divisor^0,f,c
  1491   00FADC  362B               	rlcf	(___awmod@divisor+1)^0,f,c
  1492   00FADE  2A2C               	incf	___awmod@counter^0,f,c
  1493   00FAE0                     l1631:
  1494   00FAE0  AE2B               	btfss	(___awmod@divisor+1)^0,7,c
  1495   00FAE2  EF75  F07D         	goto	u1051
  1496   00FAE6  EF77  F07D         	goto	u1050
  1497   00FAEA                     u1051:
  1498   00FAEA  EF6C  F07D         	goto	l1629
  1499   00FAEE                     u1050:
  1500   00FAEE                     l1633:
  1501   00FAEE  502A               	movf	___awmod@divisor^0,w,c
  1502   00FAF0  5C28               	subwf	___awmod@dividend^0,w,c
  1503   00FAF2  502B               	movf	(___awmod@divisor+1)^0,w,c
  1504   00FAF4  5829               	subwfb	(___awmod@dividend+1)^0,w,c
  1505   00FAF6  A0D8               	btfss	status,0,c
  1506   00FAF8  EF80  F07D         	goto	u1061
  1507   00FAFC  EF82  F07D         	goto	u1060
  1508   00FB00                     u1061:
  1509   00FB00  EF86  F07D         	goto	l1637
  1510   00FB04                     u1060:
  1511   00FB04  502A               	movf	___awmod@divisor^0,w,c
  1512   00FB06  5E28               	subwf	___awmod@dividend^0,f,c
  1513   00FB08  502B               	movf	(___awmod@divisor+1)^0,w,c
  1514   00FB0A  5A29               	subwfb	(___awmod@dividend+1)^0,f,c
  1515   00FB0C                     l1637:
  1516   00FB0C  90D8               	bcf	status,0,c
  1517   00FB0E  322B               	rrcf	(___awmod@divisor+1)^0,f,c
  1518   00FB10  322A               	rrcf	___awmod@divisor^0,f,c
  1519   00FB12  2E2C               	decfsz	___awmod@counter^0,f,c
  1520   00FB14  EF77  F07D         	goto	l1633
  1521   00FB18                     l1641:
  1522   00FB18  502D               	movf	___awmod@sign^0,w,c
  1523   00FB1A  B4D8               	btfsc	status,2,c
  1524   00FB1C  EF92  F07D         	goto	u1071
  1525   00FB20  EF94  F07D         	goto	u1070
  1526   00FB24                     u1071:
  1527   00FB24  EF98  F07D         	goto	l1645
  1528   00FB28                     u1070:
  1529   00FB28  6C28               	negf	___awmod@dividend^0,c
  1530   00FB2A  1E29               	comf	(___awmod@dividend+1)^0,f,c
  1531   00FB2C  B0D8               	btfsc	status,0,c
  1532   00FB2E  2A29               	incf	(___awmod@dividend+1)^0,f,c
  1533   00FB30                     l1645:
  1534   00FB30  C028  F028         	movff	___awmod@dividend,?___awmod
  1535   00FB34  C029  F029         	movff	___awmod@dividend+1,?___awmod+1
  1536   00FB38  0012               	return		;funcret
  1537   00FB3A                     __end_of___awmod:
  1538                           	callstack 0
  1539                           
  1540 ;; *************** function ___awdiv *****************
  1541 ;; Defined at:
  1542 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  1543 ;; Parameters:    Size  Location     Type
  1544 ;;  dividend        2    0[COMRAM] int 
  1545 ;;  divisor         2    2[COMRAM] int 
  1546 ;; Auto vars:     Size  Location     Type
  1547 ;;  quotient        2    6[COMRAM] int 
  1548 ;;  sign            1    5[COMRAM] unsigned char 
  1549 ;;  counter         1    4[COMRAM] unsigned char 
  1550 ;; Return value:  Size  Location     Type
  1551 ;;                  2    0[COMRAM] int 
  1552 ;; Registers used:
  1553 ;;		wreg, status,2, status,0
  1554 ;; Tracked objects:
  1555 ;;		On entry : 0/0
  1556 ;;		On exit  : 0/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1559 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1560 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1562 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1563 ;;Total ram usage:        8 bytes
  1564 ;; Hardware stack levels used: 1
  1565 ;; This function calls:
  1566 ;;		Nothing
  1567 ;; This function is called by:
  1568 ;;		_main
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572                           	psect	text8
  1573   00FB3A                     __ptext8:
  1574                           	callstack 0
  1575   00FB3A                     ___awdiv:
  1576                           	callstack 30
  1577   00FB3A  0E00               	movlw	0
  1578   00FB3C  6E2D               	movwf	___awdiv@sign^0,c
  1579   00FB3E  BE2B               	btfsc	(___awdiv@divisor+1)^0,7,c
  1580   00FB40  EFA6  F07D         	goto	u960
  1581   00FB44  EFA4  F07D         	goto	u961
  1582   00FB48                     u961:
  1583   00FB48  EFAC  F07D         	goto	l1577
  1584   00FB4C                     u960:
  1585   00FB4C  6C2A               	negf	___awdiv@divisor^0,c
  1586   00FB4E  1E2B               	comf	(___awdiv@divisor+1)^0,f,c
  1587   00FB50  B0D8               	btfsc	status,0,c
  1588   00FB52  2A2B               	incf	(___awdiv@divisor+1)^0,f,c
  1589   00FB54  0E01               	movlw	1
  1590   00FB56  6E2D               	movwf	___awdiv@sign^0,c
  1591   00FB58                     l1577:
  1592   00FB58  BE29               	btfsc	(___awdiv@dividend+1)^0,7,c
  1593   00FB5A  EFB3  F07D         	goto	u970
  1594   00FB5E  EFB1  F07D         	goto	u971
  1595   00FB62                     u971:
  1596   00FB62  EFB9  F07D         	goto	l1583
  1597   00FB66                     u970:
  1598   00FB66  6C28               	negf	___awdiv@dividend^0,c
  1599   00FB68  1E29               	comf	(___awdiv@dividend+1)^0,f,c
  1600   00FB6A  B0D8               	btfsc	status,0,c
  1601   00FB6C  2A29               	incf	(___awdiv@dividend+1)^0,f,c
  1602   00FB6E  0E01               	movlw	1
  1603   00FB70  1A2D               	xorwf	___awdiv@sign^0,f,c
  1604   00FB72                     l1583:
  1605   00FB72  0E00               	movlw	0
  1606   00FB74  6E2F               	movwf	(___awdiv@quotient+1)^0,c
  1607   00FB76  0E00               	movlw	0
  1608   00FB78  6E2E               	movwf	___awdiv@quotient^0,c
  1609   00FB7A  502A               	movf	___awdiv@divisor^0,w,c
  1610   00FB7C  102B               	iorwf	(___awdiv@divisor+1)^0,w,c
  1611   00FB7E  B4D8               	btfsc	status,2,c
  1612   00FB80  EFC4  F07D         	goto	u981
  1613   00FB84  EFC6  F07D         	goto	u980
  1614   00FB88                     u981:
  1615   00FB88  EFEE  F07D         	goto	l1605
  1616   00FB8C                     u980:
  1617   00FB8C  0E01               	movlw	1
  1618   00FB8E  6E2C               	movwf	___awdiv@counter^0,c
  1619   00FB90  EFCE  F07D         	goto	l1591
  1620   00FB94                     l1589:
  1621   00FB94  90D8               	bcf	status,0,c
  1622   00FB96  362A               	rlcf	___awdiv@divisor^0,f,c
  1623   00FB98  362B               	rlcf	(___awdiv@divisor+1)^0,f,c
  1624   00FB9A  2A2C               	incf	___awdiv@counter^0,f,c
  1625   00FB9C                     l1591:
  1626   00FB9C  AE2B               	btfss	(___awdiv@divisor+1)^0,7,c
  1627   00FB9E  EFD3  F07D         	goto	u991
  1628   00FBA2  EFD5  F07D         	goto	u990
  1629   00FBA6                     u991:
  1630   00FBA6  EFCA  F07D         	goto	l1589
  1631   00FBAA                     u990:
  1632   00FBAA                     l1593:
  1633   00FBAA  90D8               	bcf	status,0,c
  1634   00FBAC  362E               	rlcf	___awdiv@quotient^0,f,c
  1635   00FBAE  362F               	rlcf	(___awdiv@quotient+1)^0,f,c
  1636   00FBB0  502A               	movf	___awdiv@divisor^0,w,c
  1637   00FBB2  5C28               	subwf	___awdiv@dividend^0,w,c
  1638   00FBB4  502B               	movf	(___awdiv@divisor+1)^0,w,c
  1639   00FBB6  5829               	subwfb	(___awdiv@dividend+1)^0,w,c
  1640   00FBB8  A0D8               	btfss	status,0,c
  1641   00FBBA  EFE1  F07D         	goto	u1001
  1642   00FBBE  EFE3  F07D         	goto	u1000
  1643   00FBC2                     u1001:
  1644   00FBC2  EFE8  F07D         	goto	l1601
  1645   00FBC6                     u1000:
  1646   00FBC6  502A               	movf	___awdiv@divisor^0,w,c
  1647   00FBC8  5E28               	subwf	___awdiv@dividend^0,f,c
  1648   00FBCA  502B               	movf	(___awdiv@divisor+1)^0,w,c
  1649   00FBCC  5A29               	subwfb	(___awdiv@dividend+1)^0,f,c
  1650   00FBCE  802E               	bsf	___awdiv@quotient^0,0,c
  1651   00FBD0                     l1601:
  1652   00FBD0  90D8               	bcf	status,0,c
  1653   00FBD2  322B               	rrcf	(___awdiv@divisor+1)^0,f,c
  1654   00FBD4  322A               	rrcf	___awdiv@divisor^0,f,c
  1655   00FBD6  2E2C               	decfsz	___awdiv@counter^0,f,c
  1656   00FBD8  EFD5  F07D         	goto	l1593
  1657   00FBDC                     l1605:
  1658   00FBDC  502D               	movf	___awdiv@sign^0,w,c
  1659   00FBDE  B4D8               	btfsc	status,2,c
  1660   00FBE0  EFF4  F07D         	goto	u1011
  1661   00FBE4  EFF6  F07D         	goto	u1010
  1662   00FBE8                     u1011:
  1663   00FBE8  EFFA  F07D         	goto	l1609
  1664   00FBEC                     u1010:
  1665   00FBEC  6C2E               	negf	___awdiv@quotient^0,c
  1666   00FBEE  1E2F               	comf	(___awdiv@quotient+1)^0,f,c
  1667   00FBF0  B0D8               	btfsc	status,0,c
  1668   00FBF2  2A2F               	incf	(___awdiv@quotient+1)^0,f,c
  1669   00FBF4                     l1609:
  1670   00FBF4  C02E  F028         	movff	___awdiv@quotient,?___awdiv
  1671   00FBF8  C02F  F029         	movff	___awdiv@quotient+1,?___awdiv+1
  1672   00FBFC  0012               	return		;funcret
  1673   00FBFE                     __end_of___awdiv:
  1674                           	callstack 0
  1675   000000                     
  1676                           	psect	rparam
  1677   000000                     
  1678                           	psect	config
  1679                           
  1680                           ; Padding undefined space
  1681   300000                     	org	3145728
  1682   300000  FF                 	db	255
  1683                           
  1684                           ;Config register CONFIG1H @ 0x300001
  1685                           ;	Oscillator Selection bits
  1686                           ;	OSC = RCIO6, External RC oscillator, port function on RA6
  1687                           ;	Fail-Safe Clock Monitor Enable bit
  1688                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1689                           ;	Internal/External Oscillator Switchover bit
  1690                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1691   300001                     	org	3145729
  1692   300001  07                 	db	7
  1693                           
  1694                           ;Config register CONFIG2L @ 0x300002
  1695                           ;	Power-up Timer Enable bit
  1696                           ;	PWRT = OFF, PWRT disabled
  1697                           ;	Brown-out Reset Enable bits
  1698                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1699                           ;	Brown Out Reset Voltage bits
  1700                           ;	BORV = 3, Minimum setting
  1701   300002                     	org	3145730
  1702   300002  1F                 	db	31
  1703                           
  1704                           ;Config register CONFIG2H @ 0x300003
  1705                           ;	Watchdog Timer Enable bit
  1706                           ;	WDT = ON, WDT enabled
  1707                           ;	Watchdog Timer Postscale Select bits
  1708                           ;	WDTPS = 32768, 1:32768
  1709   300003                     	org	3145731
  1710   300003  1F                 	db	31
  1711                           
  1712                           ; Padding undefined space
  1713   300004                     	org	3145732
  1714   300004  FF                 	db	255
  1715                           
  1716                           ;Config register CONFIG3H @ 0x300005
  1717                           ;	CCP2 MUX bit
  1718                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1719                           ;	PORTB A/D Enable bit
  1720                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  1721                           ;	Low-Power Timer1 Oscillator Enable bit
  1722                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1723                           ;	MCLR Pin Enable bit
  1724                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1725   300005                     	org	3145733
  1726   300005  83                 	db	131
  1727                           
  1728                           ;Config register CONFIG4L @ 0x300006
  1729                           ;	Stack Full/Underflow Reset Enable bit
  1730                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1731                           ;	Single-Supply ICSP Enable bit
  1732                           ;	LVP = ON, Single-Supply ICSP enabled
  1733                           ;	Extended Instruction Set Enable bit
  1734                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1735                           ;	Background Debugger Enable bit
  1736                           ;	DEBUG = 0x1, unprogrammed default
  1737   300006                     	org	3145734
  1738   300006  85                 	db	133
  1739                           
  1740                           ; Padding undefined space
  1741   300007                     	org	3145735
  1742   300007  FF                 	db	255
  1743                           
  1744                           ;Config register CONFIG5L @ 0x300008
  1745                           ;	Code Protection bit
  1746                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1747                           ;	Code Protection bit
  1748                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1749                           ;	Code Protection bit
  1750                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1751                           ;	Code Protection bit
  1752                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1753   300008                     	org	3145736
  1754   300008  0F                 	db	15
  1755                           
  1756                           ;Config register CONFIG5H @ 0x300009
  1757                           ;	Boot Block Code Protection bit
  1758                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1759                           ;	Data EEPROM Code Protection bit
  1760                           ;	CPD = OFF, Data EEPROM not code-protected
  1761   300009                     	org	3145737
  1762   300009  C0                 	db	192
  1763                           
  1764                           ;Config register CONFIG6L @ 0x30000A
  1765                           ;	Write Protection bit
  1766                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1767                           ;	Write Protection bit
  1768                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1769                           ;	Write Protection bit
  1770                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1771                           ;	Write Protection bit
  1772                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1773   30000A                     	org	3145738
  1774   30000A  0F                 	db	15
  1775                           
  1776                           ;Config register CONFIG6H @ 0x30000B
  1777                           ;	Configuration Register Write Protection bit
  1778                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1779                           ;	Boot Block Write Protection bit
  1780                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1781                           ;	Data EEPROM Write Protection bit
  1782                           ;	WRTD = OFF, Data EEPROM not write-protected
  1783   30000B                     	org	3145739
  1784   30000B  E0                 	db	224
  1785                           
  1786                           ;Config register CONFIG7L @ 0x30000C
  1787                           ;	Table Read Protection bit
  1788                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1789                           ;	Table Read Protection bit
  1790                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1791                           ;	Table Read Protection bit
  1792                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1793                           ;	Table Read Protection bit
  1794                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1795   30000C                     	org	3145740
  1796   30000C  0F                 	db	15
  1797                           
  1798                           ;Config register CONFIG7H @ 0x30000D
  1799                           ;	Boot Block Table Read Protection bit
  1800                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1801   30000D                     	org	3145741
  1802   30000D  40                 	db	64
  1803                           tosu	equ	0xFFF
  1804                           tosh	equ	0xFFE
  1805                           tosl	equ	0xFFD
  1806                           stkptr	equ	0xFFC
  1807                           pclatu	equ	0xFFB
  1808                           pclath	equ	0xFFA
  1809                           pcl	equ	0xFF9
  1810                           tblptru	equ	0xFF8
  1811                           tblptrh	equ	0xFF7
  1812                           tblptrl	equ	0xFF6
  1813                           tablat	equ	0xFF5
  1814                           prodh	equ	0xFF4
  1815                           prodl	equ	0xFF3
  1816                           indf0	equ	0xFEF
  1817                           postinc0	equ	0xFEE
  1818                           postdec0	equ	0xFED
  1819                           preinc0	equ	0xFEC
  1820                           plusw0	equ	0xFEB
  1821                           fsr0h	equ	0xFEA
  1822                           fsr0l	equ	0xFE9
  1823                           wreg	equ	0xFE8
  1824                           indf1	equ	0xFE7
  1825                           postinc1	equ	0xFE6
  1826                           postdec1	equ	0xFE5
  1827                           preinc1	equ	0xFE4
  1828                           plusw1	equ	0xFE3
  1829                           fsr1h	equ	0xFE2
  1830                           fsr1l	equ	0xFE1
  1831                           bsr	equ	0xFE0
  1832                           indf2	equ	0xFDF
  1833                           postinc2	equ	0xFDE
  1834                           postdec2	equ	0xFDD
  1835                           preinc2	equ	0xFDC
  1836                           plusw2	equ	0xFDB
  1837                           fsr2h	equ	0xFDA
  1838                           fsr2l	equ	0xFD9
  1839                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        39
    BSS         9
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     17      67
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    seg_7_pins_write@_seg_	PTR struct . size(2) Largest target is 5
		 -> seg_1(COMRAM[5]), 

    seg_7_pins_intialize@_seg_	PTR struct . size(2) Largest target is 5
		 -> seg_1(COMRAM[5]), 

    gpio_pin_intialize@str	PTR const struct . size(2) Largest target is 5
		 -> control_pin_4(COMRAM[1]), control_pin_3(COMRAM[1]), control_pin_2(COMRAM[1]), control_pin_1(COMRAM[1]), 
		 -> seg_1.SEG_PINS(COMRAM[4]), seg_1(COMRAM[5]), relay_initialize@rel_pin(COMRAM[1]), led_intialize@LED_IN(COMRAM[1]), 

    gpio_pin_write_logic@str	PTR const struct . size(2) Largest target is 5
		 -> control_pin_4(COMRAM[1]), control_pin_3(COMRAM[1]), control_pin_2(COMRAM[1]), control_pin_1(COMRAM[1]), 
		 -> seg_1.SEG_PINS(COMRAM[4]), seg_1(COMRAM[5]), relay_off@rel_pin(COMRAM[1]), relay_on@rel_pin(COMRAM[1]), 
		 -> relay_initialize@rel_pin(COMRAM[1]), led_turn_off@LED_IN(COMRAM[1]), led_turn_on@LED_IN(COMRAM[1]), led_intialize@LED_IN(COMRAM[1]), 

    gpio_pin_direction_intialize@str	PTR const struct . size(2) Largest target is 5
		 -> control_pin_4(COMRAM[1]), control_pin_3(COMRAM[1]), control_pin_2(COMRAM[1]), control_pin_1(COMRAM[1]), 
		 -> seg_1.SEG_PINS(COMRAM[4]), seg_1(COMRAM[5]), relay_initialize@rel_pin(COMRAM[1]), led_intialize@LED_IN(COMRAM[1]), 

    PORT_REG	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRl[1]), PORTD(BITBIGSFRl[1]), PORTC(BITBIGSFRl[1]), PORTB(BITBIGSFRl[1]), 
		 -> PORTA(BITBIGSFRl[1]), 

    TRIS_REG	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRhh[1]), TRISD(BITBIGSFRhh[1]), TRISC(BITBIGSFRhh[1]), TRISB(BITBIGSFRhh[1]), 
		 -> TRISA(BITBIGSFRhl[1]), 

    LAT_REG	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRhl[1]), LATD(BITBIGSFRhl[1]), LATC(BITBIGSFRhl[1]), LATB(BITBIGSFRhl[1]), 
		 -> LATA(BITBIGSFRl[1]), 


Critical Paths under _main in COMRAM

    _main->_seg_7_pins_intialize
    _seg_7_pins_write->_gpio_pin_write_logic
    _seg_7_pins_intialize->_gpio_pin_intialize
    _gpio_pin_intialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   13151
                                             16 COMRAM     1     1      0
                            ___awdiv
                            ___awmod
                 _gpio_pin_intialize
              _gpio_port_write_logic
               _seg_7_pins_intialize
                   _seg_7_pins_write
 ---------------------------------------------------------------------------------
 (1) _seg_7_pins_write                                     4     1      3    3315
                                              9 COMRAM     4     1      3
                            ___awdiv (ARG)
                            ___awmod (ARG)
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _seg_7_pins_intialize                                 3     1      2    4074
                                             13 COMRAM     3     1      2
                 _gpio_pin_intialize
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_intialize                                   4     2      2    3860
                                              9 COMRAM     4     2      2
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                10     7      3    2459
                                              0 COMRAM     9     6      3
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_intialize                         9     7      2     505
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _gpio_port_write_logic                                5     4      1     698
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     604
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
   _gpio_pin_intialize
     _gpio_pin_direction_intialize
     _gpio_pin_write_logic
   _gpio_port_write_logic
   _seg_7_pins_intialize
     _gpio_pin_intialize
   _seg_7_pins_write
     ___awdiv (ARG)
     ___awmod (ARG)
     _gpio_pin_write_logic (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     11      43       1       52.8%
BITBIGSFRhh         69      0       0      36        0.0%
BITBIGSFRhl          4      0       0      37        0.0%
BITBIGSFRl           4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      43      39        0.0%
DATA                 0      0      43       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Sep 03 20:15:51 2023

                        ___awdiv@sign 002D                                   l134 FD1A  
                                 l129 FD18                                   l153 FE3A  
                                 l174 F9F4                                   l280 F98C  
                                 l521 FBFC                                   l195 F92A  
                                 l534 FB38                                   l287 FA88  
                                 u800 FC10                                   u801 FC0C  
                                 u810 FC2E                                   u811 FC2A  
                                 u820 FC48                                   u900 F9A0  
                                 u821 FC44                                   u901 F99C  
                                 u910 F9BE                                   u911 F9BA  
                                 u920 F900                                   u840 FCC0  
                                 u921 F8FC                                   u841 FCBC  
                                 u834 FC64                                   u930 F93E  
                                 u835 FC60                                   u931 F93A  
                                 u860 FD2E                                   u940 FA08  
                                 u861 FD2A                                   u941 FA04  
                                 u854 FCDC                                   u870 FD4C  
                                 u950 FA18                                   u855 FCD8  
                                 u871 FD48                                   u951 FA14  
                                 u960 FB4C                                   u961 FB48  
                                 u970 FB66                                   u971 FB62  
                                 u980 FB8C                                   u884 FD6C  
                                 u981 FB88                                   u885 FD68  
                                 u990 FBAA                                   u894 FDC8  
                                 u991 FBA6                                   u895 FDC4  
                                 _ret 0043                          ___awmod@sign 002D  
                                 prod 0FF3                 relay_initialize@F3042 003D  
                                 wreg 0FE8                                  l1501 FD50  
                                l1503 FDAC                                  l1601 FBD0  
                                l1521 F9A0                                  l1603 FBD6  
                                l1531 F8F0                                  l1507 FE0E  
                                l1523 F9BE                                  l1605 FBDC  
                                l1621 FAA8                                  l1613 FA8A  
                                l1533 F8F0                                  l1509 FE38  
                                l1525 F9C6                                  l1517 F98E  
                                l1607 FBEC                                  l1631 FAE0  
                                l1623 FAB6                                  l1615 FA8E  
                                l1535 F900                                  l1527 F9F2  
                                l1519 F98E                                  l1551 F98A  
                                l1543 F92C                                  l1609 FBF4  
                                l1633 FAEE                                  l1641 FB18  
                                l1625 FABE                                  l1617 FA9C  
                                l1537 F904                                  l1481 FC32  
                                l1473 FBFE                                  l1545 F92C  
                                l1561 FA18                                  l1801 FFE2  
                                l1571 FB3E                                  l1643 FB28  
                                l1635 FB04                                  l1627 FAD0  
                                l1619 FAA4                                  l1539 F928  
                                l1483 FC48                                  l1475 FBFE  
                                l1547 F93E                                  l1563 FA20  
                                l1555 F9F6                                  l1803 FFF4  
                                l1581 FB6E                                  l1573 FB4C  
                                l1645 FB30                                  l1637 FB0C  
                                l1629 FAD8                                  l1485 FCAA  
                                l1477 FC10                                  l1493 FD1C  
                                l1549 F946                                  l1565 FA86  
                                l1557 F9F6                                  l1591 FB9C  
                                l1583 FB72                                  l1575 FB54  
                                l1639 FB12                                  l1487 FCC0  
                                l1479 FC2E                                  l1495 FD1C  
                                l1559 FA08                                  l1593 FBAA  
                                l1585 FB7A                                  l1577 FB58  
                                l1569 FB3A                                  l1497 FD2E  
                                l1761 FE3C                                  l1595 FBB0  
                                l1587 FB8C                                  l1579 FB66  
                                l1499 FD4C                                  l1771 FEB6  
                                l1763 FE82                                  l1597 FBC6  
                                l1589 FB94                                  l1781 FF1E  
                                l1773 FEC6                                  l1599 FBCE  
                                l1791 FFB6                                  l1783 FF42  
                                l1775 FED2                                  l1849 FE22  
                                l1793 FFC8                                  l1785 FF4E  
                                l1777 FEF6                                  l1769 FE86  
                                l1795 FFCA                                  l1787 FF9A  
                                l1779 FF12                                  l1797 FFDC  
                                l1789 FFAA                                  l1799 FFE0  
                                u1000 FBC6                                  u1001 FBC2  
                                u1010 FBEC                                  u1011 FBE8  
                                u1020 FA9C                                  u1021 FA98  
                                u1030 FAB6                                  u1031 FAB2  
                                u1040 FAD0                                  u1041 FACC  
                                u1050 FAEE                                  u1051 FAEA  
                                u1060 FB04                                  u1061 FB00  
                                u1070 FB28                                  u1071 FB24  
                                _LATA 0F89                                  u1270 FFC8  
                                _LATB 0F8A                                  u1271 FFC4  
                                _LATC 0F8B                                  u1280 FFDC  
                                _LATD 0F8C                                  u1281 FFD8  
                                _LATE 0F8D                                  u1290 FFF4  
                                u1291 FFF0                                  u1347 FEBC  
                                u1357 FF08                                  u1367 FF54  
                                u1377 FFA0                                  _main FE3C  
                                _mins 003A                                  _secs 0039  
                                fsr2h 0FDA                                  indf2 0FDF  
                                fsr1l 0FE1                                  fsr2l 0FD9  
                                prodl 0FF3                                  start 0000  
                        ___param_bank 0000                 _gpio_port_write_logic F8EE  
                _gpio_pin_write_logic FD1C                                 ?_main 0028  
                     __end_of___awdiv FBFE                       __end_of___awmod FB3A  
                     ___awdiv@divisor 002A                       ___awdiv@counter 002C  
                               _PORTA 0F80                                 _PORTB 0F81  
                               _PORTC 0F82                                 _PORTD 0F83  
                               _PORTE 0F84                                 _TRISA 0F92  
                               _TRISB 0F93                                 _TRISC 0F94  
                               _TRISD 0F95                                 _TRISE 0F96  
                               _seg_1 001F                         _control_pin_1 0027  
                       _control_pin_2 0026                         _control_pin_3 0025  
                       _control_pin_4 0024                                 tablat 0FF5  
                               status 0FD8                       __initialization F8B8  
                        __end_of_main 0000                 ?_gpio_pin_write_logic 0028  
                              ??_main 0038                         __activetblptr 0002  
                    led_turn_on@F3053 0040                      ___awdiv@dividend 0028  
           gpio_port_write_logic@PORT 002B          __end_of_seg_7_pins_intialize F98E  
              ?_gpio_port_write_logic 0028                             ??___awdiv 002C  
                           ??___awmod 002C                                clear_0 F8DE  
                    ___awdiv@quotient 002E                       ___awmod@divisor 002A  
                              isa$std 0001                       ___awmod@counter 002C  
                        __pdataCOMRAM 0001                                tblptrh 0FF7  
                              tblptrl 0FF6                                tblptru 0FF8  
                          __accesstop 0080               __end_of__initialization F8E4  
                       ___rparam_used 0001                ??_gpio_pin_write_logic 002B  
                      __pcstackCOMRAM 0028                      _seg_7_pins_write F9F6  
           seg_7_pins_intialize@_seg_ 0035              gpio_port_write_logic@LOG 0028  
                          __pnvCOMRAM 0042                     led_turn_off@F3058 003F  
                     led_toggle@F3063 003E                               _LAT_REG 0015  
                _seg_7_pins_intialize F92C                               __Hparam 0000  
                             __Lparam 0000                               ___awdiv FB3A  
                             ___awmod FA8A            __end_of_gpio_pin_intialize F9F6  
                             __pcinit F8B8                               __ramtop 1000  
                       relay_on@F3047 003C                               __ptext0 FE3C  
                             __ptext1 F9F6                               __ptext2 F92C  
                             __ptext3 F98E                               __ptext4 FD1C  
                             __ptext5 FBFE                               __ptext6 F8EE  
                             __ptext7 FA8A                               __ptext8 FB3A  
             seg_7_pins_intialize@ret 0037                               _counter 0042  
                    ___awmod@dividend 0028                 ?_seg_7_pins_intialize 0035  
                end_of_initialization F8E4                         __Lmediumconst 0000  
             ??_gpio_port_write_logic 0029                 gpio_pin_intialize@ret 0034  
               gpio_pin_intialize@str 0031                               postdec1 0FE5  
                             postdec2 0FDD                               postinc0 0FEE  
                             postinc2 0FDE  __end_of_gpio_pin_direction_intialize FD1C  
        _gpio_pin_direction_intialize FBFE              __end_of_seg_7_pins_write FA8A  
                       __pidataCOMRAM F891                ??_seg_7_pins_intialize 0037  
                 start_initialization F8B8         ?_gpio_pin_direction_intialize 0028  
                         __pbssCOMRAM 0039       gpio_pin_direction_intialize@str 0028  
              seg_7_pins_write@number 0033                              ?___awdiv 0028  
                            ?___awmod 0028                    _gpio_pin_intialize F98E  
                 seg_7_pins_write@ret 0034        ??_gpio_pin_direction_intialize 002A  
                 ?_gpio_pin_intialize 0031         __end_of_gpio_port_write_logic F92C  
                            _PORT_REG 0001                              _TRIS_REG 000B  
                ??_gpio_pin_intialize 0033               gpio_pin_write_logic@LOG 002A  
             gpio_pin_write_logic@str 0028                             copy_data0 F8CC  
                   ?_seg_7_pins_write 0031                    ??_seg_7_pins_write 0034  
                            __Hrparam 0000                              __Lrparam 0000  
                  led_intialize@F3048 0041                 seg_7_pins_write@_seg_ 0031  
                      relay_off@F3052 003B                              isa$xinst 0000  
        __end_of_gpio_pin_write_logic FE3C  
