

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Sep 03 20:26:28 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22   000000                     
    23                           ; Generated 23/03/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F4620 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57   000000                     
    58                           	psect	idataCOMRAM
    59   00F8A6                     __pidataCOMRAM:
    60                           	callstack 0
    61                           
    62                           ;initializer for _PORT_REG
    63   00F8A6  80                 	db	128
    64   00F8A7  0F                 	db	15
    65   00F8A8  81                 	db	129
    66   00F8A9  0F                 	db	15
    67   00F8AA  82                 	db	130
    68   00F8AB  0F                 	db	15
    69   00F8AC  83                 	db	131
    70   00F8AD  0F                 	db	15
    71   00F8AE  84                 	db	132
    72   00F8AF  0F                 	db	15
    73                           
    74                           ;initializer for _TRIS_REG
    75   00F8B0  92                 	db	146
    76   00F8B1  0F                 	db	15
    77   00F8B2  93                 	db	147
    78   00F8B3  0F                 	db	15
    79   00F8B4  94                 	db	148
    80   00F8B5  0F                 	db	15
    81   00F8B6  95                 	db	149
    82   00F8B7  0F                 	db	15
    83   00F8B8  96                 	db	150
    84   00F8B9  0F                 	db	15
    85                           
    86                           ;initializer for _LAT_REG
    87   00F8BA  89                 	db	137
    88   00F8BB  0F                 	db	15
    89   00F8BC  8A                 	db	138
    90   00F8BD  0F                 	db	15
    91   00F8BE  8B                 	db	139
    92   00F8BF  0F                 	db	15
    93   00F8C0  8C                 	db	140
    94   00F8C1  0F                 	db	15
    95   00F8C2  8D                 	db	141
    96   00F8C3  0F                 	db	15
    97                           
    98                           ;initializer for _secs
    99   00F8C4  3A                 	db	58
   100                           
   101                           ;initializer for _seg_1
   102   00F8C5  10                 	db	16
   103   00F8C6  11                 	db	17
   104   00F8C7  12                 	db	18
   105   00F8C8  13                 	db	19
   106   00F8C9  00                 	db	0
   107                           
   108                           ;initializer for _control_pin_4
   109   00F8CA  1B                 	db	27
   110                           
   111                           ;initializer for _control_pin_3
   112   00F8CB  1A                 	db	26
   113                           
   114                           ;initializer for _control_pin_2
   115   00F8CC  19                 	db	25
   116                           
   117                           ;initializer for _control_pin_1
   118   00F8CD  18                 	db	24
   119                           
   120                           	psect	nvCOMRAM
   121   000042                     __pnvCOMRAM:
   122                           	callstack 0
   123   000042                     _counter:
   124                           	callstack 0
   125   000042                     	ds	1
   126   000043                     _ret:
   127                           	callstack 0
   128   000043                     	ds	1
   129   000000                     _PORTE	set	3972
   130   000000                     _PORTD	set	3971
   131   000000                     _PORTC	set	3970
   132   000000                     _PORTB	set	3969
   133   000000                     _PORTA	set	3968
   134   000000                     _LATA	set	3977
   135   000000                     _TRISA	set	3986
   136   000000                     _LATE	set	3981
   137   000000                     _LATD	set	3980
   138   000000                     _LATC	set	3979
   139   000000                     _LATB	set	3978
   140   000000                     _TRISE	set	3990
   141   000000                     _TRISD	set	3989
   142   000000                     _TRISC	set	3988
   143   000000                     _TRISB	set	3987
   144                           
   145                           ; #config settings
   146                           
   147                           	psect	cinit
   148   00F8CE                     __pcinit:
   149                           	callstack 0
   150   00F8CE                     start_initialization:
   151                           	callstack 0
   152   00F8CE                     __initialization:
   153                           	callstack 0
   154                           
   155                           ; Initialize objects allocated to COMRAM (40 bytes)
   156                           ; load TBLPTR registers with __pidataCOMRAM
   157   00F8CE  0EA6               	movlw	low __pidataCOMRAM
   158   00F8D0  6EF6               	movwf	tblptrl,c
   159   00F8D2  0EF8               	movlw	high __pidataCOMRAM
   160   00F8D4  6EF7               	movwf	tblptrh,c
   161   00F8D6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   162   00F8D8  6EF8               	movwf	tblptru,c
   163   00F8DA  EE00  F001         	lfsr	0,__pdataCOMRAM
   164   00F8DE  EE10 F028          	lfsr	1,40
   165   00F8E2                     copy_data0:
   166   00F8E2  0009               	tblrd		*+
   167   00F8E4  CFF5 FFEE          	movff	tablat,postinc0
   168   00F8E8  50E5               	movf	postdec1,w,c
   169   00F8EA  50E1               	movf	fsr1l,w,c
   170   00F8EC  E1FA               	bnz	copy_data0
   171                           
   172                           ; Clear objects allocated to COMRAM (8 bytes)
   173   00F8EE  EE00  F03A         	lfsr	0,__pbssCOMRAM
   174   00F8F2  0E08               	movlw	8
   175   00F8F4                     clear_0:
   176   00F8F4  6AEE               	clrf	postinc0,c
   177   00F8F6  06E8               	decf	wreg,f,c
   178   00F8F8  E1FD               	bnz	clear_0
   179   00F8FA                     end_of_initialization:
   180                           	callstack 0
   181   00F8FA                     __end_of__initialization:
   182                           	callstack 0
   183   00F8FA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   184   00F8FC  6EF8               	movwf	tblptru,c
   185   00F8FE  0100               	movlb	0
   186   00F900  EF0A  F07F         	goto	_main	;jump to C main() function
   187                           
   188                           	psect	bssCOMRAM
   189   00003A                     __pbssCOMRAM:
   190                           	callstack 0
   191   00003A                     _mins:
   192                           	callstack 0
   193   00003A                     	ds	1
   194   00003B                     relay_off@F3052:
   195                           	callstack 0
   196   00003B                     	ds	1
   197   00003C                     relay_on@F3047:
   198                           	callstack 0
   199   00003C                     	ds	1
   200   00003D                     relay_initialize@F3042:
   201                           	callstack 0
   202   00003D                     	ds	1
   203   00003E                     led_toggle@F3063:
   204                           	callstack 0
   205   00003E                     	ds	1
   206   00003F                     led_turn_off@F3058:
   207                           	callstack 0
   208   00003F                     	ds	1
   209   000040                     led_turn_on@F3053:
   210                           	callstack 0
   211   000040                     	ds	1
   212   000041                     led_intialize@F3048:
   213                           	callstack 0
   214   000041                     	ds	1
   215                           
   216                           	psect	dataCOMRAM
   217   000001                     __pdataCOMRAM:
   218                           	callstack 0
   219   000001                     _PORT_REG:
   220                           	callstack 0
   221   000001                     	ds	10
   222   00000B                     _TRIS_REG:
   223                           	callstack 0
   224   00000B                     	ds	10
   225   000015                     _LAT_REG:
   226                           	callstack 0
   227   000015                     	ds	10
   228   00001F                     _secs:
   229                           	callstack 0
   230   00001F                     	ds	1
   231   000020                     _seg_1:
   232                           	callstack 0
   233   000020                     	ds	5
   234   000025                     _control_pin_4:
   235                           	callstack 0
   236   000025                     	ds	1
   237   000026                     _control_pin_3:
   238                           	callstack 0
   239   000026                     	ds	1
   240   000027                     _control_pin_2:
   241                           	callstack 0
   242   000027                     	ds	1
   243   000028                     _control_pin_1:
   244                           	callstack 0
   245   000028                     	ds	1
   246                           
   247                           	psect	cstackCOMRAM
   248   000029                     __pcstackCOMRAM:
   249                           	callstack 0
   250   000029                     ?___awdiv:
   251                           	callstack 0
   252   000029                     ?___awmod:
   253                           	callstack 0
   254   000029                     gpio_pin_direction_intialize@str:
   255                           	callstack 0
   256   000029                     gpio_pin_write_logic@str:
   257                           	callstack 0
   258   000029                     ___awdiv@dividend:
   259                           	callstack 0
   260   000029                     ___awmod@dividend:
   261                           	callstack 0
   262                           
   263                           ; 2 bytes @ 0x0
   264   000029                     	ds	2
   265   00002B                     ??_gpio_pin_direction_intialize:
   266   00002B                     gpio_pin_write_logic@LOG:
   267                           	callstack 0
   268   00002B                     ___awdiv@divisor:
   269                           	callstack 0
   270   00002B                     ___awmod@divisor:
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0x2
   274   00002B                     	ds	1
   275   00002C                     ??_gpio_pin_write_logic:
   276                           
   277                           ; 1 bytes @ 0x3
   278   00002C                     	ds	1
   279   00002D                     ___awdiv@counter:
   280                           	callstack 0
   281   00002D                     ___awmod@counter:
   282                           	callstack 0
   283                           
   284                           ; 1 bytes @ 0x4
   285   00002D                     	ds	1
   286   00002E                     ___awdiv@sign:
   287                           	callstack 0
   288   00002E                     ___awmod@sign:
   289                           	callstack 0
   290                           
   291                           ; 1 bytes @ 0x5
   292   00002E                     	ds	1
   293   00002F                     ___awdiv@quotient:
   294                           	callstack 0
   295                           
   296                           ; 2 bytes @ 0x6
   297   00002F                     	ds	3
   298   000032                     gpio_pin_intialize@str:
   299                           	callstack 0
   300   000032                     seg_7_pins_write@_seg_:
   301                           	callstack 0
   302                           
   303                           ; 2 bytes @ 0x9
   304   000032                     	ds	2
   305   000034                     ??_gpio_pin_intialize:
   306   000034                     seg_7_pins_write@number:
   307                           	callstack 0
   308                           
   309                           ; 1 bytes @ 0xB
   310   000034                     	ds	1
   311   000035                     gpio_pin_intialize@ret:
   312                           	callstack 0
   313   000035                     seg_7_pins_write@ret:
   314                           	callstack 0
   315                           
   316                           ; 1 bytes @ 0xC
   317   000035                     	ds	1
   318   000036                     seg_7_pins_intialize@_seg_:
   319                           	callstack 0
   320                           
   321                           ; 2 bytes @ 0xD
   322   000036                     	ds	2
   323   000038                     seg_7_pins_intialize@ret:
   324                           	callstack 0
   325                           
   326                           ; 1 bytes @ 0xF
   327   000038                     	ds	1
   328   000039                     ??_main:
   329                           
   330                           ; 1 bytes @ 0x10
   331   000039                     	ds	1
   332                           
   333 ;;
   334 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   335 ;;
   336 ;; *************** function _main *****************
   337 ;; Defined at:
   338 ;;		line 77 in file "Application.c"
   339 ;; Parameters:    Size  Location     Type
   340 ;;		None
   341 ;; Auto vars:     Size  Location     Type
   342 ;;		None
   343 ;; Return value:  Size  Location     Type
   344 ;;                  2  239[None  ] int 
   345 ;; Registers used:
   346 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   347 ;; Tracked objects:
   348 ;;		On entry : 0/0
   349 ;;		On exit  : 0/0
   350 ;;		Unchanged: 0/0
   351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   354 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   355 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   356 ;;Total ram usage:        1 bytes
   357 ;; Hardware stack levels required when called: 3
   358 ;; This function calls:
   359 ;;		___awdiv
   360 ;;		___awmod
   361 ;;		_gpio_pin_intialize
   362 ;;		_gpio_pin_write_logic
   363 ;;		_seg_7_pins_intialize
   364 ;;		_seg_7_pins_write
   365 ;; This function is called by:
   366 ;;		Startup code after reset
   367 ;; This function uses a non-reentrant model
   368 ;;
   369                           
   370                           	psect	text0
   371   00FE14                     __ptext0:
   372                           	callstack 0
   373   00FE14                     _main:
   374                           	callstack 28
   375   00FE14                     
   376                           ;Application.c: 79:     ret = seg_7_pins_intialize(&seg_1);
   377   00FE14  0E20               	movlw	low _seg_1
   378   00FE16  6E36               	movwf	seg_7_pins_intialize@_seg_^0,c
   379   00FE18  0E00               	movlw	high _seg_1
   380   00FE1A  6E37               	movwf	(seg_7_pins_intialize@_seg_+1)^0,c
   381   00FE1C  EC82  F07C         	call	_seg_7_pins_intialize	;wreg free
   382   00FE20  6E43               	movwf	_ret^0,c
   383                           
   384                           ;Application.c: 81:     ret = gpio_pin_intialize(&control_pin_1);
   385   00FE22  0E28               	movlw	low _control_pin_1
   386   00FE24  6E32               	movwf	gpio_pin_intialize@str^0,c
   387   00FE26  0E00               	movlw	high _control_pin_1
   388   00FE28  6E33               	movwf	(gpio_pin_intialize@str+1)^0,c
   389   00FE2A  ECB3  F07C         	call	_gpio_pin_intialize	;wreg free
   390   00FE2E  6E43               	movwf	_ret^0,c
   391                           
   392                           ;Application.c: 82:     ret = gpio_pin_intialize(&control_pin_2);
   393   00FE30  0E27               	movlw	low _control_pin_2
   394   00FE32  6E32               	movwf	gpio_pin_intialize@str^0,c
   395   00FE34  0E00               	movlw	high _control_pin_2
   396   00FE36  6E33               	movwf	(gpio_pin_intialize@str+1)^0,c
   397   00FE38  ECB3  F07C         	call	_gpio_pin_intialize	;wreg free
   398   00FE3C  6E43               	movwf	_ret^0,c
   399                           
   400                           ;Application.c: 83:     ret = gpio_pin_intialize(&control_pin_3);
   401   00FE3E  0E26               	movlw	low _control_pin_3
   402   00FE40  6E32               	movwf	gpio_pin_intialize@str^0,c
   403   00FE42  0E00               	movlw	high _control_pin_3
   404   00FE44  6E33               	movwf	(gpio_pin_intialize@str+1)^0,c
   405   00FE46  ECB3  F07C         	call	_gpio_pin_intialize	;wreg free
   406   00FE4A  6E43               	movwf	_ret^0,c
   407                           
   408                           ;Application.c: 84:     ret = gpio_pin_intialize(&control_pin_4);
   409   00FE4C  0E25               	movlw	low _control_pin_4
   410   00FE4E  6E32               	movwf	gpio_pin_intialize@str^0,c
   411   00FE50  0E00               	movlw	high _control_pin_4
   412   00FE52  6E33               	movwf	(gpio_pin_intialize@str+1)^0,c
   413   00FE54  ECB3  F07C         	call	_gpio_pin_intialize	;wreg free
   414   00FE58  6E43               	movwf	_ret^0,c
   415   00FE5A                     l1749:
   416                           
   417                           ;Application.c: 89:         for(counter=0;counter<50;counter++){
   418   00FE5A  0E00               	movlw	0
   419   00FE5C  6E42               	movwf	_counter^0,c
   420   00FE5E                     l1755:
   421                           
   422                           ;Application.c: 91:             ret = seg_7_pins_write(&seg_1 , (uint8)(mins/10));
   423   00FE5E  0E20               	movlw	low _seg_1
   424   00FE60  6E32               	movwf	seg_7_pins_write@_seg_^0,c
   425   00FE62  0E00               	movlw	high _seg_1
   426   00FE64  6E33               	movwf	(seg_7_pins_write@_seg_+1)^0,c
   427   00FE66  C03A  F029         	movff	_mins,___awdiv@dividend
   428   00FE6A  6A2A               	clrf	(___awdiv@dividend+1)^0,c
   429   00FE6C  0E00               	movlw	0
   430   00FE6E  6E2C               	movwf	(___awdiv@divisor+1)^0,c
   431   00FE70  0E0A               	movlw	10
   432   00FE72  6E2B               	movwf	___awdiv@divisor^0,c
   433   00FE74  EC89  F07D         	call	___awdiv	;wreg free
   434   00FE78  5029               	movf	?___awdiv^0,w,c
   435   00FE7A  6E34               	movwf	seg_7_pins_write@number^0,c
   436   00FE7C  ECE7  F07C         	call	_seg_7_pins_write	;wreg free
   437   00FE80  6E43               	movwf	_ret^0,c
   438                           
   439                           ;Application.c: 92:             ret = gpio_pin_write_logic(&control_pin_1 , GPIO_HIGH);
   440   00FE82  0E28               	movlw	low _control_pin_1
   441   00FE84  6E29               	movwf	gpio_pin_write_logic@str^0,c
   442   00FE86  0E00               	movlw	high _control_pin_1
   443   00FE88  6E2A               	movwf	(gpio_pin_write_logic@str+1)^0,c
   444   00FE8A  0E01               	movlw	1
   445   00FE8C  6E2B               	movwf	gpio_pin_write_logic@LOG^0,c
   446   00FE8E  EC7A  F07E         	call	_gpio_pin_write_logic	;wreg free
   447   00FE92  6E43               	movwf	_ret^0,c
   448   00FE94                     
   449                           ;Application.c: 93:             _delay((unsigned long)((5)*(8000000U/4000.0)));
   450   00FE94  0E0D               	movlw	13
   451   00FE96  6E39               	movwf	??_main^0,c
   452   00FE98  0EFC               	movlw	252
   453   00FE9A                     u1337:
   454   00FE9A  2EE8               	decfsz	wreg,f,c
   455   00FE9C  D7FE               	bra	u1337
   456   00FE9E  2E39               	decfsz	??_main^0,f,c
   457   00FEA0  D7FC               	bra	u1337
   458   00FEA2                     
   459                           ;Application.c: 94:             ret = gpio_pin_write_logic(&control_pin_1 , GPIO_LOW);
   460   00FEA2  0E28               	movlw	low _control_pin_1
   461   00FEA4  6E29               	movwf	gpio_pin_write_logic@str^0,c
   462   00FEA6  0E00               	movlw	high _control_pin_1
   463   00FEA8  6E2A               	movwf	(gpio_pin_write_logic@str+1)^0,c
   464   00FEAA  0E00               	movlw	0
   465   00FEAC  6E2B               	movwf	gpio_pin_write_logic@LOG^0,c
   466   00FEAE  EC7A  F07E         	call	_gpio_pin_write_logic	;wreg free
   467   00FEB2  6E43               	movwf	_ret^0,c
   468   00FEB4                     
   469                           ;Application.c: 96:             ret = seg_7_pins_write(&seg_1 , (uint8)(mins%10));
   470   00FEB4  0E20               	movlw	low _seg_1
   471   00FEB6  6E32               	movwf	seg_7_pins_write@_seg_^0,c
   472   00FEB8  0E00               	movlw	high _seg_1
   473   00FEBA  6E33               	movwf	(seg_7_pins_write@_seg_+1)^0,c
   474   00FEBC  C03A  F029         	movff	_mins,___awmod@dividend
   475   00FEC0  6A2A               	clrf	(___awmod@dividend+1)^0,c
   476   00FEC2  0E00               	movlw	0
   477   00FEC4  6E2C               	movwf	(___awmod@divisor+1)^0,c
   478   00FEC6  0E0A               	movlw	10
   479   00FEC8  6E2B               	movwf	___awmod@divisor^0,c
   480   00FECA  EC31  F07D         	call	___awmod	;wreg free
   481   00FECE  5029               	movf	?___awmod^0,w,c
   482   00FED0  6E34               	movwf	seg_7_pins_write@number^0,c
   483   00FED2  ECE7  F07C         	call	_seg_7_pins_write	;wreg free
   484   00FED6  6E43               	movwf	_ret^0,c
   485   00FED8                     
   486                           ;Application.c: 97:             ret = gpio_pin_write_logic(&control_pin_2 , GPIO_HIGH);
   487   00FED8  0E27               	movlw	low _control_pin_2
   488   00FEDA  6E29               	movwf	gpio_pin_write_logic@str^0,c
   489   00FEDC  0E00               	movlw	high _control_pin_2
   490   00FEDE  6E2A               	movwf	(gpio_pin_write_logic@str+1)^0,c
   491   00FEE0  0E01               	movlw	1
   492   00FEE2  6E2B               	movwf	gpio_pin_write_logic@LOG^0,c
   493   00FEE4  EC7A  F07E         	call	_gpio_pin_write_logic	;wreg free
   494   00FEE8  6E43               	movwf	_ret^0,c
   495                           
   496                           ;Application.c: 98:             _delay((unsigned long)((5)*(8000000U/4000.0)));
   497   00FEEA  0E0D               	movlw	13
   498   00FEEC  6E39               	movwf	??_main^0,c
   499   00FEEE  0EFC               	movlw	252
   500   00FEF0                     u1347:
   501   00FEF0  2EE8               	decfsz	wreg,f,c
   502   00FEF2  D7FE               	bra	u1347
   503   00FEF4  2E39               	decfsz	??_main^0,f,c
   504   00FEF6  D7FC               	bra	u1347
   505   00FEF8                     
   506                           ;Application.c: 99:             ret = gpio_pin_write_logic(&control_pin_2 , GPIO_LOW);
   507   00FEF8  0E27               	movlw	low _control_pin_2
   508   00FEFA  6E29               	movwf	gpio_pin_write_logic@str^0,c
   509   00FEFC  0E00               	movlw	high _control_pin_2
   510   00FEFE  6E2A               	movwf	(gpio_pin_write_logic@str+1)^0,c
   511   00FF00  0E00               	movlw	0
   512   00FF02  6E2B               	movwf	gpio_pin_write_logic@LOG^0,c
   513   00FF04  EC7A  F07E         	call	_gpio_pin_write_logic	;wreg free
   514   00FF08  6E43               	movwf	_ret^0,c
   515   00FF0A                     
   516                           ;Application.c: 102:             ret = seg_7_pins_write(&seg_1 , (uint8)(secs/10));
   517   00FF0A  0E20               	movlw	low _seg_1
   518   00FF0C  6E32               	movwf	seg_7_pins_write@_seg_^0,c
   519   00FF0E  0E00               	movlw	high _seg_1
   520   00FF10  6E33               	movwf	(seg_7_pins_write@_seg_+1)^0,c
   521   00FF12  C01F  F029         	movff	_secs,___awdiv@dividend
   522   00FF16  6A2A               	clrf	(___awdiv@dividend+1)^0,c
   523   00FF18  0E00               	movlw	0
   524   00FF1A  6E2C               	movwf	(___awdiv@divisor+1)^0,c
   525   00FF1C  0E0A               	movlw	10
   526   00FF1E  6E2B               	movwf	___awdiv@divisor^0,c
   527   00FF20  EC89  F07D         	call	___awdiv	;wreg free
   528   00FF24  5029               	movf	?___awdiv^0,w,c
   529   00FF26  6E34               	movwf	seg_7_pins_write@number^0,c
   530   00FF28  ECE7  F07C         	call	_seg_7_pins_write	;wreg free
   531   00FF2C  6E43               	movwf	_ret^0,c
   532   00FF2E                     
   533                           ;Application.c: 103:             ret = gpio_pin_write_logic(&control_pin_3 , GPIO_HIGH);
   534   00FF2E  0E26               	movlw	low _control_pin_3
   535   00FF30  6E29               	movwf	gpio_pin_write_logic@str^0,c
   536   00FF32  0E00               	movlw	high _control_pin_3
   537   00FF34  6E2A               	movwf	(gpio_pin_write_logic@str+1)^0,c
   538   00FF36  0E01               	movlw	1
   539   00FF38  6E2B               	movwf	gpio_pin_write_logic@LOG^0,c
   540   00FF3A  EC7A  F07E         	call	_gpio_pin_write_logic	;wreg free
   541   00FF3E  6E43               	movwf	_ret^0,c
   542   00FF40                     
   543                           ;Application.c: 104:             _delay((unsigned long)((5)*(8000000U/4000.0)));
   544   00FF40  0E0D               	movlw	13
   545   00FF42  6E39               	movwf	??_main^0,c
   546   00FF44  0EFC               	movlw	252
   547   00FF46                     u1357:
   548   00FF46  2EE8               	decfsz	wreg,f,c
   549   00FF48  D7FE               	bra	u1357
   550   00FF4A  2E39               	decfsz	??_main^0,f,c
   551   00FF4C  D7FC               	bra	u1357
   552                           
   553                           ;Application.c: 105:             ret = gpio_pin_write_logic(&control_pin_3 , GPIO_LOW);
   554   00FF4E  0E26               	movlw	low _control_pin_3
   555   00FF50  6E29               	movwf	gpio_pin_write_logic@str^0,c
   556   00FF52  0E00               	movlw	high _control_pin_3
   557   00FF54  6E2A               	movwf	(gpio_pin_write_logic@str+1)^0,c
   558   00FF56  0E00               	movlw	0
   559   00FF58  6E2B               	movwf	gpio_pin_write_logic@LOG^0,c
   560   00FF5A  EC7A  F07E         	call	_gpio_pin_write_logic	;wreg free
   561   00FF5E  6E43               	movwf	_ret^0,c
   562                           
   563                           ;Application.c: 107:             ret = seg_7_pins_write(&seg_1 , (uint8)(secs%10));
   564   00FF60  0E20               	movlw	low _seg_1
   565   00FF62  6E32               	movwf	seg_7_pins_write@_seg_^0,c
   566   00FF64  0E00               	movlw	high _seg_1
   567   00FF66  6E33               	movwf	(seg_7_pins_write@_seg_+1)^0,c
   568   00FF68  C01F  F029         	movff	_secs,___awmod@dividend
   569   00FF6C  6A2A               	clrf	(___awmod@dividend+1)^0,c
   570   00FF6E  0E00               	movlw	0
   571   00FF70  6E2C               	movwf	(___awmod@divisor+1)^0,c
   572   00FF72  0E0A               	movlw	10
   573   00FF74  6E2B               	movwf	___awmod@divisor^0,c
   574   00FF76  EC31  F07D         	call	___awmod	;wreg free
   575   00FF7A  5029               	movf	?___awmod^0,w,c
   576   00FF7C  6E34               	movwf	seg_7_pins_write@number^0,c
   577   00FF7E  ECE7  F07C         	call	_seg_7_pins_write	;wreg free
   578   00FF82  6E43               	movwf	_ret^0,c
   579                           
   580                           ;Application.c: 108:             ret = gpio_pin_write_logic(&control_pin_4 , GPIO_HIGH);
   581   00FF84  0E25               	movlw	low _control_pin_4
   582   00FF86  6E29               	movwf	gpio_pin_write_logic@str^0,c
   583   00FF88  0E00               	movlw	high _control_pin_4
   584   00FF8A  6E2A               	movwf	(gpio_pin_write_logic@str+1)^0,c
   585   00FF8C  0E01               	movlw	1
   586   00FF8E  6E2B               	movwf	gpio_pin_write_logic@LOG^0,c
   587   00FF90  EC7A  F07E         	call	_gpio_pin_write_logic	;wreg free
   588   00FF94  6E43               	movwf	_ret^0,c
   589   00FF96                     
   590                           ;Application.c: 109:             _delay((unsigned long)((5)*(8000000U/4000.0)));
   591   00FF96  0E0D               	movlw	13
   592   00FF98  6E39               	movwf	??_main^0,c
   593   00FF9A  0EFC               	movlw	252
   594   00FF9C                     u1367:
   595   00FF9C  2EE8               	decfsz	wreg,f,c
   596   00FF9E  D7FE               	bra	u1367
   597   00FFA0  2E39               	decfsz	??_main^0,f,c
   598   00FFA2  D7FC               	bra	u1367
   599   00FFA4                     
   600                           ;Application.c: 110:             ret = gpio_pin_write_logic(&control_pin_4 , GPIO_LOW);
   601   00FFA4  0E25               	movlw	low _control_pin_4
   602   00FFA6  6E29               	movwf	gpio_pin_write_logic@str^0,c
   603   00FFA8  0E00               	movlw	high _control_pin_4
   604   00FFAA  6E2A               	movwf	(gpio_pin_write_logic@str+1)^0,c
   605   00FFAC  0E00               	movlw	0
   606   00FFAE  6E2B               	movwf	gpio_pin_write_logic@LOG^0,c
   607   00FFB0  EC7A  F07E         	call	_gpio_pin_write_logic	;wreg free
   608   00FFB4  6E43               	movwf	_ret^0,c
   609   00FFB6                     
   610                           ;Application.c: 111:         }
   611   00FFB6  2A42               	incf	_counter^0,f,c
   612   00FFB8  0E31               	movlw	49
   613   00FFBA  6442               	cpfsgt	_counter^0,c
   614   00FFBC  EFE2  F07F         	goto	u1261
   615   00FFC0  EFE4  F07F         	goto	u1260
   616   00FFC4                     u1261:
   617   00FFC4  EF2F  F07F         	goto	l1755
   618   00FFC8                     u1260:
   619   00FFC8                     
   620                           ;Application.c: 113:         secs++;
   621   00FFC8  2A1F               	incf	_secs^0,f,c
   622   00FFCA                     
   623                           ;Application.c: 115:         if(60 == secs){
   624   00FFCA  0E3C               	movlw	60
   625   00FFCC  181F               	xorwf	_secs^0,w,c
   626   00FFCE  A4D8               	btfss	status,2,c
   627   00FFD0  EFEC  F07F         	goto	u1271
   628   00FFD4  EFEE  F07F         	goto	u1270
   629   00FFD8                     u1271:
   630   00FFD8  EFF1  F07F         	goto	l1787
   631   00FFDC                     u1270:
   632   00FFDC                     
   633                           ;Application.c: 116:             secs = 0;
   634   00FFDC  0E00               	movlw	0
   635   00FFDE  6E1F               	movwf	_secs^0,c
   636   00FFE0                     
   637                           ;Application.c: 117:             mins++;
   638   00FFE0  2A3A               	incf	_mins^0,f,c
   639   00FFE2                     l1787:
   640                           
   641                           ;Application.c: 120:         if(60 == mins){
   642   00FFE2  0E3C               	movlw	60
   643   00FFE4  183A               	xorwf	_mins^0,w,c
   644   00FFE6  A4D8               	btfss	status,2,c
   645   00FFE8  EFF8  F07F         	goto	u1281
   646   00FFEC  EFFA  F07F         	goto	u1280
   647   00FFF0                     u1281:
   648   00FFF0  EF2D  F07F         	goto	l1749
   649   00FFF4                     u1280:
   650   00FFF4                     
   651                           ;Application.c: 121:             mins = 0;
   652   00FFF4  0E00               	movlw	0
   653   00FFF6  6E3A               	movwf	_mins^0,c
   654   00FFF8  EF2D  F07F         	goto	l1749
   655   00FFFC  EF00  F000         	goto	start
   656   010000                     __end_of_main:
   657                           	callstack 0
   658                           
   659 ;; *************** function _seg_7_pins_write *****************
   660 ;; Defined at:
   661 ;;		line 29 in file "ECU_Layer/SEG_7/Seg_7.c"
   662 ;; Parameters:    Size  Location     Type
   663 ;;  _seg_           2    9[COMRAM] PTR struct .
   664 ;;		 -> seg_1(5), 
   665 ;;  number          1   11[COMRAM] unsigned char 
   666 ;; Auto vars:     Size  Location     Type
   667 ;;  ret             1   12[COMRAM] unsigned char 
   668 ;; Return value:  Size  Location     Type
   669 ;;                  1    wreg      unsigned char 
   670 ;; Registers used:
   671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   672 ;; Tracked objects:
   673 ;;		On entry : 0/0
   674 ;;		On exit  : 0/0
   675 ;;		Unchanged: 0/0
   676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   677 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   678 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   680 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   681 ;;Total ram usage:        4 bytes
   682 ;; Hardware stack levels used: 1
   683 ;; Hardware stack levels required when called: 1
   684 ;; This function calls:
   685 ;;		_gpio_pin_write_logic
   686 ;; This function is called by:
   687 ;;		_main
   688 ;; This function uses a non-reentrant model
   689 ;;
   690                           
   691                           	psect	text1
   692   00F9CE                     __ptext1:
   693                           	callstack 0
   694   00F9CE                     _seg_7_pins_write:
   695                           	callstack 29
   696   00F9CE                     
   697                           ;ECU_Layer/SEG_7/Seg_7.c: 33:     if(((void*)0) == _seg_ || (number > 9)){
   698   00F9CE  5032               	movf	seg_7_pins_write@_seg_^0,w,c
   699   00F9D0  1033               	iorwf	(seg_7_pins_write@_seg_+1)^0,w,c
   700   00F9D2  B4D8               	btfsc	status,2,c
   701   00F9D4  EFEE  F07C         	goto	u931
   702   00F9D8  EFF0  F07C         	goto	u930
   703   00F9DC                     u931:
   704   00F9DC  EFF8  F07C         	goto	l1547
   705   00F9E0                     u930:
   706   00F9E0  0E09               	movlw	9
   707   00F9E2  6434               	cpfsgt	seg_7_pins_write@number^0,c
   708   00F9E4  EFF6  F07C         	goto	u941
   709   00F9E8  EFF8  F07C         	goto	u940
   710   00F9EC                     u941:
   711   00F9EC  EFFC  F07C         	goto	l1549
   712   00F9F0                     u940:
   713   00F9F0                     l1547:
   714                           
   715                           ;ECU_Layer/SEG_7/Seg_7.c: 34:         ret = (Std_ReturnType)0x01;
   716   00F9F0  0E01               	movlw	1
   717   00F9F2  6E35               	movwf	seg_7_pins_write@ret^0,c
   718                           
   719                           ;ECU_Layer/SEG_7/Seg_7.c: 35:     }
   720   00F9F4  EF2F  F07D         	goto	l1551
   721   00F9F8                     l1549:
   722                           
   723                           ;ECU_Layer/SEG_7/Seg_7.c: 38:         ret = gpio_pin_write_logic(&(_seg_->SEG_PINS[0]) ,
      +                           number & 0x01);
   724   00F9F8  C032  F029         	movff	seg_7_pins_write@_seg_,gpio_pin_write_logic@str
   725   00F9FC  C033  F02A         	movff	seg_7_pins_write@_seg_+1,gpio_pin_write_logic@str+1
   726   00FA00  5034               	movf	seg_7_pins_write@number^0,w,c
   727   00FA02  0B01               	andlw	1
   728   00FA04  6E2B               	movwf	gpio_pin_write_logic@LOG^0,c
   729   00FA06  EC7A  F07E         	call	_gpio_pin_write_logic	;wreg free
   730   00FA0A  6E35               	movwf	seg_7_pins_write@ret^0,c
   731                           
   732                           ;ECU_Layer/SEG_7/Seg_7.c: 39:         ret = gpio_pin_write_logic(&(_seg_->SEG_PINS[1]) ,
      +                           (number>>1) & 0x01);
   733   00FA0C  0E01               	movlw	1
   734   00FA0E  2432               	addwf	seg_7_pins_write@_seg_^0,w,c
   735   00FA10  6E29               	movwf	gpio_pin_write_logic@str^0,c
   736   00FA12  0E00               	movlw	0
   737   00FA14  2033               	addwfc	(seg_7_pins_write@_seg_+1)^0,w,c
   738   00FA16  6E2A               	movwf	(gpio_pin_write_logic@str+1)^0,c
   739   00FA18  90D8               	bcf	status,0,c
   740   00FA1A  3034               	rrcf	seg_7_pins_write@number^0,w,c
   741   00FA1C  0B01               	andlw	1
   742   00FA1E  6E2B               	movwf	gpio_pin_write_logic@LOG^0,c
   743   00FA20  EC7A  F07E         	call	_gpio_pin_write_logic	;wreg free
   744   00FA24  6E35               	movwf	seg_7_pins_write@ret^0,c
   745                           
   746                           ;ECU_Layer/SEG_7/Seg_7.c: 40:         ret = gpio_pin_write_logic(&(_seg_->SEG_PINS[2]) ,
      +                           (number>>2) & 0x01);
   747   00FA26  0E02               	movlw	2
   748   00FA28  2432               	addwf	seg_7_pins_write@_seg_^0,w,c
   749   00FA2A  6E29               	movwf	gpio_pin_write_logic@str^0,c
   750   00FA2C  0E00               	movlw	0
   751   00FA2E  2033               	addwfc	(seg_7_pins_write@_seg_+1)^0,w,c
   752   00FA30  6E2A               	movwf	(gpio_pin_write_logic@str+1)^0,c
   753   00FA32  4034               	rrncf	seg_7_pins_write@number^0,w,c
   754   00FA34  42E8               	rrncf	wreg,f,c
   755   00FA36  0B3F               	andlw	63
   756   00FA38  0B01               	andlw	1
   757   00FA3A  6E2B               	movwf	gpio_pin_write_logic@LOG^0,c
   758   00FA3C  EC7A  F07E         	call	_gpio_pin_write_logic	;wreg free
   759   00FA40  6E35               	movwf	seg_7_pins_write@ret^0,c
   760                           
   761                           ;ECU_Layer/SEG_7/Seg_7.c: 41:         ret = gpio_pin_write_logic(&(_seg_->SEG_PINS[3]) ,
      +                           (number>>3) & 0x01);
   762   00FA42  0E03               	movlw	3
   763   00FA44  2432               	addwf	seg_7_pins_write@_seg_^0,w,c
   764   00FA46  6E29               	movwf	gpio_pin_write_logic@str^0,c
   765   00FA48  0E00               	movlw	0
   766   00FA4A  2033               	addwfc	(seg_7_pins_write@_seg_+1)^0,w,c
   767   00FA4C  6E2A               	movwf	(gpio_pin_write_logic@str+1)^0,c
   768   00FA4E  3834               	swapf	seg_7_pins_write@number^0,w,c
   769   00FA50  46E8               	rlncf	wreg,f,c
   770   00FA52  0B1F               	andlw	31
   771   00FA54  0B01               	andlw	1
   772   00FA56  6E2B               	movwf	gpio_pin_write_logic@LOG^0,c
   773   00FA58  EC7A  F07E         	call	_gpio_pin_write_logic	;wreg free
   774   00FA5C  6E35               	movwf	seg_7_pins_write@ret^0,c
   775   00FA5E                     l1551:
   776                           
   777                           ;ECU_Layer/SEG_7/Seg_7.c: 44:     return ret;
   778   00FA5E  5035               	movf	seg_7_pins_write@ret^0,w,c
   779   00FA60  0012               	return		;funcret
   780   00FA62                     __end_of_seg_7_pins_write:
   781                           	callstack 0
   782                           
   783 ;; *************** function _seg_7_pins_intialize *****************
   784 ;; Defined at:
   785 ;;		line 11 in file "ECU_Layer/SEG_7/Seg_7.c"
   786 ;; Parameters:    Size  Location     Type
   787 ;;  _seg_           2   13[COMRAM] PTR struct .
   788 ;;		 -> seg_1(5), 
   789 ;; Auto vars:     Size  Location     Type
   790 ;;  ret             1   15[COMRAM] unsigned char 
   791 ;; Return value:  Size  Location     Type
   792 ;;                  1    wreg      unsigned char 
   793 ;; Registers used:
   794 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   795 ;; Tracked objects:
   796 ;;		On entry : 0/0
   797 ;;		On exit  : 0/0
   798 ;;		Unchanged: 0/0
   799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   800 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   801 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   803 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   804 ;;Total ram usage:        3 bytes
   805 ;; Hardware stack levels used: 1
   806 ;; Hardware stack levels required when called: 2
   807 ;; This function calls:
   808 ;;		_gpio_pin_intialize
   809 ;; This function is called by:
   810 ;;		_main
   811 ;; This function uses a non-reentrant model
   812 ;;
   813                           
   814                           	psect	text2
   815   00F904                     __ptext2:
   816                           	callstack 0
   817   00F904                     _seg_7_pins_intialize:
   818                           	callstack 28
   819   00F904                     
   820                           ;ECU_Layer/SEG_7/Seg_7.c: 15:     if(((void*)0) == _seg_){
   821   00F904  5036               	movf	seg_7_pins_intialize@_seg_^0,w,c
   822   00F906  1037               	iorwf	(seg_7_pins_intialize@_seg_+1)^0,w,c
   823   00F908  A4D8               	btfss	status,2,c
   824   00F90A  EF89  F07C         	goto	u921
   825   00F90E  EF8B  F07C         	goto	u920
   826   00F912                     u921:
   827   00F912  EF8F  F07C         	goto	l1535
   828   00F916                     u920:
   829   00F916                     
   830                           ;ECU_Layer/SEG_7/Seg_7.c: 16:         ret = (Std_ReturnType)0x01;
   831   00F916  0E01               	movlw	1
   832   00F918  6E38               	movwf	seg_7_pins_intialize@ret^0,c
   833                           
   834                           ;ECU_Layer/SEG_7/Seg_7.c: 17:     }
   835   00F91A  EFB1  F07C         	goto	l1537
   836   00F91E                     l1535:
   837                           
   838                           ;ECU_Layer/SEG_7/Seg_7.c: 20:         ret = gpio_pin_intialize(&(_seg_->SEG_PINS[0]));
   839   00F91E  C036  F032         	movff	seg_7_pins_intialize@_seg_,gpio_pin_intialize@str
   840   00F922  C037  F033         	movff	seg_7_pins_intialize@_seg_+1,gpio_pin_intialize@str+1
   841   00F926  ECB3  F07C         	call	_gpio_pin_intialize	;wreg free
   842   00F92A  6E38               	movwf	seg_7_pins_intialize@ret^0,c
   843                           
   844                           ;ECU_Layer/SEG_7/Seg_7.c: 21:         ret = gpio_pin_intialize(&(_seg_->SEG_PINS[1]));
   845   00F92C  0E01               	movlw	1
   846   00F92E  2436               	addwf	seg_7_pins_intialize@_seg_^0,w,c
   847   00F930  6E32               	movwf	gpio_pin_intialize@str^0,c
   848   00F932  0E00               	movlw	0
   849   00F934  2037               	addwfc	(seg_7_pins_intialize@_seg_+1)^0,w,c
   850   00F936  6E33               	movwf	(gpio_pin_intialize@str+1)^0,c
   851   00F938  ECB3  F07C         	call	_gpio_pin_intialize	;wreg free
   852   00F93C  6E38               	movwf	seg_7_pins_intialize@ret^0,c
   853                           
   854                           ;ECU_Layer/SEG_7/Seg_7.c: 22:         ret = gpio_pin_intialize(&(_seg_->SEG_PINS[2]));
   855   00F93E  0E02               	movlw	2
   856   00F940  2436               	addwf	seg_7_pins_intialize@_seg_^0,w,c
   857   00F942  6E32               	movwf	gpio_pin_intialize@str^0,c
   858   00F944  0E00               	movlw	0
   859   00F946  2037               	addwfc	(seg_7_pins_intialize@_seg_+1)^0,w,c
   860   00F948  6E33               	movwf	(gpio_pin_intialize@str+1)^0,c
   861   00F94A  ECB3  F07C         	call	_gpio_pin_intialize	;wreg free
   862   00F94E  6E38               	movwf	seg_7_pins_intialize@ret^0,c
   863                           
   864                           ;ECU_Layer/SEG_7/Seg_7.c: 23:         ret = gpio_pin_intialize(&(_seg_->SEG_PINS[3]));
   865   00F950  0E03               	movlw	3
   866   00F952  2436               	addwf	seg_7_pins_intialize@_seg_^0,w,c
   867   00F954  6E32               	movwf	gpio_pin_intialize@str^0,c
   868   00F956  0E00               	movlw	0
   869   00F958  2037               	addwfc	(seg_7_pins_intialize@_seg_+1)^0,w,c
   870   00F95A  6E33               	movwf	(gpio_pin_intialize@str+1)^0,c
   871   00F95C  ECB3  F07C         	call	_gpio_pin_intialize	;wreg free
   872   00F960  6E38               	movwf	seg_7_pins_intialize@ret^0,c
   873   00F962                     l1537:
   874                           
   875                           ;ECU_Layer/SEG_7/Seg_7.c: 26:     return ret;
   876   00F962  5038               	movf	seg_7_pins_intialize@ret^0,w,c
   877   00F964  0012               	return		;funcret
   878   00F966                     __end_of_seg_7_pins_intialize:
   879                           	callstack 0
   880                           
   881 ;; *************** function _gpio_pin_intialize *****************
   882 ;; Defined at:
   883 ;;		line 108 in file "MCAL_Layer/GPIO/hal_gpio.c"
   884 ;; Parameters:    Size  Location     Type
   885 ;;  str             2    9[COMRAM] PTR const struct .
   886 ;;		 -> control_pin_4(1), control_pin_3(1), control_pin_2(1), control_pin_1(1), 
   887 ;;		 -> seg_1.SEG_PINS(4), seg_1(5), relay_initialize@rel_pin(1), led_intialize@LED_IN(1), 
   888 ;; Auto vars:     Size  Location     Type
   889 ;;  ret             1   12[COMRAM] unsigned char 
   890 ;; Return value:  Size  Location     Type
   891 ;;                  1    wreg      unsigned char 
   892 ;; Registers used:
   893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   894 ;; Tracked objects:
   895 ;;		On entry : 0/0
   896 ;;		On exit  : 0/0
   897 ;;		Unchanged: 0/0
   898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   899 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   900 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   901 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   902 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   903 ;;Total ram usage:        4 bytes
   904 ;; Hardware stack levels used: 1
   905 ;; Hardware stack levels required when called: 1
   906 ;; This function calls:
   907 ;;		_gpio_pin_direction_intialize
   908 ;;		_gpio_pin_write_logic
   909 ;; This function is called by:
   910 ;;		_main
   911 ;;		_seg_7_pins_intialize
   912 ;;		_led_intialize
   913 ;;		_relay_initialize
   914 ;; This function uses a non-reentrant model
   915 ;;
   916                           
   917                           	psect	text3
   918   00F966                     __ptext3:
   919                           	callstack 0
   920   00F966                     _gpio_pin_intialize:
   921                           	callstack 28
   922   00F966                     
   923                           ;MCAL_Layer/GPIO/hal_gpio.c: 112:     if(str == ((void*)0) || (str->PIN > 7)){
   924   00F966  5032               	movf	gpio_pin_intialize@str^0,w,c
   925   00F968  1033               	iorwf	(gpio_pin_intialize@str+1)^0,w,c
   926   00F96A  B4D8               	btfsc	status,2,c
   927   00F96C  EFBA  F07C         	goto	u901
   928   00F970  EFBC  F07C         	goto	u900
   929   00F974                     u901:
   930   00F974  EFCB  F07C         	goto	l1521
   931   00F978                     u900:
   932   00F978  C032  FFD9         	movff	gpio_pin_intialize@str,fsr2l
   933   00F97C  C033  FFDA         	movff	gpio_pin_intialize@str+1,fsr2h
   934   00F980  50DF               	movf	223,w,c
   935   00F982  0B07               	andlw	7
   936   00F984  6E34               	movwf	??_gpio_pin_intialize^0,c
   937   00F986  0E07               	movlw	7
   938   00F988  6434               	cpfsgt	??_gpio_pin_intialize^0,c
   939   00F98A  EFC9  F07C         	goto	u911
   940   00F98E  EFCB  F07C         	goto	u910
   941   00F992                     u911:
   942   00F992  EFCF  F07C         	goto	l1523
   943   00F996                     u910:
   944   00F996                     l1521:
   945                           
   946                           ;MCAL_Layer/GPIO/hal_gpio.c: 113:         ret = (Std_ReturnType)0x01;
   947   00F996  0E01               	movlw	1
   948   00F998  6E35               	movwf	gpio_pin_intialize@ret^0,c
   949                           
   950                           ;MCAL_Layer/GPIO/hal_gpio.c: 114:     }
   951   00F99A  EFE5  F07C         	goto	l1525
   952   00F99E                     l1523:
   953                           
   954                           ;MCAL_Layer/GPIO/hal_gpio.c: 116:        ret = gpio_pin_direction_intialize(str);
   955   00F99E  C032  F029         	movff	gpio_pin_intialize@str,gpio_pin_direction_intialize@str
   956   00F9A2  C033  F02A         	movff	gpio_pin_intialize@str+1,gpio_pin_direction_intialize@str+1
   957   00F9A6  ECEB  F07D         	call	_gpio_pin_direction_intialize	;wreg free
   958   00F9AA  6E35               	movwf	gpio_pin_intialize@ret^0,c
   959                           
   960                           ;MCAL_Layer/GPIO/hal_gpio.c: 117:        ret = gpio_pin_write_logic(str , str->Logic);
   961   00F9AC  C032  F029         	movff	gpio_pin_intialize@str,gpio_pin_write_logic@str
   962   00F9B0  C033  F02A         	movff	gpio_pin_intialize@str+1,gpio_pin_write_logic@str+1
   963   00F9B4  C032  FFD9         	movff	gpio_pin_intialize@str,fsr2l
   964   00F9B8  C033  FFDA         	movff	gpio_pin_intialize@str+1,fsr2h
   965   00F9BC  0E00               	movlw	0
   966   00F9BE  BEDF               	btfsc	indf2,7,c
   967   00F9C0  0E01               	movlw	1
   968   00F9C2  6E2B               	movwf	gpio_pin_write_logic@LOG^0,c
   969   00F9C4  EC7A  F07E         	call	_gpio_pin_write_logic	;wreg free
   970   00F9C8  6E35               	movwf	gpio_pin_intialize@ret^0,c
   971   00F9CA                     l1525:
   972                           
   973                           ;MCAL_Layer/GPIO/hal_gpio.c: 120:     return ret;
   974   00F9CA  5035               	movf	gpio_pin_intialize@ret^0,w,c
   975   00F9CC  0012               	return		;funcret
   976   00F9CE                     __end_of_gpio_pin_intialize:
   977                           	callstack 0
   978                           
   979 ;; *************** function _gpio_pin_write_logic *****************
   980 ;; Defined at:
   981 ;;		line 58 in file "MCAL_Layer/GPIO/hal_gpio.c"
   982 ;; Parameters:    Size  Location     Type
   983 ;;  str             2    0[COMRAM] PTR const struct .
   984 ;;		 -> control_pin_4(1), control_pin_3(1), control_pin_2(1), control_pin_1(1), 
   985 ;;		 -> seg_1.SEG_PINS(4), seg_1(5), relay_off@rel_pin(1), relay_on@rel_pin(1), 
   986 ;;		 -> relay_initialize@rel_pin(1), led_turn_off@LED_IN(1), led_turn_on@LED_IN(1), led_intialize@LED_IN(1), 
   987 ;;  LOG             1    2[COMRAM] enum E2989
   988 ;; Auto vars:     Size  Location     Type
   989 ;;  ret             1    0        unsigned char 
   990 ;; Return value:  Size  Location     Type
   991 ;;                  1    wreg      unsigned char 
   992 ;; Registers used:
   993 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   994 ;; Tracked objects:
   995 ;;		On entry : 0/0
   996 ;;		On exit  : 0/0
   997 ;;		Unchanged: 0/0
   998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   999 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1001 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1002 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1003 ;;Total ram usage:        9 bytes
  1004 ;; Hardware stack levels used: 1
  1005 ;; This function calls:
  1006 ;;		Nothing
  1007 ;; This function is called by:
  1008 ;;		_gpio_pin_intialize
  1009 ;;		_main
  1010 ;;		_seg_7_pins_write
  1011 ;;		_led_turn_on
  1012 ;;		_led_turn_off
  1013 ;;		_relay_on
  1014 ;;		_relay_off
  1015 ;;		_dc_motor_move_forward
  1016 ;;		_dc_motor_move_backward
  1017 ;;		_dc_motor_stop
  1018 ;; This function uses a non-reentrant model
  1019 ;;
  1020                           
  1021                           	psect	text4
  1022   00FCF4                     __ptext4:
  1023                           	callstack 0
  1024   00FCF4                     _gpio_pin_write_logic:
  1025                           	callstack 29
  1026   00FCF4                     
  1027                           ;MCAL_Layer/GPIO/hal_gpio.c: 61:     if(str == ((void*)0) || (str->PIN > 7)){
  1028   00FCF4  5029               	movf	gpio_pin_write_logic@str^0,w,c
  1029   00FCF6  102A               	iorwf	(gpio_pin_write_logic@str+1)^0,w,c
  1030   00FCF8  B4D8               	btfsc	status,2,c
  1031   00FCFA  EF81  F07E         	goto	u861
  1032   00FCFE  EF83  F07E         	goto	u860
  1033   00FD02                     u861:
  1034   00FD02  EF92  F07E         	goto	l1497
  1035   00FD06                     u860:
  1036   00FD06  C029  FFD9         	movff	gpio_pin_write_logic@str,fsr2l
  1037   00FD0A  C02A  FFDA         	movff	gpio_pin_write_logic@str+1,fsr2h
  1038   00FD0E  50DF               	movf	223,w,c
  1039   00FD10  0B07               	andlw	7
  1040   00FD12  6E2C               	movwf	??_gpio_pin_write_logic^0,c
  1041   00FD14  0E07               	movlw	7
  1042   00FD16  642C               	cpfsgt	??_gpio_pin_write_logic^0,c
  1043   00FD18  EF90  F07E         	goto	u871
  1044   00FD1C  EF92  F07E         	goto	u870
  1045   00FD20                     u871:
  1046   00FD20  EFF3  F07E         	goto	l1505
  1047   00FD24                     u870:
  1048   00FD24                     l1497:
  1049                           
  1050                           ;MCAL_Layer/GPIO/hal_gpio.c: 63:     }
  1051   00FD24  EF08  F07F         	goto	l1507
  1052   00FD28                     l1499:
  1053                           
  1054                           ;MCAL_Layer/GPIO/hal_gpio.c: 68:                 (*LAT_REG[str->PORT] |= (0x01 << str->P
      +                          IN));
  1055   00FD28  C029  FFD9         	movff	gpio_pin_write_logic@str,fsr2l
  1056   00FD2C  C02A  FFDA         	movff	gpio_pin_write_logic@str+1,fsr2h
  1057   00FD30  50DF               	movf	223,w,c
  1058   00FD32  0B07               	andlw	7
  1059   00FD34  6E2C               	movwf	??_gpio_pin_write_logic^0,c
  1060   00FD36  0E01               	movlw	1
  1061   00FD38  6E2D               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1062   00FD3A  2A2C               	incf	??_gpio_pin_write_logic^0,f,c
  1063   00FD3C  EFA2  F07E         	goto	u884
  1064   00FD40                     u885:
  1065   00FD40  90D8               	bcf	status,0,c
  1066   00FD42  362D               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1067   00FD44                     u884:
  1068   00FD44  2E2C               	decfsz	??_gpio_pin_write_logic^0,f,c
  1069   00FD46  EFA0  F07E         	goto	u885
  1070   00FD4A  C029  FFD9         	movff	gpio_pin_write_logic@str,fsr2l
  1071   00FD4E  C02A  FFDA         	movff	gpio_pin_write_logic@str+1,fsr2h
  1072   00FD52  30DF               	rrcf	223,w,c
  1073   00FD54  32E8               	rrcf	wreg,f,c
  1074   00FD56  32E8               	rrcf	wreg,f,c
  1075   00FD58  0B07               	andlw	7
  1076   00FD5A  6E2E               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1077   00FD5C  502E               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1078   00FD5E  0D02               	mullw	2
  1079   00FD60  0E15               	movlw	low _LAT_REG
  1080   00FD62  24F3               	addwf	243,w,c
  1081   00FD64  6ED9               	movwf	fsr2l,c
  1082   00FD66  0E00               	movlw	high _LAT_REG
  1083   00FD68  20F4               	addwfc	prodh,w,c
  1084   00FD6A  6EDA               	movwf	fsr2h,c
  1085   00FD6C  CFDE F02F          	movff	postinc2,??_gpio_pin_write_logic+3
  1086   00FD70  CFDD F030          	movff	postdec2,??_gpio_pin_write_logic+4
  1087   00FD74  C02F  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1088   00FD78  C030  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1089   00FD7C  502D               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1090   00FD7E  12DF               	iorwf	indf2,f,c
  1091                           
  1092                           ;MCAL_Layer/GPIO/hal_gpio.c: 69:                 break;
  1093   00FD80  EF08  F07F         	goto	l1507
  1094   00FD84                     l1501:
  1095                           
  1096                           ;MCAL_Layer/GPIO/hal_gpio.c: 71:                 (*LAT_REG[str->PORT] &= ~(0x01 << str->
      +                          PIN));
  1097   00FD84  C029  FFD9         	movff	gpio_pin_write_logic@str,fsr2l
  1098   00FD88  C02A  FFDA         	movff	gpio_pin_write_logic@str+1,fsr2h
  1099   00FD8C  50DF               	movf	223,w,c
  1100   00FD8E  0B07               	andlw	7
  1101   00FD90  6E2C               	movwf	??_gpio_pin_write_logic^0,c
  1102   00FD92  0E01               	movlw	1
  1103   00FD94  6E2D               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1104   00FD96  2A2C               	incf	??_gpio_pin_write_logic^0,f,c
  1105   00FD98  EFD0  F07E         	goto	u894
  1106   00FD9C                     u895:
  1107   00FD9C  90D8               	bcf	status,0,c
  1108   00FD9E  362D               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1109   00FDA0                     u894:
  1110   00FDA0  2E2C               	decfsz	??_gpio_pin_write_logic^0,f,c
  1111   00FDA2  EFCE  F07E         	goto	u895
  1112   00FDA6  502D               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1113   00FDA8  0AFF               	xorlw	255
  1114   00FDAA  6E2E               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1115   00FDAC  C029  FFD9         	movff	gpio_pin_write_logic@str,fsr2l
  1116   00FDB0  C02A  FFDA         	movff	gpio_pin_write_logic@str+1,fsr2h
  1117   00FDB4  30DF               	rrcf	223,w,c
  1118   00FDB6  32E8               	rrcf	wreg,f,c
  1119   00FDB8  32E8               	rrcf	wreg,f,c
  1120   00FDBA  0B07               	andlw	7
  1121   00FDBC  6E2F               	movwf	(??_gpio_pin_write_logic+3)^0,c
  1122   00FDBE  502F               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  1123   00FDC0  0D02               	mullw	2
  1124   00FDC2  0E15               	movlw	low _LAT_REG
  1125   00FDC4  24F3               	addwf	243,w,c
  1126   00FDC6  6ED9               	movwf	fsr2l,c
  1127   00FDC8  0E00               	movlw	high _LAT_REG
  1128   00FDCA  20F4               	addwfc	prodh,w,c
  1129   00FDCC  6EDA               	movwf	fsr2h,c
  1130   00FDCE  CFDE F030          	movff	postinc2,??_gpio_pin_write_logic+4
  1131   00FDD2  CFDD F031          	movff	postdec2,??_gpio_pin_write_logic+5
  1132   00FDD6  C030  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  1133   00FDDA  C031  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  1134   00FDDE  502E               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1135   00FDE0  16DF               	andwf	indf2,f,c
  1136                           
  1137                           ;MCAL_Layer/GPIO/hal_gpio.c: 72:                 break;
  1138   00FDE2  EF08  F07F         	goto	l1507
  1139   00FDE6                     l1505:
  1140   00FDE6  502B               	movf	gpio_pin_write_logic@LOG^0,w,c
  1141   00FDE8  6E2C               	movwf	??_gpio_pin_write_logic^0,c
  1142   00FDEA  6A2D               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1143                           
  1144                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1145                           ; Switch size 1, requested type "simple"
  1146                           ; Number of cases is 1, Range of values is 0 to 0
  1147                           ; switch strategies available:
  1148                           ; Name         Instructions Cycles
  1149                           ; simple_byte            4     3 (average)
  1150                           ;	Chosen strategy is simple_byte
  1151   00FDEC  502D               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1152   00FDEE  0A00               	xorlw	0	; case 0
  1153   00FDF0  B4D8               	btfsc	status,2,c
  1154   00FDF2  EFFD  F07E         	goto	l1835
  1155   00FDF6  EF92  F07E         	goto	l1497
  1156   00FDFA                     l1835:
  1157                           
  1158                           ; Switch size 1, requested type "simple"
  1159                           ; Number of cases is 2, Range of values is 0 to 1
  1160                           ; switch strategies available:
  1161                           ; Name         Instructions Cycles
  1162                           ; simple_byte            7     4 (average)
  1163                           ;	Chosen strategy is simple_byte
  1164   00FDFA  502C               	movf	??_gpio_pin_write_logic^0,w,c
  1165   00FDFC  0A00               	xorlw	0	; case 0
  1166   00FDFE  B4D8               	btfsc	status,2,c
  1167   00FE00  EFC2  F07E         	goto	l1501
  1168   00FE04  0A01               	xorlw	1	; case 1
  1169   00FE06  B4D8               	btfsc	status,2,c
  1170   00FE08  EF94  F07E         	goto	l1499
  1171   00FE0C  EF92  F07E         	goto	l1497
  1172   00FE10                     l1507:
  1173                           
  1174                           ;MCAL_Layer/GPIO/hal_gpio.c: 78:     return ret;
  1175   00FE10  0E01               	movlw	1
  1176   00FE12  0012               	return		;funcret
  1177   00FE14                     __end_of_gpio_pin_write_logic:
  1178                           	callstack 0
  1179                           
  1180 ;; *************** function _gpio_pin_direction_intialize *****************
  1181 ;; Defined at:
  1182 ;;		line 20 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1183 ;; Parameters:    Size  Location     Type
  1184 ;;  str             2    0[COMRAM] PTR const struct .
  1185 ;;		 -> control_pin_4(1), control_pin_3(1), control_pin_2(1), control_pin_1(1), 
  1186 ;;		 -> seg_1.SEG_PINS(4), seg_1(5), relay_initialize@rel_pin(1), led_intialize@LED_IN(1), 
  1187 ;; Auto vars:     Size  Location     Type
  1188 ;;  ret             1    0        unsigned char 
  1189 ;; Return value:  Size  Location     Type
  1190 ;;                  1    wreg      unsigned char 
  1191 ;; Registers used:
  1192 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1193 ;; Tracked objects:
  1194 ;;		On entry : 0/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1198 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1200 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1201 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1202 ;;Total ram usage:        8 bytes
  1203 ;; Hardware stack levels used: 1
  1204 ;; This function calls:
  1205 ;;		Nothing
  1206 ;; This function is called by:
  1207 ;;		_gpio_pin_intialize
  1208 ;;		_button_initialize
  1209 ;;		_dc_motor_initialize
  1210 ;; This function uses a non-reentrant model
  1211 ;;
  1212                           
  1213                           	psect	text5
  1214   00FBD6                     __ptext5:
  1215                           	callstack 0
  1216   00FBD6                     _gpio_pin_direction_intialize:
  1217                           	callstack 28
  1218   00FBD6                     
  1219                           ;MCAL_Layer/GPIO/hal_gpio.c: 24:     if(str == ((void*)0) || (str->PIN > 7)){
  1220   00FBD6  5029               	movf	gpio_pin_direction_intialize@str^0,w,c
  1221   00FBD8  102A               	iorwf	(gpio_pin_direction_intialize@str+1)^0,w,c
  1222   00FBDA  B4D8               	btfsc	status,2,c
  1223   00FBDC  EFF2  F07D         	goto	u801
  1224   00FBE0  EFF4  F07D         	goto	u800
  1225   00FBE4                     u801:
  1226   00FBE4  EF03  F07E         	goto	l1477
  1227   00FBE8                     u800:
  1228   00FBE8  C029  FFD9         	movff	gpio_pin_direction_intialize@str,fsr2l
  1229   00FBEC  C02A  FFDA         	movff	gpio_pin_direction_intialize@str+1,fsr2h
  1230   00FBF0  50DF               	movf	223,w,c
  1231   00FBF2  0B07               	andlw	7
  1232   00FBF4  6E2B               	movwf	??_gpio_pin_direction_intialize^0,c
  1233   00FBF6  0E07               	movlw	7
  1234   00FBF8  642B               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  1235   00FBFA  EF01  F07E         	goto	u811
  1236   00FBFE  EF03  F07E         	goto	u810
  1237   00FC02                     u811:
  1238   00FC02  EF05  F07E         	goto	l1479
  1239   00FC06                     u810:
  1240   00FC06                     l1477:
  1241                           
  1242                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:     }
  1243   00FC06  EF78  F07E         	goto	l129
  1244   00FC0A                     l1479:
  1245                           
  1246                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:         if(GPIO_DIRECTION_OUTPUT == str->Direction){
  1247   00FC0A  C029  FFD9         	movff	gpio_pin_direction_intialize@str,fsr2l
  1248   00FC0E  C02A  FFDA         	movff	gpio_pin_direction_intialize@str+1,fsr2h
  1249   00FC12  BCDF               	btfsc	indf2,6,c
  1250   00FC14  EF0E  F07E         	goto	u821
  1251   00FC18  EF10  F07E         	goto	u820
  1252   00FC1C                     u821:
  1253   00FC1C  EF41  F07E         	goto	l1483
  1254   00FC20                     u820:
  1255   00FC20                     
  1256                           ;MCAL_Layer/GPIO/hal_gpio.c: 30:             (*TRIS_REG[str->PORT] &= ~(0x01 << str->PIN
      +                          ));
  1257   00FC20  C029  FFD9         	movff	gpio_pin_direction_intialize@str,fsr2l
  1258   00FC24  C02A  FFDA         	movff	gpio_pin_direction_intialize@str+1,fsr2h
  1259   00FC28  50DF               	movf	223,w,c
  1260   00FC2A  0B07               	andlw	7
  1261   00FC2C  6E2B               	movwf	??_gpio_pin_direction_intialize^0,c
  1262   00FC2E  0E01               	movlw	1
  1263   00FC30  6E2C               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  1264   00FC32  2A2B               	incf	??_gpio_pin_direction_intialize^0,f,c
  1265   00FC34  EF1E  F07E         	goto	u834
  1266   00FC38                     u835:
  1267   00FC38  90D8               	bcf	status,0,c
  1268   00FC3A  362C               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  1269   00FC3C                     u834:
  1270   00FC3C  2E2B               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  1271   00FC3E  EF1C  F07E         	goto	u835
  1272   00FC42  502C               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1273   00FC44  0AFF               	xorlw	255
  1274   00FC46  6E2D               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  1275   00FC48  C029  FFD9         	movff	gpio_pin_direction_intialize@str,fsr2l
  1276   00FC4C  C02A  FFDA         	movff	gpio_pin_direction_intialize@str+1,fsr2h
  1277   00FC50  30DF               	rrcf	223,w,c
  1278   00FC52  32E8               	rrcf	wreg,f,c
  1279   00FC54  32E8               	rrcf	wreg,f,c
  1280   00FC56  0B07               	andlw	7
  1281   00FC58  6E2E               	movwf	(??_gpio_pin_direction_intialize+3)^0,c
  1282   00FC5A  502E               	movf	(??_gpio_pin_direction_intialize+3)^0,w,c
  1283   00FC5C  0D02               	mullw	2
  1284   00FC5E  0E0B               	movlw	low _TRIS_REG
  1285   00FC60  24F3               	addwf	243,w,c
  1286   00FC62  6ED9               	movwf	fsr2l,c
  1287   00FC64  0E00               	movlw	high _TRIS_REG
  1288   00FC66  20F4               	addwfc	prodh,w,c
  1289   00FC68  6EDA               	movwf	fsr2h,c
  1290   00FC6A  CFDE F02F          	movff	postinc2,??_gpio_pin_direction_intialize+4
  1291   00FC6E  CFDD F030          	movff	postdec2,??_gpio_pin_direction_intialize+5
  1292   00FC72  C02F  FFD9         	movff	??_gpio_pin_direction_intialize+4,fsr2l
  1293   00FC76  C030  FFDA         	movff	??_gpio_pin_direction_intialize+5,fsr2h
  1294   00FC7A  502D               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  1295   00FC7C  16DF               	andwf	indf2,f,c
  1296                           
  1297                           ;MCAL_Layer/GPIO/hal_gpio.c: 31:         }
  1298   00FC7E  EF78  F07E         	goto	l129
  1299   00FC82                     l1483:
  1300   00FC82  C029  FFD9         	movff	gpio_pin_direction_intialize@str,fsr2l
  1301   00FC86  C02A  FFDA         	movff	gpio_pin_direction_intialize@str+1,fsr2h
  1302   00FC8A  ACDF               	btfss	indf2,6,c
  1303   00FC8C  EF4A  F07E         	goto	u841
  1304   00FC90  EF4C  F07E         	goto	u840
  1305   00FC94                     u841:
  1306   00FC94  EF03  F07E         	goto	l1477
  1307   00FC98                     u840:
  1308   00FC98                     
  1309                           ;MCAL_Layer/GPIO/hal_gpio.c: 34:             (*TRIS_REG[str->PORT] |= (0x01 << str->PIN)
      +                          );
  1310   00FC98  C029  FFD9         	movff	gpio_pin_direction_intialize@str,fsr2l
  1311   00FC9C  C02A  FFDA         	movff	gpio_pin_direction_intialize@str+1,fsr2h
  1312   00FCA0  50DF               	movf	223,w,c
  1313   00FCA2  0B07               	andlw	7
  1314   00FCA4  6E2B               	movwf	??_gpio_pin_direction_intialize^0,c
  1315   00FCA6  0E01               	movlw	1
  1316   00FCA8  6E2C               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  1317   00FCAA  2A2B               	incf	??_gpio_pin_direction_intialize^0,f,c
  1318   00FCAC  EF5A  F07E         	goto	u854
  1319   00FCB0                     u855:
  1320   00FCB0  90D8               	bcf	status,0,c
  1321   00FCB2  362C               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  1322   00FCB4                     u854:
  1323   00FCB4  2E2B               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  1324   00FCB6  EF58  F07E         	goto	u855
  1325   00FCBA  C029  FFD9         	movff	gpio_pin_direction_intialize@str,fsr2l
  1326   00FCBE  C02A  FFDA         	movff	gpio_pin_direction_intialize@str+1,fsr2h
  1327   00FCC2  30DF               	rrcf	223,w,c
  1328   00FCC4  32E8               	rrcf	wreg,f,c
  1329   00FCC6  32E8               	rrcf	wreg,f,c
  1330   00FCC8  0B07               	andlw	7
  1331   00FCCA  6E2D               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  1332   00FCCC  502D               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  1333   00FCCE  0D02               	mullw	2
  1334   00FCD0  0E0B               	movlw	low _TRIS_REG
  1335   00FCD2  24F3               	addwf	243,w,c
  1336   00FCD4  6ED9               	movwf	fsr2l,c
  1337   00FCD6  0E00               	movlw	high _TRIS_REG
  1338   00FCD8  20F4               	addwfc	prodh,w,c
  1339   00FCDA  6EDA               	movwf	fsr2h,c
  1340   00FCDC  CFDE F02E          	movff	postinc2,??_gpio_pin_direction_intialize+3
  1341   00FCE0  CFDD F02F          	movff	postdec2,??_gpio_pin_direction_intialize+4
  1342   00FCE4  C02E  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  1343   00FCE8  C02F  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  1344   00FCEC  502C               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1345   00FCEE  12DF               	iorwf	indf2,f,c
  1346   00FCF0                     l129:
  1347                           
  1348                           ;MCAL_Layer/GPIO/hal_gpio.c: 40:     return ret;
  1349   00FCF0  0E01               	movlw	1
  1350   00FCF2  0012               	return		;funcret
  1351   00FCF4                     __end_of_gpio_pin_direction_intialize:
  1352                           	callstack 0
  1353                           
  1354 ;; *************** function ___awmod *****************
  1355 ;; Defined at:
  1356 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  1357 ;; Parameters:    Size  Location     Type
  1358 ;;  dividend        2    0[COMRAM] int 
  1359 ;;  divisor         2    2[COMRAM] int 
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;  sign            1    5[COMRAM] unsigned char 
  1362 ;;  counter         1    4[COMRAM] unsigned char 
  1363 ;; Return value:  Size  Location     Type
  1364 ;;                  2    0[COMRAM] int 
  1365 ;; Registers used:
  1366 ;;		wreg, status,2, status,0
  1367 ;; Tracked objects:
  1368 ;;		On entry : 0/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1372 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1373 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1375 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1376 ;;Total ram usage:        6 bytes
  1377 ;; Hardware stack levels used: 1
  1378 ;; This function calls:
  1379 ;;		Nothing
  1380 ;; This function is called by:
  1381 ;;		_main
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385                           	psect	text6
  1386   00FA62                     __ptext6:
  1387                           	callstack 0
  1388   00FA62                     ___awmod:
  1389                           	callstack 30
  1390   00FA62  0E00               	movlw	0
  1391   00FA64  6E2E               	movwf	___awmod@sign^0,c
  1392   00FA66  BE2A               	btfsc	(___awmod@dividend+1)^0,7,c
  1393   00FA68  EF3A  F07D         	goto	u1010
  1394   00FA6C  EF38  F07D         	goto	u1011
  1395   00FA70                     u1011:
  1396   00FA70  EF40  F07D         	goto	l1607
  1397   00FA74                     u1010:
  1398   00FA74  6C29               	negf	___awmod@dividend^0,c
  1399   00FA76  1E2A               	comf	(___awmod@dividend+1)^0,f,c
  1400   00FA78  B0D8               	btfsc	status,0,c
  1401   00FA7A  2A2A               	incf	(___awmod@dividend+1)^0,f,c
  1402   00FA7C  0E01               	movlw	1
  1403   00FA7E  6E2E               	movwf	___awmod@sign^0,c
  1404   00FA80                     l1607:
  1405   00FA80  BE2C               	btfsc	(___awmod@divisor+1)^0,7,c
  1406   00FA82  EF47  F07D         	goto	u1020
  1407   00FA86  EF45  F07D         	goto	u1021
  1408   00FA8A                     u1021:
  1409   00FA8A  EF4B  F07D         	goto	l1611
  1410   00FA8E                     u1020:
  1411   00FA8E  6C2B               	negf	___awmod@divisor^0,c
  1412   00FA90  1E2C               	comf	(___awmod@divisor+1)^0,f,c
  1413   00FA92  B0D8               	btfsc	status,0,c
  1414   00FA94  2A2C               	incf	(___awmod@divisor+1)^0,f,c
  1415   00FA96                     l1611:
  1416   00FA96  502B               	movf	___awmod@divisor^0,w,c
  1417   00FA98  102C               	iorwf	(___awmod@divisor+1)^0,w,c
  1418   00FA9A  B4D8               	btfsc	status,2,c
  1419   00FA9C  EF52  F07D         	goto	u1031
  1420   00FAA0  EF54  F07D         	goto	u1030
  1421   00FAA4                     u1031:
  1422   00FAA4  EF78  F07D         	goto	l1627
  1423   00FAA8                     u1030:
  1424   00FAA8  0E01               	movlw	1
  1425   00FAAA  6E2D               	movwf	___awmod@counter^0,c
  1426   00FAAC  EF5C  F07D         	goto	l1617
  1427   00FAB0                     l1615:
  1428   00FAB0  90D8               	bcf	status,0,c
  1429   00FAB2  362B               	rlcf	___awmod@divisor^0,f,c
  1430   00FAB4  362C               	rlcf	(___awmod@divisor+1)^0,f,c
  1431   00FAB6  2A2D               	incf	___awmod@counter^0,f,c
  1432   00FAB8                     l1617:
  1433   00FAB8  AE2C               	btfss	(___awmod@divisor+1)^0,7,c
  1434   00FABA  EF61  F07D         	goto	u1041
  1435   00FABE  EF63  F07D         	goto	u1040
  1436   00FAC2                     u1041:
  1437   00FAC2  EF58  F07D         	goto	l1615
  1438   00FAC6                     u1040:
  1439   00FAC6                     l1619:
  1440   00FAC6  502B               	movf	___awmod@divisor^0,w,c
  1441   00FAC8  5C29               	subwf	___awmod@dividend^0,w,c
  1442   00FACA  502C               	movf	(___awmod@divisor+1)^0,w,c
  1443   00FACC  582A               	subwfb	(___awmod@dividend+1)^0,w,c
  1444   00FACE  A0D8               	btfss	status,0,c
  1445   00FAD0  EF6C  F07D         	goto	u1051
  1446   00FAD4  EF6E  F07D         	goto	u1050
  1447   00FAD8                     u1051:
  1448   00FAD8  EF72  F07D         	goto	l1623
  1449   00FADC                     u1050:
  1450   00FADC  502B               	movf	___awmod@divisor^0,w,c
  1451   00FADE  5E29               	subwf	___awmod@dividend^0,f,c
  1452   00FAE0  502C               	movf	(___awmod@divisor+1)^0,w,c
  1453   00FAE2  5A2A               	subwfb	(___awmod@dividend+1)^0,f,c
  1454   00FAE4                     l1623:
  1455   00FAE4  90D8               	bcf	status,0,c
  1456   00FAE6  322C               	rrcf	(___awmod@divisor+1)^0,f,c
  1457   00FAE8  322B               	rrcf	___awmod@divisor^0,f,c
  1458   00FAEA  2E2D               	decfsz	___awmod@counter^0,f,c
  1459   00FAEC  EF63  F07D         	goto	l1619
  1460   00FAF0                     l1627:
  1461   00FAF0  502E               	movf	___awmod@sign^0,w,c
  1462   00FAF2  B4D8               	btfsc	status,2,c
  1463   00FAF4  EF7E  F07D         	goto	u1061
  1464   00FAF8  EF80  F07D         	goto	u1060
  1465   00FAFC                     u1061:
  1466   00FAFC  EF84  F07D         	goto	l1631
  1467   00FB00                     u1060:
  1468   00FB00  6C29               	negf	___awmod@dividend^0,c
  1469   00FB02  1E2A               	comf	(___awmod@dividend+1)^0,f,c
  1470   00FB04  B0D8               	btfsc	status,0,c
  1471   00FB06  2A2A               	incf	(___awmod@dividend+1)^0,f,c
  1472   00FB08                     l1631:
  1473   00FB08  C029  F029         	movff	___awmod@dividend,?___awmod
  1474   00FB0C  C02A  F02A         	movff	___awmod@dividend+1,?___awmod+1
  1475   00FB10  0012               	return		;funcret
  1476   00FB12                     __end_of___awmod:
  1477                           	callstack 0
  1478                           
  1479 ;; *************** function ___awdiv *****************
  1480 ;; Defined at:
  1481 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;  dividend        2    0[COMRAM] int 
  1484 ;;  divisor         2    2[COMRAM] int 
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;  quotient        2    6[COMRAM] int 
  1487 ;;  sign            1    5[COMRAM] unsigned char 
  1488 ;;  counter         1    4[COMRAM] unsigned char 
  1489 ;; Return value:  Size  Location     Type
  1490 ;;                  2    0[COMRAM] int 
  1491 ;; Registers used:
  1492 ;;		wreg, status,2, status,0
  1493 ;; Tracked objects:
  1494 ;;		On entry : 0/0
  1495 ;;		On exit  : 0/0
  1496 ;;		Unchanged: 0/0
  1497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1498 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1499 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1501 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1502 ;;Total ram usage:        8 bytes
  1503 ;; Hardware stack levels used: 1
  1504 ;; This function calls:
  1505 ;;		Nothing
  1506 ;; This function is called by:
  1507 ;;		_main
  1508 ;; This function uses a non-reentrant model
  1509 ;;
  1510                           
  1511                           	psect	text7
  1512   00FB12                     __ptext7:
  1513                           	callstack 0
  1514   00FB12                     ___awdiv:
  1515                           	callstack 30
  1516   00FB12  0E00               	movlw	0
  1517   00FB14  6E2E               	movwf	___awdiv@sign^0,c
  1518   00FB16  BE2C               	btfsc	(___awdiv@divisor+1)^0,7,c
  1519   00FB18  EF92  F07D         	goto	u950
  1520   00FB1C  EF90  F07D         	goto	u951
  1521   00FB20                     u951:
  1522   00FB20  EF98  F07D         	goto	l1563
  1523   00FB24                     u950:
  1524   00FB24  6C2B               	negf	___awdiv@divisor^0,c
  1525   00FB26  1E2C               	comf	(___awdiv@divisor+1)^0,f,c
  1526   00FB28  B0D8               	btfsc	status,0,c
  1527   00FB2A  2A2C               	incf	(___awdiv@divisor+1)^0,f,c
  1528   00FB2C  0E01               	movlw	1
  1529   00FB2E  6E2E               	movwf	___awdiv@sign^0,c
  1530   00FB30                     l1563:
  1531   00FB30  BE2A               	btfsc	(___awdiv@dividend+1)^0,7,c
  1532   00FB32  EF9F  F07D         	goto	u960
  1533   00FB36  EF9D  F07D         	goto	u961
  1534   00FB3A                     u961:
  1535   00FB3A  EFA5  F07D         	goto	l1569
  1536   00FB3E                     u960:
  1537   00FB3E  6C29               	negf	___awdiv@dividend^0,c
  1538   00FB40  1E2A               	comf	(___awdiv@dividend+1)^0,f,c
  1539   00FB42  B0D8               	btfsc	status,0,c
  1540   00FB44  2A2A               	incf	(___awdiv@dividend+1)^0,f,c
  1541   00FB46  0E01               	movlw	1
  1542   00FB48  1A2E               	xorwf	___awdiv@sign^0,f,c
  1543   00FB4A                     l1569:
  1544   00FB4A  0E00               	movlw	0
  1545   00FB4C  6E30               	movwf	(___awdiv@quotient+1)^0,c
  1546   00FB4E  0E00               	movlw	0
  1547   00FB50  6E2F               	movwf	___awdiv@quotient^0,c
  1548   00FB52  502B               	movf	___awdiv@divisor^0,w,c
  1549   00FB54  102C               	iorwf	(___awdiv@divisor+1)^0,w,c
  1550   00FB56  B4D8               	btfsc	status,2,c
  1551   00FB58  EFB0  F07D         	goto	u971
  1552   00FB5C  EFB2  F07D         	goto	u970
  1553   00FB60                     u971:
  1554   00FB60  EFDA  F07D         	goto	l1591
  1555   00FB64                     u970:
  1556   00FB64  0E01               	movlw	1
  1557   00FB66  6E2D               	movwf	___awdiv@counter^0,c
  1558   00FB68  EFBA  F07D         	goto	l1577
  1559   00FB6C                     l1575:
  1560   00FB6C  90D8               	bcf	status,0,c
  1561   00FB6E  362B               	rlcf	___awdiv@divisor^0,f,c
  1562   00FB70  362C               	rlcf	(___awdiv@divisor+1)^0,f,c
  1563   00FB72  2A2D               	incf	___awdiv@counter^0,f,c
  1564   00FB74                     l1577:
  1565   00FB74  AE2C               	btfss	(___awdiv@divisor+1)^0,7,c
  1566   00FB76  EFBF  F07D         	goto	u981
  1567   00FB7A  EFC1  F07D         	goto	u980
  1568   00FB7E                     u981:
  1569   00FB7E  EFB6  F07D         	goto	l1575
  1570   00FB82                     u980:
  1571   00FB82                     l1579:
  1572   00FB82  90D8               	bcf	status,0,c
  1573   00FB84  362F               	rlcf	___awdiv@quotient^0,f,c
  1574   00FB86  3630               	rlcf	(___awdiv@quotient+1)^0,f,c
  1575   00FB88  502B               	movf	___awdiv@divisor^0,w,c
  1576   00FB8A  5C29               	subwf	___awdiv@dividend^0,w,c
  1577   00FB8C  502C               	movf	(___awdiv@divisor+1)^0,w,c
  1578   00FB8E  582A               	subwfb	(___awdiv@dividend+1)^0,w,c
  1579   00FB90  A0D8               	btfss	status,0,c
  1580   00FB92  EFCD  F07D         	goto	u991
  1581   00FB96  EFCF  F07D         	goto	u990
  1582   00FB9A                     u991:
  1583   00FB9A  EFD4  F07D         	goto	l1587
  1584   00FB9E                     u990:
  1585   00FB9E  502B               	movf	___awdiv@divisor^0,w,c
  1586   00FBA0  5E29               	subwf	___awdiv@dividend^0,f,c
  1587   00FBA2  502C               	movf	(___awdiv@divisor+1)^0,w,c
  1588   00FBA4  5A2A               	subwfb	(___awdiv@dividend+1)^0,f,c
  1589   00FBA6  802F               	bsf	___awdiv@quotient^0,0,c
  1590   00FBA8                     l1587:
  1591   00FBA8  90D8               	bcf	status,0,c
  1592   00FBAA  322C               	rrcf	(___awdiv@divisor+1)^0,f,c
  1593   00FBAC  322B               	rrcf	___awdiv@divisor^0,f,c
  1594   00FBAE  2E2D               	decfsz	___awdiv@counter^0,f,c
  1595   00FBB0  EFC1  F07D         	goto	l1579
  1596   00FBB4                     l1591:
  1597   00FBB4  502E               	movf	___awdiv@sign^0,w,c
  1598   00FBB6  B4D8               	btfsc	status,2,c
  1599   00FBB8  EFE0  F07D         	goto	u1001
  1600   00FBBC  EFE2  F07D         	goto	u1000
  1601   00FBC0                     u1001:
  1602   00FBC0  EFE6  F07D         	goto	l1595
  1603   00FBC4                     u1000:
  1604   00FBC4  6C2F               	negf	___awdiv@quotient^0,c
  1605   00FBC6  1E30               	comf	(___awdiv@quotient+1)^0,f,c
  1606   00FBC8  B0D8               	btfsc	status,0,c
  1607   00FBCA  2A30               	incf	(___awdiv@quotient+1)^0,f,c
  1608   00FBCC                     l1595:
  1609   00FBCC  C02F  F029         	movff	___awdiv@quotient,?___awdiv
  1610   00FBD0  C030  F02A         	movff	___awdiv@quotient+1,?___awdiv+1
  1611   00FBD4  0012               	return		;funcret
  1612   00FBD6                     __end_of___awdiv:
  1613                           	callstack 0
  1614   000000                     
  1615                           	psect	rparam
  1616   000000                     
  1617                           	psect	config
  1618                           
  1619                           ; Padding undefined space
  1620   300000                     	org	3145728
  1621   300000  FF                 	db	255
  1622                           
  1623                           ;Config register CONFIG1H @ 0x300001
  1624                           ;	Oscillator Selection bits
  1625                           ;	OSC = RCIO6, External RC oscillator, port function on RA6
  1626                           ;	Fail-Safe Clock Monitor Enable bit
  1627                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1628                           ;	Internal/External Oscillator Switchover bit
  1629                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1630   300001                     	org	3145729
  1631   300001  07                 	db	7
  1632                           
  1633                           ;Config register CONFIG2L @ 0x300002
  1634                           ;	Power-up Timer Enable bit
  1635                           ;	PWRT = OFF, PWRT disabled
  1636                           ;	Brown-out Reset Enable bits
  1637                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1638                           ;	Brown Out Reset Voltage bits
  1639                           ;	BORV = 3, Minimum setting
  1640   300002                     	org	3145730
  1641   300002  1F                 	db	31
  1642                           
  1643                           ;Config register CONFIG2H @ 0x300003
  1644                           ;	Watchdog Timer Enable bit
  1645                           ;	WDT = ON, WDT enabled
  1646                           ;	Watchdog Timer Postscale Select bits
  1647                           ;	WDTPS = 32768, 1:32768
  1648   300003                     	org	3145731
  1649   300003  1F                 	db	31
  1650                           
  1651                           ; Padding undefined space
  1652   300004                     	org	3145732
  1653   300004  FF                 	db	255
  1654                           
  1655                           ;Config register CONFIG3H @ 0x300005
  1656                           ;	CCP2 MUX bit
  1657                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1658                           ;	PORTB A/D Enable bit
  1659                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  1660                           ;	Low-Power Timer1 Oscillator Enable bit
  1661                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1662                           ;	MCLR Pin Enable bit
  1663                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1664   300005                     	org	3145733
  1665   300005  83                 	db	131
  1666                           
  1667                           ;Config register CONFIG4L @ 0x300006
  1668                           ;	Stack Full/Underflow Reset Enable bit
  1669                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1670                           ;	Single-Supply ICSP Enable bit
  1671                           ;	LVP = ON, Single-Supply ICSP enabled
  1672                           ;	Extended Instruction Set Enable bit
  1673                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1674                           ;	Background Debugger Enable bit
  1675                           ;	DEBUG = 0x1, unprogrammed default
  1676   300006                     	org	3145734
  1677   300006  85                 	db	133
  1678                           
  1679                           ; Padding undefined space
  1680   300007                     	org	3145735
  1681   300007  FF                 	db	255
  1682                           
  1683                           ;Config register CONFIG5L @ 0x300008
  1684                           ;	Code Protection bit
  1685                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1686                           ;	Code Protection bit
  1687                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1688                           ;	Code Protection bit
  1689                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1690                           ;	Code Protection bit
  1691                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1692   300008                     	org	3145736
  1693   300008  0F                 	db	15
  1694                           
  1695                           ;Config register CONFIG5H @ 0x300009
  1696                           ;	Boot Block Code Protection bit
  1697                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1698                           ;	Data EEPROM Code Protection bit
  1699                           ;	CPD = OFF, Data EEPROM not code-protected
  1700   300009                     	org	3145737
  1701   300009  C0                 	db	192
  1702                           
  1703                           ;Config register CONFIG6L @ 0x30000A
  1704                           ;	Write Protection bit
  1705                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1706                           ;	Write Protection bit
  1707                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1708                           ;	Write Protection bit
  1709                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1710                           ;	Write Protection bit
  1711                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1712   30000A                     	org	3145738
  1713   30000A  0F                 	db	15
  1714                           
  1715                           ;Config register CONFIG6H @ 0x30000B
  1716                           ;	Configuration Register Write Protection bit
  1717                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1718                           ;	Boot Block Write Protection bit
  1719                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1720                           ;	Data EEPROM Write Protection bit
  1721                           ;	WRTD = OFF, Data EEPROM not write-protected
  1722   30000B                     	org	3145739
  1723   30000B  E0                 	db	224
  1724                           
  1725                           ;Config register CONFIG7L @ 0x30000C
  1726                           ;	Table Read Protection bit
  1727                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1728                           ;	Table Read Protection bit
  1729                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1730                           ;	Table Read Protection bit
  1731                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1732                           ;	Table Read Protection bit
  1733                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1734   30000C                     	org	3145740
  1735   30000C  0F                 	db	15
  1736                           
  1737                           ;Config register CONFIG7H @ 0x30000D
  1738                           ;	Boot Block Table Read Protection bit
  1739                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1740   30000D                     	org	3145741
  1741   30000D  40                 	db	64
  1742                           tosu	equ	0xFFF
  1743                           tosh	equ	0xFFE
  1744                           tosl	equ	0xFFD
  1745                           stkptr	equ	0xFFC
  1746                           pclatu	equ	0xFFB
  1747                           pclath	equ	0xFFA
  1748                           pcl	equ	0xFF9
  1749                           tblptru	equ	0xFF8
  1750                           tblptrh	equ	0xFF7
  1751                           tblptrl	equ	0xFF6
  1752                           tablat	equ	0xFF5
  1753                           prodh	equ	0xFF4
  1754                           prodl	equ	0xFF3
  1755                           indf0	equ	0xFEF
  1756                           postinc0	equ	0xFEE
  1757                           postdec0	equ	0xFED
  1758                           preinc0	equ	0xFEC
  1759                           plusw0	equ	0xFEB
  1760                           fsr0h	equ	0xFEA
  1761                           fsr0l	equ	0xFE9
  1762                           wreg	equ	0xFE8
  1763                           indf1	equ	0xFE7
  1764                           postinc1	equ	0xFE6
  1765                           postdec1	equ	0xFE5
  1766                           preinc1	equ	0xFE4
  1767                           plusw1	equ	0xFE3
  1768                           fsr1h	equ	0xFE2
  1769                           fsr1l	equ	0xFE1
  1770                           bsr	equ	0xFE0
  1771                           indf2	equ	0xFDF
  1772                           postinc2	equ	0xFDE
  1773                           postdec2	equ	0xFDD
  1774                           preinc2	equ	0xFDC
  1775                           plusw2	equ	0xFDB
  1776                           fsr2h	equ	0xFDA
  1777                           fsr2l	equ	0xFD9
  1778                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        40
    BSS         8
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     17      67
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    seg_7_pins_write@_seg_	PTR struct . size(2) Largest target is 5
		 -> seg_1(COMRAM[5]), 

    seg_7_pins_intialize@_seg_	PTR struct . size(2) Largest target is 5
		 -> seg_1(COMRAM[5]), 

    gpio_pin_intialize@str	PTR const struct . size(2) Largest target is 5
		 -> control_pin_4(COMRAM[1]), control_pin_3(COMRAM[1]), control_pin_2(COMRAM[1]), control_pin_1(COMRAM[1]), 
		 -> seg_1.SEG_PINS(COMRAM[4]), seg_1(COMRAM[5]), relay_initialize@rel_pin(COMRAM[1]), led_intialize@LED_IN(COMRAM[1]), 

    gpio_pin_write_logic@str	PTR const struct . size(2) Largest target is 5
		 -> control_pin_4(COMRAM[1]), control_pin_3(COMRAM[1]), control_pin_2(COMRAM[1]), control_pin_1(COMRAM[1]), 
		 -> seg_1.SEG_PINS(COMRAM[4]), seg_1(COMRAM[5]), relay_off@rel_pin(COMRAM[1]), relay_on@rel_pin(COMRAM[1]), 
		 -> relay_initialize@rel_pin(COMRAM[1]), led_turn_off@LED_IN(COMRAM[1]), led_turn_on@LED_IN(COMRAM[1]), led_intialize@LED_IN(COMRAM[1]), 

    gpio_pin_direction_intialize@str	PTR const struct . size(2) Largest target is 5
		 -> control_pin_4(COMRAM[1]), control_pin_3(COMRAM[1]), control_pin_2(COMRAM[1]), control_pin_1(COMRAM[1]), 
		 -> seg_1.SEG_PINS(COMRAM[4]), seg_1(COMRAM[5]), relay_initialize@rel_pin(COMRAM[1]), led_intialize@LED_IN(COMRAM[1]), 

    PORT_REG	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRl[1]), PORTD(BITBIGSFRl[1]), PORTC(BITBIGSFRl[1]), PORTB(BITBIGSFRl[1]), 
		 -> PORTA(BITBIGSFRl[1]), 

    TRIS_REG	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRhh[1]), TRISD(BITBIGSFRhh[1]), TRISC(BITBIGSFRhh[1]), TRISB(BITBIGSFRhh[1]), 
		 -> TRISA(BITBIGSFRhl[1]), 

    LAT_REG	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRhl[1]), LATD(BITBIGSFRhl[1]), LATC(BITBIGSFRhl[1]), LATB(BITBIGSFRhl[1]), 
		 -> LATA(BITBIGSFRl[1]), 


Critical Paths under _main in COMRAM

    _main->_seg_7_pins_intialize
    _seg_7_pins_write->_gpio_pin_write_logic
    _seg_7_pins_intialize->_gpio_pin_intialize
    _gpio_pin_intialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   19776
                                             16 COMRAM     1     1      0
                            ___awdiv
                            ___awmod
                 _gpio_pin_intialize
               _gpio_pin_write_logic
               _seg_7_pins_intialize
                   _seg_7_pins_write
 ---------------------------------------------------------------------------------
 (1) _seg_7_pins_write                                     4     1      3    4531
                                              9 COMRAM     4     1      3
                            ___awdiv (ARG)
                            ___awmod (ARG)
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _seg_7_pins_intialize                                 3     1      2    5290
                                             13 COMRAM     3     1      2
                 _gpio_pin_intialize
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_intialize                                   4     2      2    5076
                                              9 COMRAM     4     2      2
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                10     7      3    3675
                                              0 COMRAM     9     6      3
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_intialize                         9     7      2     505
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     604
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
   _gpio_pin_intialize
     _gpio_pin_direction_intialize
     _gpio_pin_write_logic
   _gpio_pin_write_logic
   _seg_7_pins_intialize
     _gpio_pin_intialize
   _seg_7_pins_write
     ___awdiv (ARG)
     ___awmod (ARG)
     _gpio_pin_write_logic (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     11      43       1       52.8%
BITBIGSFRhh         69      0       0      36        0.0%
BITBIGSFRhl          4      0       0      37        0.0%
BITBIGSFRl           4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      43      39        0.0%
DATA                 0      0      43       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Sep 03 20:26:28 2023

                        ___awdiv@sign 002E                                   l134 FCF2  
                                 l129 FCF0                                   l153 FE12  
                                 l174 F9CC                                   l280 F964  
                                 l521 FBD4                                   l534 FB10  
                                 l287 FA60                                   u800 FBE8  
                                 u801 FBE4                                   u810 FC06  
                                 u811 FC02                                   u820 FC20  
                                 u900 F978                                   u821 FC1C  
                                 u901 F974                                   u910 F996  
                                 u911 F992                                   u840 FC98  
                                 u920 F916                                   u841 FC94  
                                 u921 F912                                   u834 FC3C  
                                 u930 F9E0                                   u835 FC38  
                                 u931 F9DC                                   u860 FD06  
                                 u940 F9F0                                   u861 FD02  
                                 u941 F9EC                                   u950 FB24  
                                 u854 FCB4                                   u870 FD24  
                                 u951 FB20                                   u855 FCB0  
                                 u871 FD20                                   u960 FB3E  
                                 u961 FB3A                                   u970 FB64  
                                 u971 FB60                                   u980 FB82  
                                 u884 FD44                                   u981 FB7E  
                                 u885 FD40                                   u990 FB9E  
                                 u894 FDA0                                   u991 FB9A  
                                 u895 FD9C                                   _ret 0043  
                        ___awmod@sign 002E                                   prod 0FF3  
               relay_initialize@F3042 003D                                   wreg 0FE8  
                                l1501 FD84                                  l1601 FA66  
                                l1505 FDE6                                  l1521 F996  
                                l1611 FA96                                  l1603 FA74  
                                l1507 FE10                                  l1523 F99E  
                                l1515 F966                                  l1531 F904  
                                l1621 FADC                                  l1613 FAA8  
                                l1605 FA7C                                  l1525 F9CA  
                                l1517 F966                                  l1533 F916  
                                l1541 F9CE                                  l1631 FB08  
                                l1623 FAE4                                  l1615 FAB0  
                                l1607 FA80                                  l1471 FBD6  
                                l1519 F978                                  l1535 F91E  
                                l1551 FA5E                                  l1543 F9CE  
                                l1561 FB2C                                  l1625 FAEA  
                                l1617 FAB8                                  l1609 FA8E  
                                l1481 FC20                                  l1473 FBD6  
                                l1537 F962                                  l1529 F904  
                                l1545 F9E0                                  l1571 FB52  
                                l1563 FB30                                  l1555 FB12  
                                l1619 FAC6                                  l1627 FAF0  
                                l1483 FC82                                  l1475 FBE8  
                                l1491 FCF4                                  l1547 F9F0  
                                l1581 FB88                                  l1573 FB64  
                                l1565 FB3E                                  l1557 FB16  
                                l1629 FB00                                  l1485 FC98  
                                l1477 FC06                                  l1493 FCF4  
                                l1549 F9F8                                  l1583 FB9E  
                                l1575 FB6C                                  l1591 FBB4  
                                l1567 FB46                                  l1559 FB24  
                                l1479 FC0A                                  l1495 FD06  
                                l1593 FBC4                                  l1585 FBA6  
                                l1577 FB74                                  l1569 FB4A  
                                l1497 FD24                                  l1761 FEB4  
                                l1595 FBCC                                  l1587 FBA8  
                                l1579 FB82                                  l1835 FDFA  
                                l1499 FD28                                  l1771 FF40  
                                l1763 FED8                                  l1755 FE5E  
                                l1747 FE14                                  l1589 FBAE  
                                l1781 FFCA                                  l1773 FF96  
                                l1765 FEF8                                  l1757 FE94  
                                l1749 FE5A                                  l1599 FA62  
                                l1783 FFDC                                  l1775 FFA4  
                                l1767 FF0A                                  l1759 FEA2  
                                l1785 FFE0                                  l1777 FFB6  
                                l1769 FF2E                                  l1787 FFE2  
                                l1779 FFC8                                  l1789 FFF4  
                                u1000 FBC4                                  u1001 FBC0  
                                u1010 FA74                                  u1011 FA70  
                                u1020 FA8E                                  u1021 FA8A  
                                u1030 FAA8                                  u1031 FAA4  
                                u1040 FAC6                                  u1041 FAC2  
                                u1050 FADC                                  u1051 FAD8  
                                u1060 FB00                                  u1061 FAFC  
                                u1260 FFC8                                  u1261 FFC4  
                                _LATA 0F89                                  u1270 FFDC  
                                _LATB 0F8A                                  u1271 FFD8  
                                _LATC 0F8B                                  u1280 FFF4  
                                _LATD 0F8C                                  u1281 FFF0  
                                u1337 FE9A                                  _LATE 0F8D  
                                u1347 FEF0                                  u1357 FF46  
                                u1367 FF9C                                  _main FE14  
                                _mins 003A                                  _secs 001F  
                                fsr2h 0FDA                                  indf2 0FDF  
                                fsr1l 0FE1                                  fsr2l 0FD9  
                                prodl 0FF3                                  start 0000  
                        ___param_bank 0000                  _gpio_pin_write_logic FCF4  
                               ?_main 0029                       __end_of___awdiv FBD6  
                     __end_of___awmod FB12                       ___awdiv@divisor 002B  
                     ___awdiv@counter 002D                                 _PORTA 0F80  
                               _PORTB 0F81                                 _PORTC 0F82  
                               _PORTD 0F83                                 _PORTE 0F84  
                               _TRISA 0F92                                 _TRISB 0F93  
                               _TRISC 0F94                                 _TRISD 0F95  
                               _TRISE 0F96                                 _seg_1 0020  
                       _control_pin_1 0028                         _control_pin_2 0027  
                       _control_pin_3 0026                         _control_pin_4 0025  
                               tablat 0FF5                                 status 0FD8  
                     __initialization F8CE                          __end_of_main 0000  
               ?_gpio_pin_write_logic 0029                                ??_main 0039  
                       __activetblptr 0002                      led_turn_on@F3053 0040  
                    ___awdiv@dividend 0029          __end_of_seg_7_pins_intialize F966  
                           ??___awdiv 002D                             ??___awmod 002D  
                              clear_0 F8F4                      ___awdiv@quotient 002F  
                     ___awmod@divisor 002B                                isa$std 0001  
                     ___awmod@counter 002D                          __pdataCOMRAM 0001  
                              tblptrh 0FF7                                tblptrl 0FF6  
                              tblptru 0FF8                            __accesstop 0080  
             __end_of__initialization F8FA                         ___rparam_used 0001  
              ??_gpio_pin_write_logic 002C                        __pcstackCOMRAM 0029  
                    _seg_7_pins_write F9CE             seg_7_pins_intialize@_seg_ 0036  
                          __pnvCOMRAM 0042                     led_turn_off@F3058 003F  
                     led_toggle@F3063 003E                               _LAT_REG 0015  
                _seg_7_pins_intialize F904                               __Hparam 0000  
                             __Lparam 0000                               ___awdiv FB12  
                             ___awmod FA62            __end_of_gpio_pin_intialize F9CE  
                             __pcinit F8CE                               __ramtop 1000  
                       relay_on@F3047 003C                               __ptext0 FE14  
                             __ptext1 F9CE                               __ptext2 F904  
                             __ptext3 F966                               __ptext4 FCF4  
                             __ptext5 FBD6                               __ptext6 FA62  
                             __ptext7 FB12               seg_7_pins_intialize@ret 0038  
                             _counter 0042                      ___awmod@dividend 0029  
               ?_seg_7_pins_intialize 0036                  end_of_initialization F8FA  
                       __Lmediumconst 0000                 gpio_pin_intialize@ret 0035  
               gpio_pin_intialize@str 0032                               postdec1 0FE5  
                             postdec2 0FDD                               postinc0 0FEE  
                             postinc2 0FDE  __end_of_gpio_pin_direction_intialize FCF4  
        _gpio_pin_direction_intialize FBD6              __end_of_seg_7_pins_write FA62  
                       __pidataCOMRAM F8A6                ??_seg_7_pins_intialize 0038  
                 start_initialization F8CE         ?_gpio_pin_direction_intialize 0029  
                         __pbssCOMRAM 003A       gpio_pin_direction_intialize@str 0029  
              seg_7_pins_write@number 0034                              ?___awdiv 0029  
                            ?___awmod 0029                    _gpio_pin_intialize F966  
                 seg_7_pins_write@ret 0035        ??_gpio_pin_direction_intialize 002B  
                 ?_gpio_pin_intialize 0032                              _PORT_REG 0001  
                            _TRIS_REG 000B                  ??_gpio_pin_intialize 0034  
             gpio_pin_write_logic@LOG 002B               gpio_pin_write_logic@str 0029  
                           copy_data0 F8E2                     ?_seg_7_pins_write 0032  
                  ??_seg_7_pins_write 0035                              __Hrparam 0000  
                            __Lrparam 0000                    led_intialize@F3048 0041  
               seg_7_pins_write@_seg_ 0032                        relay_off@F3052 003B  
                            isa$xinst 0000          __end_of_gpio_pin_write_logic FE14  
