

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sat Sep 09 17:02:56 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    51   000000                     
    52                           ; Generated 23/03/2023 GMT
    53                           ; 
    54                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution. Publication is not required when
    68                           ;        this file is used in an embedded application.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F4620 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86   000000                     
    87                           	psect	idataCOMRAM
    88   002836                     __pidataCOMRAM:
    89                           	callstack 0
    90                           
    91                           ;initializer for _num
    92   002836  FA                 	db	250
    93                           
    94                           	psect	idataBANK0
    95   0027DC                     __pidataBANK0:
    96                           	callstack 0
    97                           
    98                           ;initializer for _PORT_REG
    99   0027DC  80                 	db	128
   100   0027DD  0F                 	db	15
   101   0027DE  81                 	db	129
   102   0027DF  0F                 	db	15
   103   0027E0  82                 	db	130
   104   0027E1  0F                 	db	15
   105   0027E2  83                 	db	131
   106   0027E3  0F                 	db	15
   107   0027E4  84                 	db	132
   108   0027E5  0F                 	db	15
   109                           
   110                           ;initializer for _TRIS_REG
   111   0027E6  92                 	db	146
   112   0027E7  0F                 	db	15
   113   0027E8  93                 	db	147
   114   0027E9  0F                 	db	15
   115   0027EA  94                 	db	148
   116   0027EB  0F                 	db	15
   117   0027EC  95                 	db	149
   118   0027ED  0F                 	db	15
   119   0027EE  96                 	db	150
   120   0027EF  0F                 	db	15
   121                           
   122                           ;initializer for _LAT_REG
   123   0027F0  89                 	db	137
   124   0027F1  0F                 	db	15
   125   0027F2  8A                 	db	138
   126   0027F3  0F                 	db	15
   127   0027F4  8B                 	db	139
   128   0027F5  0F                 	db	15
   129   0027F6  8C                 	db	140
   130   0027F7  0F                 	db	15
   131   0027F8  8D                 	db	141
   132   0027F9  0F                 	db	15
   133                           
   134                           ;initializer for _keypad_1
   135   0027FA  10                 	db	16
   136   0027FB  11                 	db	17
   137   0027FC  12                 	db	18
   138   0027FD  13                 	db	19
   139   0027FE  54                 	db	84
   140   0027FF  55                 	db	85
   141   002800  56                 	db	86
   142   002801  57                 	db	87
   143                           
   144                           ;initializer for _lcd_1
   145   002802  1C                 	db	28
   146   002803  1D                 	db	29
   147   002804  1E                 	db	30
   148   002805  1F                 	db	31
   149   002806  18                 	db	24
   150   002807  19                 	db	25
   151                           
   152                           	psect	smallconst
   153   001000                     __psmallconst:
   154                           	callstack 0
   155   001000  00                 	db	0
   156   001001                     _btn_values:
   157                           	callstack 0
   158   001001  37                 	db	55
   159   001002  38                 	db	56
   160   001003  39                 	db	57
   161   001004  2F                 	db	47
   162   001005  34                 	db	52
   163   001006  35                 	db	53
   164   001007  36                 	db	54
   165   001008  2A                 	db	42
   166   001009  31                 	db	49
   167   00100A  32                 	db	50
   168   00100B  33                 	db	51
   169   00100C  2D                 	db	45
   170   00100D  23                 	db	35
   171   00100E  30                 	db	48
   172   00100F  3D                 	db	61
   173   001010  2B                 	db	43
   174   001011                     __end_of_btn_values:
   175                           	callstack 0
   176   000000                     _PORTE	set	3972
   177   000000                     _PORTD	set	3971
   178   000000                     _PORTC	set	3970
   179   000000                     _PORTB	set	3969
   180   000000                     _PORTA	set	3968
   181   000000                     _LATA	set	3977
   182   000000                     _TRISA	set	3986
   183   000000                     _LATE	set	3981
   184   000000                     _LATD	set	3980
   185   000000                     _LATC	set	3979
   186   000000                     _LATB	set	3978
   187   000000                     _TRISE	set	3990
   188   000000                     _TRISD	set	3989
   189   000000                     _TRISC	set	3988
   190   000000                     _TRISB	set	3987
   191   001011                     STR_1:
   192   001011  65                 	db	101	;'e'
   193   001012  72                 	db	114	;'r'
   194   001013  72                 	db	114	;'r'
   195   001014  6F                 	db	111	;'o'
   196   001015  72                 	db	114	;'r'
   197   001016  00                 	db	0
   198   001017                     STR_4:
   199   001017  25                 	db	37
   200   001018  64                 	db	100	;'d'
   201   001019  00                 	db	0
   202   00101A                     STR_5:
   203   00101A  25                 	db	37
   204   00101B  69                 	db	105	;'i'
   205   00101C  00                 	db	0
   206   00101D  00                 	db	0	; dummy byte at the end
   207   000000                     
   208                           ; #config settings
   209                           
   210                           	psect	cinit
   211   002598                     __pcinit:
   212                           	callstack 0
   213   002598                     start_initialization:
   214                           	callstack 0
   215   002598                     __initialization:
   216                           	callstack 0
   217                           
   218                           ; Initialize objects allocated to BANK0 (44 bytes)
   219                           ; load TBLPTR registers with __pidataBANK0
   220   002598  0EDC               	movlw	low __pidataBANK0
   221   00259A  6EF6               	movwf	tblptrl,c
   222   00259C  0E27               	movlw	high __pidataBANK0
   223   00259E  6EF7               	movwf	tblptrh,c
   224   0025A0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   225   0025A2  6EF8               	movwf	tblptru,c
   226   0025A4  EE00  F080         	lfsr	0,__pdataBANK0
   227   0025A8  EE10 F02C          	lfsr	1,44
   228   0025AC                     copy_data0:
   229   0025AC  0009               	tblrd		*+
   230   0025AE  CFF5 FFEE          	movff	tablat,postinc0
   231   0025B2  50E5               	movf	postdec1,w,c
   232   0025B4  50E1               	movf	fsr1l,w,c
   233   0025B6  E1FA               	bnz	copy_data0
   234                           
   235                           ; Initialize objects allocated to COMRAM (1 bytes)
   236                           ; load TBLPTR registers with __pidataCOMRAM
   237   0025B8  0E36               	movlw	low __pidataCOMRAM
   238   0025BA  6EF6               	movwf	tblptrl,c
   239   0025BC  0E28               	movlw	high __pidataCOMRAM
   240   0025BE  6EF7               	movwf	tblptrh,c
   241   0025C0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   242   0025C2  6EF8               	movwf	tblptru,c
   243   0025C4  0009               	tblrd		*+	;fetch initializer
   244   0025C6  CFF5 F07A          	movff	tablat,__pdataCOMRAM
   245                           
   246                           ; Clear objects allocated to BANK0 (32 bytes)
   247   0025CA  EE00  F0AC         	lfsr	0,__pbssBANK0
   248   0025CE  0E20               	movlw	32
   249   0025D0                     clear_0:
   250   0025D0  6AEE               	clrf	postinc0,c
   251   0025D2  06E8               	decf	wreg,f,c
   252   0025D4  E1FD               	bnz	clear_0
   253                           
   254                           ; Clear objects allocated to COMRAM (29 bytes)
   255   0025D6  EE00  F05D         	lfsr	0,__pbssCOMRAM
   256   0025DA  0E1D               	movlw	29
   257   0025DC                     clear_1:
   258   0025DC  6AEE               	clrf	postinc0,c
   259   0025DE  06E8               	decf	wreg,f,c
   260   0025E0  E1FD               	bnz	clear_1
   261   0025E2                     end_of_initialization:
   262                           	callstack 0
   263   0025E2                     __end_of__initialization:
   264                           	callstack 0
   265   0025E2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   266   0025E4  6EF8               	movwf	tblptru,c
   267   0025E6  0100               	movlb	0
   268   0025E8  EF02  F00E         	goto	_main	;jump to C main() function
   269                           
   270                           	psect	bssCOMRAM
   271   00005D                     __pbssCOMRAM:
   272                           	callstack 0
   273   00005D                     _width:
   274                           	callstack 0
   275   00005D                     	ds	2
   276   00005F                     _prec:
   277                           	callstack 0
   278   00005F                     	ds	2
   279   000061                     _flags:
   280                           	callstack 0
   281   000061                     	ds	1
   282   000062                     _ret:
   283                           	callstack 0
   284   000062                     	ds	1
   285   000063                     relay_off@F3052:
   286                           	callstack 0
   287   000063                     	ds	1
   288   000064                     relay_on@F3047:
   289                           	callstack 0
   290   000064                     	ds	1
   291   000065                     relay_initialize@F3042:
   292                           	callstack 0
   293   000065                     	ds	1
   294   000066                     led_toggle@F3063:
   295                           	callstack 0
   296   000066                     	ds	1
   297   000067                     led_turn_off@F3058:
   298                           	callstack 0
   299   000067                     	ds	1
   300   000068                     led_turn_on@F3053:
   301                           	callstack 0
   302   000068                     	ds	1
   303   000069                     led_intialize@F3048:
   304                           	callstack 0
   305   000069                     	ds	1
   306   00006A                     _result_1:
   307                           	callstack 0
   308   00006A                     	ds	4
   309   00006E                     _str__2:
   310                           	callstack 0
   311   00006E                     	ds	4
   312   000072                     _str__1:
   313                           	callstack 0
   314   000072                     	ds	4
   315   000076                     _result:
   316                           	callstack 0
   317   000076                     	ds	1
   318   000077                     _value_2:
   319                           	callstack 0
   320   000077                     	ds	1
   321   000078                     _value_1:
   322                           	callstack 0
   323   000078                     	ds	1
   324   000079                     _operation_l:
   325                           	callstack 0
   326   000079                     	ds	1
   327                           
   328                           	psect	dataCOMRAM
   329   00007A                     __pdataCOMRAM:
   330                           	callstack 0
   331   00007A                     _num:
   332                           	callstack 0
   333   00007A                     	ds	1
   334                           
   335                           	psect	bssBANK0
   336   0000AC                     __pbssBANK0:
   337                           	callstack 0
   338   0000AC                     _dbuf:
   339                           	callstack 0
   340   0000AC                     	ds	32
   341                           
   342                           	psect	dataBANK0
   343   000080                     __pdataBANK0:
   344                           	callstack 0
   345   000080                     _PORT_REG:
   346                           	callstack 0
   347   000080                     	ds	10
   348   00008A                     _TRIS_REG:
   349                           	callstack 0
   350   00008A                     	ds	10
   351   000094                     _LAT_REG:
   352                           	callstack 0
   353   000094                     	ds	10
   354   00009E                     _keypad_1:
   355                           	callstack 0
   356   00009E                     	ds	8
   357   0000A6                     _lcd_1:
   358                           	callstack 0
   359   0000A6                     	ds	6
   360                           
   361                           	psect	cstackCOMRAM
   362   000001                     __pcstackCOMRAM:
   363                           	callstack 0
   364   000001                     ?___awdiv:
   365                           	callstack 0
   366   000001                     ?___awmod:
   367                           	callstack 0
   368   000001                     gpio_pin_direction_intialize@str:
   369                           	callstack 0
   370   000001                     gpio_pin_write_logic@str:
   371                           	callstack 0
   372   000001                     gpio_pin_read_logic@str:
   373                           	callstack 0
   374   000001                     convert_string_to_numbers@str:
   375                           	callstack 0
   376   000001                     detect_operation@operation_2:
   377                           	callstack 0
   378   000001                     ___awdiv@dividend:
   379                           	callstack 0
   380   000001                     ___awmod@dividend:
   381                           	callstack 0
   382   000001                     memset@dest:
   383                           	callstack 0
   384   000001                     fputc@c:
   385                           	callstack 0
   386                           
   387                           ; 2 bytes @ 0x0
   388   000001                     	ds	2
   389   000003                     ??_gpio_pin_direction_intialize:
   390   000003                     gpio_pin_write_logic@LOG:
   391                           	callstack 0
   392   000003                     detect_operation@value__1:
   393                           	callstack 0
   394   000003                     gpio_pin_read_logic@LOG:
   395                           	callstack 0
   396   000003                     convert_string_to_numbers@value:
   397                           	callstack 0
   398   000003                     ___awdiv@divisor:
   399                           	callstack 0
   400   000003                     ___awmod@divisor:
   401                           	callstack 0
   402   000003                     memset@c:
   403                           	callstack 0
   404   000003                     fputc@fp:
   405                           	callstack 0
   406                           
   407                           ; 2 bytes @ 0x2
   408   000003                     	ds	1
   409   000004                     ??_gpio_pin_write_logic:
   410   000004                     detect_operation@value__2:
   411                           	callstack 0
   412                           
   413                           ; 1 bytes @ 0x3
   414   000004                     	ds	1
   415   000005                     ??_gpio_pin_read_logic:
   416   000005                     ??_fputc:
   417   000005                     convert_string_to_numbers@ret:
   418                           	callstack 0
   419   000005                     ___awdiv@counter:
   420                           	callstack 0
   421   000005                     ___awmod@counter:
   422                           	callstack 0
   423   000005                     detect_operation@result__:
   424                           	callstack 0
   425   000005                     memset@n:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0x4
   429   000005                     	ds	1
   430   000006                     convert_string_to_numbers@temp_1:
   431                           	callstack 0
   432   000006                     ___awdiv@sign:
   433                           	callstack 0
   434   000006                     ___awmod@sign:
   435                           	callstack 0
   436                           
   437                           ; 1 bytes @ 0x5
   438   000006                     	ds	1
   439   000007                     ??_memset:
   440   000007                     ??_detect_operation:
   441   000007                     ?_abs:
   442                           	callstack 0
   443   000007                     convert_string_to_numbers@temp_2:
   444                           	callstack 0
   445   000007                     ___awdiv@quotient:
   446                           	callstack 0
   447   000007                     abs@a:
   448                           	callstack 0
   449                           
   450                           ; 2 bytes @ 0x6
   451   000007                     	ds	1
   452   000008                     convert_string_to_numbers@temp_3:
   453                           	callstack 0
   454                           
   455                           ; 1 bytes @ 0x7
   456   000008                     	ds	1
   457   000009                     ??_abs:
   458   000009                     convert_string_to_numbers@counter:
   459                           	callstack 0
   460   000009                     memset@k:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0x8
   464   000009                     	ds	1
   465   00000A                     turnoff_all_rows@key_pad:
   466                           	callstack 0
   467   00000A                     gpio_pin_intialize@str:
   468                           	callstack 0
   469   00000A                     enable_pin_4bits@lcd:
   470                           	callstack 0
   471   00000A                     send_4bits@lcd:
   472                           	callstack 0
   473   00000A                     fputs@s:
   474                           	callstack 0
   475                           
   476                           ; 2 bytes @ 0x9
   477   00000A                     	ds	1
   478   00000B                     memset@s:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0xA
   482   00000B                     	ds	1
   483   00000C                     ??_gpio_pin_intialize:
   484   00000C                     ??_enable_pin_4bits:
   485   00000C                     turnoff_all_rows@ret:
   486                           	callstack 0
   487   00000C                     send_4bits@command:
   488                           	callstack 0
   489   00000C                     fputs@fp:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0xB
   493   00000C                     	ds	1
   494   00000D                     turnoff_all_rows@rows_counter:
   495                           	callstack 0
   496   00000D                     gpio_pin_intialize@ret:
   497                           	callstack 0
   498   00000D                     enable_pin_4bits@ret:
   499                           	callstack 0
   500   00000D                     send_4bits@counter:
   501                           	callstack 0
   502                           
   503                           ; 1 bytes @ 0xC
   504   00000D                     	ds	1
   505   00000E                     send_4bits@ret:
   506                           	callstack 0
   507   00000E                     fputs@c:
   508                           	callstack 0
   509   00000E                     keypad_initialize@key_pad:
   510                           	callstack 0
   511   00000E                     keypad_read_value@key_pad:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0xD
   515   00000E                     	ds	1
   516   00000F                     lcd_4bits_send_command@lcd:
   517                           	callstack 0
   518   00000F                     lcd_4bits_send_char@lcd:
   519                           	callstack 0
   520   00000F                     fputs@i:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0xE
   524   00000F                     	ds	1
   525   000010                     ??_keypad_initialize:
   526   000010                     keypad_read_value@value:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0xF
   530   000010                     	ds	1
   531   000011                     lcd_4bits_send_command@command:
   532                           	callstack 0
   533   000011                     lcd_4bits_send_char@data:
   534                           	callstack 0
   535   000011                     pad@fp:
   536                           	callstack 0
   537                           
   538                           ; 2 bytes @ 0x10
   539   000011                     	ds	1
   540   000012                     ??_keypad_read_value:
   541   000012                     keypad_initialize@ret:
   542                           	callstack 0
   543   000012                     lcd_4bits_send_command@ret:
   544                           	callstack 0
   545   000012                     lcd_4bits_send_char@ret:
   546                           	callstack 0
   547                           
   548                           ; 1 bytes @ 0x11
   549   000012                     	ds	1
   550   000013                     keypad_initialize@rows_counter:
   551                           	callstack 0
   552   000013                     lcd_4bits_initialze@lcd:
   553                           	callstack 0
   554   000013                     lcd_4bits_send_string@lcd:
   555                           	callstack 0
   556   000013                     lcd_4bits_set_cursor@lcd:
   557                           	callstack 0
   558   000013                     pad@buf:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0x12
   562   000013                     	ds	1
   563   000014                     keypad_initialize@columns_counter:
   564                           	callstack 0
   565   000014                     keypad_read_value@ret:
   566                           	callstack 0
   567                           
   568                           ; 1 bytes @ 0x13
   569   000014                     	ds	1
   570   000015                     ??_lcd_4bits_initialze:
   571   000015                     keypad_read_value@temp_value:
   572                           	callstack 0
   573   000015                     lcd_4bits_set_cursor@ROW:
   574                           	callstack 0
   575   000015                     lcd_4bits_send_string@data:
   576                           	callstack 0
   577   000015                     pad@p:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x14
   581   000015                     	ds	1
   582   000016                     keypad_read_value@rows_counter:
   583                           	callstack 0
   584   000016                     lcd_4bits_initialze@counter:
   585                           	callstack 0
   586   000016                     lcd_4bits_set_cursor@COLUMN:
   587                           	callstack 0
   588                           
   589                           ; 1 bytes @ 0x15
   590   000016                     	ds	1
   591   000017                     ??_lcd_4bits_set_cursor:
   592   000017                     ??_pad:
   593   000017                     keypad_read_value@columns_counter:
   594                           	callstack 0
   595   000017                     lcd_4bits_initialze@ret:
   596                           	callstack 0
   597   000017                     lcd_4bits_send_string@ret:
   598                           	callstack 0
   599                           
   600                           ; 1 bytes @ 0x16
   601   000017                     	ds	1
   602   000018                     pad@i:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0x17
   606   000018                     	ds	1
   607   000019                     lcd_4bits_send_string_pos@lcd:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0x18
   611   000019                     	ds	1
   612   00001A                     pad@w:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0x19
   616   00001A                     	ds	1
   617   00001B                     lcd_4bits_send_string_pos@data:
   618                           	callstack 0
   619                           
   620                           ; 2 bytes @ 0x1A
   621   00001B                     	ds	1
   622   00001C                     dtoa@fp:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0x1B
   626   00001C                     	ds	1
   627   00001D                     lcd_4bits_send_string_pos@ROW:
   628                           	callstack 0
   629                           
   630                           ; 1 bytes @ 0x1C
   631   00001D                     	ds	1
   632   00001E                     lcd_4bits_send_string_pos@COLUMN:
   633                           	callstack 0
   634   00001E                     dtoa@d:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0x1D
   638   00001E                     	ds	1
   639   00001F                     lcd_4bits_send_string_pos@ret:
   640                           	callstack 0
   641                           
   642                           ; 1 bytes @ 0x1E
   643   00001F                     	ds	1
   644   000020                     num_2_read@lcd:
   645                           	callstack 0
   646   000020                     _dtoa$1438:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0x1F
   650   000020                     	ds	2
   651   000022                     num_2_read@keypad:
   652                           	callstack 0
   653   000022                     dtoa@p:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x21
   657   000022                     	ds	2
   658   000024                     num_2_read@str:
   659                           	callstack 0
   660   000024                     dtoa@w:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x23
   664   000024                     	ds	2
   665   000026                     num_2_read@counter_2:
   666                           	callstack 0
   667   000026                     dtoa@i:
   668                           	callstack 0
   669                           
   670                           ; 2 bytes @ 0x25
   671   000026                     	ds	1
   672   000027                     num_2_read@counter_1:
   673                           	callstack 0
   674                           
   675                           ; 1 bytes @ 0x26
   676   000027                     	ds	1
   677   000028                     num_2_read@counter_3:
   678                           	callstack 0
   679   000028                     dtoa@s:
   680                           	callstack 0
   681                           
   682                           ; 1 bytes @ 0x27
   683   000028                     	ds	1
   684   000029                     num_2_read@ret:
   685                           	callstack 0
   686   000029                     vfpfcnvrt@fp:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0x28
   690   000029                     	ds	1
   691   00002A                     num_2_read@temp_value:
   692                           	callstack 0
   693                           
   694                           ; 1 bytes @ 0x29
   695   00002A                     	ds	1
   696   00002B                     num_1_read@lcd:
   697                           	callstack 0
   698   00002B                     vfpfcnvrt@fmt:
   699                           	callstack 0
   700                           
   701                           ; 2 bytes @ 0x2A
   702   00002B                     	ds	2
   703   00002D                     num_1_read@keypad:
   704                           	callstack 0
   705   00002D                     vfpfcnvrt@ap:
   706                           	callstack 0
   707                           
   708                           ; 2 bytes @ 0x2C
   709   00002D                     	ds	2
   710   00002F                     ??_vfpfcnvrt:
   711   00002F                     num_1_read@str:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0x2E
   715   00002F                     	ds	2
   716   000031                     num_1_read@operation:
   717                           	callstack 0
   718   000031                     vfpfcnvrt@convarg:
   719                           	callstack 0
   720                           
   721                           ; 4 bytes @ 0x30
   722   000031                     	ds	2
   723   000033                     num_1_read@str_2:
   724                           	callstack 0
   725                           
   726                           ; 2 bytes @ 0x32
   727   000033                     	ds	2
   728   000035                     ??_num_1_read:
   729   000035                     vfpfcnvrt@cp:
   730                           	callstack 0
   731                           
   732                           ; 2 bytes @ 0x34
   733   000035                     	ds	2
   734   000037                     ?_vfprintf:
   735                           	callstack 0
   736   000037                     num_1_read@counter_2:
   737                           	callstack 0
   738   000037                     vfprintf@fp:
   739                           	callstack 0
   740                           
   741                           ; 2 bytes @ 0x36
   742   000037                     	ds	1
   743   000038                     num_1_read@counter_1:
   744                           	callstack 0
   745                           
   746                           ; 1 bytes @ 0x37
   747   000038                     	ds	1
   748   000039                     num_1_read@counter_3:
   749                           	callstack 0
   750   000039                     vfprintf@fmt:
   751                           	callstack 0
   752                           
   753                           ; 2 bytes @ 0x38
   754   000039                     	ds	1
   755   00003A                     num_1_read@ret:
   756                           	callstack 0
   757                           
   758                           ; 1 bytes @ 0x39
   759   00003A                     	ds	1
   760   00003B                     num_1_read@temp_value:
   761                           	callstack 0
   762   00003B                     vfprintf@ap:
   763                           	callstack 0
   764                           
   765                           ; 2 bytes @ 0x3A
   766   00003B                     	ds	2
   767   00003D                     vfprintf@cfmt:
   768                           	callstack 0
   769                           
   770                           ; 2 bytes @ 0x3C
   771   00003D                     	ds	2
   772   00003F                     ?_sprintf:
   773                           	callstack 0
   774   00003F                     sprintf@s:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0x3E
   778   00003F                     	ds	2
   779   000041                     sprintf@fmt:
   780                           	callstack 0
   781                           
   782                           ; 2 bytes @ 0x40
   783   000041                     	ds	6
   784   000047                     sprintf@ap:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0x46
   788   000047                     	ds	2
   789   000049                     sprintf@f:
   790                           	callstack 0
   791                           
   792                           ; 12 bytes @ 0x48
   793   000049                     	ds	12
   794   000055                     number_8bit_to_string@str:
   795                           	callstack 0
   796                           
   797                           ; 2 bytes @ 0x54
   798   000055                     	ds	2
   799   000057                     number_8bit_to_string@value:
   800                           	callstack 0
   801                           
   802                           ; 1 bytes @ 0x56
   803   000057                     	ds	1
   804   000058                     print_result@lcd:
   805                           	callstack 0
   806                           
   807                           ; 2 bytes @ 0x57
   808   000058                     	ds	2
   809   00005A                     print_result@result_1_:
   810                           	callstack 0
   811                           
   812                           ; 2 bytes @ 0x59
   813   00005A                     	ds	2
   814   00005C                     print_result@num:
   815                           	callstack 0
   816                           
   817                           ; 1 bytes @ 0x5B
   818   00005C                     	ds	1
   819   00005D                     
   820                           ; 1 bytes @ 0x5C
   821 ;;
   822 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   823 ;;
   824 ;; *************** function _main *****************
   825 ;; Defined at:
   826 ;;		line 18 in file "Application.c"
   827 ;; Parameters:    Size  Location     Type
   828 ;;		None
   829 ;; Auto vars:     Size  Location     Type
   830 ;;		None
   831 ;; Return value:  Size  Location     Type
   832 ;;                  2  342[None  ] int 
   833 ;; Registers used:
   834 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   835 ;; Tracked objects:
   836 ;;		On entry : 0/0
   837 ;;		On exit  : 0/0
   838 ;;		Unchanged: 0/0
   839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   844 ;;Total ram usage:        0 bytes
   845 ;; Hardware stack levels required when called: 10
   846 ;; This function calls:
   847 ;;		_convert_string_to_numbers
   848 ;;		_detect_operation
   849 ;;		_keypad_initialize
   850 ;;		_lcd_4bits_initialze
   851 ;;		_memset
   852 ;;		_num_1_read
   853 ;;		_print_result
   854 ;; This function is called by:
   855 ;;		Startup code after reset
   856 ;; This function uses a non-reentrant model
   857 ;;
   858                           
   859                           	psect	text0
   860   001C04                     __ptext0:
   861                           	callstack 0
   862   001C04                     _main:
   863                           	callstack 21
   864   001C04                     
   865                           ;Application.c: 19:     memset((char *)str__1, '\0', 4);
   866   001C04  0E72               	movlw	low _str__1
   867   001C06  6E01               	movwf	memset@dest^0,c
   868   001C08  0E00               	movlw	high _str__1
   869   001C0A  6E02               	movwf	(memset@dest+1)^0,c
   870   001C0C  0E00               	movlw	0
   871   001C0E  6E04               	movwf	(memset@c+1)^0,c
   872   001C10  0E00               	movlw	0
   873   001C12  6E03               	movwf	memset@c^0,c
   874   001C14  0E00               	movlw	0
   875   001C16  6E06               	movwf	(memset@n+1)^0,c
   876   001C18  0E04               	movlw	4
   877   001C1A  6E05               	movwf	memset@n^0,c
   878   001C1C  ECD0  F009         	call	_memset	;wreg free
   879                           
   880                           ;Application.c: 20:     memset((char *)str__2, '\0', 4);
   881   001C20  0E6E               	movlw	low _str__2
   882   001C22  6E01               	movwf	memset@dest^0,c
   883   001C24  0E00               	movlw	high _str__2
   884   001C26  6E02               	movwf	(memset@dest+1)^0,c
   885   001C28  0E00               	movlw	0
   886   001C2A  6E04               	movwf	(memset@c+1)^0,c
   887   001C2C  0E00               	movlw	0
   888   001C2E  6E03               	movwf	memset@c^0,c
   889   001C30  0E00               	movlw	0
   890   001C32  6E06               	movwf	(memset@n+1)^0,c
   891   001C34  0E04               	movlw	4
   892   001C36  6E05               	movwf	memset@n^0,c
   893   001C38  ECD0  F009         	call	_memset	;wreg free
   894   001C3C                     
   895                           ;Application.c: 21:     ret = lcd_4bits_initialze(&lcd_1);
   896   001C3C  0EA6               	movlw	low _lcd_1
   897   001C3E  6E13               	movwf	lcd_4bits_initialze@lcd^0,c
   898   001C40  0E00               	movlw	high _lcd_1
   899   001C42  6E14               	movwf	(lcd_4bits_initialze@lcd+1)^0,c
   900   001C44  EC53  F00C         	call	_lcd_4bits_initialze	;wreg free
   901   001C48  6E62               	movwf	_ret^0,c
   902   001C4A                     
   903                           ;Application.c: 22:     ret = keypad_initialize(&keypad_1);
   904   001C4A  0E9E               	movlw	low _keypad_1
   905   001C4C  6E0E               	movwf	keypad_initialize@key_pad^0,c
   906   001C4E  0E00               	movlw	high _keypad_1
   907   001C50  6E0F               	movwf	(keypad_initialize@key_pad+1)^0,c
   908   001C52  EC3D  F011         	call	_keypad_initialize	;wreg free
   909   001C56  6E62               	movwf	_ret^0,c
   910   001C58                     
   911                           ;Application.c: 23:     ret = num_1_read(&lcd_1 , &keypad_1 , str__1 , &operation_l , st
      +                          r__2);
   912   001C58  0EA6               	movlw	low _lcd_1
   913   001C5A  6E2B               	movwf	num_1_read@lcd^0,c
   914   001C5C  0E00               	movlw	high _lcd_1
   915   001C5E  6E2C               	movwf	(num_1_read@lcd+1)^0,c
   916   001C60  0E9E               	movlw	low _keypad_1
   917   001C62  6E2D               	movwf	num_1_read@keypad^0,c
   918   001C64  0E00               	movlw	high _keypad_1
   919   001C66  6E2E               	movwf	(num_1_read@keypad+1)^0,c
   920   001C68  0E72               	movlw	low _str__1
   921   001C6A  6E2F               	movwf	num_1_read@str^0,c
   922   001C6C  0E00               	movlw	high _str__1
   923   001C6E  6E30               	movwf	(num_1_read@str+1)^0,c
   924   001C70  0E79               	movlw	low _operation_l
   925   001C72  6E31               	movwf	num_1_read@operation^0,c
   926   001C74  0E00               	movlw	high _operation_l
   927   001C76  6E32               	movwf	(num_1_read@operation+1)^0,c
   928   001C78  0E6E               	movlw	low _str__2
   929   001C7A  6E33               	movwf	num_1_read@str_2^0,c
   930   001C7C  0E00               	movlw	high _str__2
   931   001C7E  6E34               	movwf	(num_1_read@str_2+1)^0,c
   932   001C80  EC0F  F008         	call	_num_1_read	;wreg free
   933   001C84  6E62               	movwf	_ret^0,c
   934   001C86                     
   935                           ;Application.c: 24:     ret = convert_string_to_numbers(str__1 , &value_1);
   936   001C86  0E72               	movlw	low _str__1
   937   001C88  6E01               	movwf	convert_string_to_numbers@str^0,c
   938   001C8A  0E00               	movlw	high _str__1
   939   001C8C  6E02               	movwf	(convert_string_to_numbers@str+1)^0,c
   940   001C8E  0E78               	movlw	low _value_1
   941   001C90  6E03               	movwf	convert_string_to_numbers@value^0,c
   942   001C92  0E00               	movlw	high _value_1
   943   001C94  6E04               	movwf	(convert_string_to_numbers@value+1)^0,c
   944   001C96  EC8B  F00A         	call	_convert_string_to_numbers	;wreg free
   945   001C9A  6E62               	movwf	_ret^0,c
   946   001C9C                     
   947                           ;Application.c: 25:     ret = convert_string_to_numbers(str__2 , &value_2);
   948   001C9C  0E6E               	movlw	low _str__2
   949   001C9E  6E01               	movwf	convert_string_to_numbers@str^0,c
   950   001CA0  0E00               	movlw	high _str__2
   951   001CA2  6E02               	movwf	(convert_string_to_numbers@str+1)^0,c
   952   001CA4  0E77               	movlw	low _value_2
   953   001CA6  6E03               	movwf	convert_string_to_numbers@value^0,c
   954   001CA8  0E00               	movlw	high _value_2
   955   001CAA  6E04               	movwf	(convert_string_to_numbers@value+1)^0,c
   956   001CAC  EC8B  F00A         	call	_convert_string_to_numbers	;wreg free
   957   001CB0  6E62               	movwf	_ret^0,c
   958   001CB2                     
   959                           ;Application.c: 26:     ret = detect_operation(&operation_l , value_1 , value_2 , &resul
      +                          t);
   960   001CB2  0E79               	movlw	low _operation_l
   961   001CB4  6E01               	movwf	detect_operation@operation_2^0,c
   962   001CB6  0E00               	movlw	high _operation_l
   963   001CB8  6E02               	movwf	(detect_operation@operation_2+1)^0,c
   964   001CBA  C078  F003         	movff	_value_1,detect_operation@value__1
   965   001CBE  C077  F004         	movff	_value_2,detect_operation@value__2
   966   001CC2  0E76               	movlw	low _result
   967   001CC4  6E05               	movwf	detect_operation@result__^0,c
   968   001CC6  0E00               	movlw	high _result
   969   001CC8  6E06               	movwf	(detect_operation@result__+1)^0,c
   970   001CCA  ECBA  F011         	call	_detect_operation	;wreg free
   971   001CCE  6E62               	movwf	_ret^0,c
   972   001CD0                     
   973                           ;Application.c: 27:     num = result;
   974   001CD0  C076  F07A         	movff	_result,_num
   975   001CD4                     
   976                           ;Application.c: 28:     ret = print_result(&lcd_1 , result_1 , num);
   977   001CD4  0EA6               	movlw	low _lcd_1
   978   001CD6  6E58               	movwf	print_result@lcd^0,c
   979   001CD8  0E00               	movlw	high _lcd_1
   980   001CDA  6E59               	movwf	(print_result@lcd+1)^0,c
   981   001CDC  0E6A               	movlw	low _result_1
   982   001CDE  6E5A               	movwf	print_result@result_1_^0,c
   983   001CE0  0E00               	movlw	high _result_1
   984   001CE2  6E5B               	movwf	(print_result@result_1_+1)^0,c
   985   001CE4  C07A  F05C         	movff	_num,print_result@num
   986   001CE8  EC04  F014         	call	_print_result	;wreg free
   987   001CEC  6E62               	movwf	_ret^0,c
   988   001CEE                     l343:
   989   001CEE  EF77  F00E         	goto	l343
   990   001CF2  EF00  F000         	goto	start
   991   001CF6                     __end_of_main:
   992                           	callstack 0
   993                           
   994 ;; *************** function _print_result *****************
   995 ;; Defined at:
   996 ;;		line 198 in file "Application.c"
   997 ;; Parameters:    Size  Location     Type
   998 ;;  lcd             2   87[COMRAM] PTR struct .
   999 ;;		 -> lcd_1(6), 
  1000 ;;  result_1_       2   89[COMRAM] PTR unsigned char 
  1001 ;;		 -> result_1(4), 
  1002 ;;  num             1   91[COMRAM] unsigned char 
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;  ret             1    0        unsigned char 
  1005 ;; Return value:  Size  Location     Type
  1006 ;;                  1    wreg      unsigned char 
  1007 ;; Registers used:
  1008 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1009 ;; Tracked objects:
  1010 ;;		On entry : 0/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1014 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1017 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1018 ;;Total ram usage:        5 bytes
  1019 ;; Hardware stack levels used: 1
  1020 ;; Hardware stack levels required when called: 9
  1021 ;; This function calls:
  1022 ;;		_lcd_4bits_send_string_pos
  1023 ;;		_number_8bit_to_string
  1024 ;; This function is called by:
  1025 ;;		_main
  1026 ;; This function uses a non-reentrant model
  1027 ;;
  1028                           
  1029                           	psect	text1
  1030   002808                     __ptext1:
  1031                           	callstack 0
  1032   002808                     _print_result:
  1033                           	callstack 21
  1034   002808  C05A  F055         	movff	print_result@result_1_,number_8bit_to_string@str
  1035   00280C  C05B  F056         	movff	print_result@result_1_+1,number_8bit_to_string@str+1
  1036   002810  505C               	movf	print_result@num^0,w,c
  1037   002812  ECD0  F013         	call	_number_8bit_to_string
  1038   002816  C058  F019         	movff	print_result@lcd,lcd_4bits_send_string_pos@lcd
  1039   00281A  C059  F01A         	movff	print_result@lcd+1,lcd_4bits_send_string_pos@lcd+1
  1040   00281E  C05A  F01B         	movff	print_result@result_1_,lcd_4bits_send_string_pos@data
  1041   002822  C05B  F01C         	movff	print_result@result_1_+1,lcd_4bits_send_string_pos@data+1
  1042   002826  0E03               	movlw	3
  1043   002828  6E1D               	movwf	lcd_4bits_send_string_pos@ROW^0,c
  1044   00282A  0E03               	movlw	3
  1045   00282C  6E1E               	movwf	lcd_4bits_send_string_pos@COLUMN^0,c
  1046   00282E  EC6A  F013         	call	_lcd_4bits_send_string_pos	;wreg free
  1047   002832  0012               	return		;funcret
  1048   002834                     __end_of_print_result:
  1049                           	callstack 0
  1050                           
  1051 ;; *************** function _number_8bit_to_string *****************
  1052 ;; Defined at:
  1053 ;;		line 359 in file "ECU_Layer/LCD/Lcd.c"
  1054 ;; Parameters:    Size  Location     Type
  1055 ;;  value           1    wreg     unsigned char 
  1056 ;;  str             2   84[COMRAM] PTR unsigned char 
  1057 ;;		 -> result_1(4), 
  1058 ;; Auto vars:     Size  Location     Type
  1059 ;;  value           1   86[COMRAM] unsigned char 
  1060 ;;  ret             1    0        unsigned char 
  1061 ;; Return value:  Size  Location     Type
  1062 ;;                  1    wreg      unsigned char 
  1063 ;; Registers used:
  1064 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1065 ;; Tracked objects:
  1066 ;;		On entry : 0/0
  1067 ;;		On exit  : 0/0
  1068 ;;		Unchanged: 0/0
  1069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1070 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1071 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1073 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1074 ;;Total ram usage:        3 bytes
  1075 ;; Hardware stack levels used: 1
  1076 ;; Hardware stack levels required when called: 8
  1077 ;; This function calls:
  1078 ;;		_memset
  1079 ;;		_sprintf
  1080 ;; This function is called by:
  1081 ;;		_print_result
  1082 ;; This function uses a non-reentrant model
  1083 ;;
  1084                           
  1085                           	psect	text2
  1086   0027A0                     __ptext2:
  1087                           	callstack 0
  1088   0027A0                     _number_8bit_to_string:
  1089                           	callstack 21
  1090                           
  1091                           ;incstack = 0
  1092                           ;number_8bit_to_string@value stored from wreg
  1093   0027A0  6E57               	movwf	number_8bit_to_string@value^0,c
  1094   0027A2                     
  1095                           ;ECU_Layer/LCD/Lcd.c: 362:     memset(( unsigned char *)str, '\0', 4);
  1096   0027A2  C055  F001         	movff	number_8bit_to_string@str,memset@dest
  1097   0027A6  C056  F002         	movff	number_8bit_to_string@str+1,memset@dest+1
  1098   0027AA  0E00               	movlw	0
  1099   0027AC  6E04               	movwf	(memset@c+1)^0,c
  1100   0027AE  0E00               	movlw	0
  1101   0027B0  6E03               	movwf	memset@c^0,c
  1102   0027B2  0E00               	movlw	0
  1103   0027B4  6E06               	movwf	(memset@n+1)^0,c
  1104   0027B6  0E04               	movlw	4
  1105   0027B8  6E05               	movwf	memset@n^0,c
  1106   0027BA  ECD0  F009         	call	_memset	;wreg free
  1107   0027BE                     
  1108                           ;ECU_Layer/LCD/Lcd.c: 363:     sprintf(str, "%d", value);
  1109   0027BE  C055  F03F         	movff	number_8bit_to_string@str,sprintf@s
  1110   0027C2  C056  F040         	movff	number_8bit_to_string@str+1,sprintf@s+1
  1111   0027C6  0E17               	movlw	low STR_4
  1112   0027C8  6E41               	movwf	sprintf@fmt^0,c
  1113   0027CA  0E10               	movlw	high STR_4
  1114   0027CC  6E42               	movwf	(sprintf@fmt+1)^0,c
  1115   0027CE  C057  F043         	movff	number_8bit_to_string@value,?_sprintf+4
  1116   0027D2  6A44               	clrf	(?_sprintf+5)^0,c
  1117   0027D4  EC44  F013         	call	_sprintf	;wreg free
  1118   0027D8                     
  1119                           ;ECU_Layer/LCD/Lcd.c: 364:     return ret;
  1120   0027D8  0E01               	movlw	1
  1121   0027DA  0012               	return		;funcret
  1122   0027DC                     __end_of_number_8bit_to_string:
  1123                           	callstack 0
  1124                           
  1125 ;; *************** function _sprintf *****************
  1126 ;; Defined at:
  1127 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  1128 ;; Parameters:    Size  Location     Type
  1129 ;;  s               2   62[COMRAM] PTR unsigned char 
  1130 ;;		 -> result_1(4), 
  1131 ;;  fmt             2   64[COMRAM] PTR const unsigned char 
  1132 ;;		 -> STR_6(3), STR_5(3), STR_4(3), 
  1133 ;; Auto vars:     Size  Location     Type
  1134 ;;  f              12   72[COMRAM] struct _IO_FILE
  1135 ;;  ap              2   70[COMRAM] PTR void [1]
  1136 ;;		 -> ?_sprintf(2), 
  1137 ;;  ret             2    0        int 
  1138 ;; Return value:  Size  Location     Type
  1139 ;;                  2   62[COMRAM] int 
  1140 ;; Registers used:
  1141 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1142 ;; Tracked objects:
  1143 ;;		On entry : 0/0
  1144 ;;		On exit  : 0/0
  1145 ;;		Unchanged: 0/0
  1146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1147 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1148 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1150 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1151 ;;Total ram usage:       22 bytes
  1152 ;; Hardware stack levels used: 1
  1153 ;; Hardware stack levels required when called: 7
  1154 ;; This function calls:
  1155 ;;		_vfprintf
  1156 ;; This function is called by:
  1157 ;;		_number_8bit_to_string
  1158 ;;		_number_16bit_to_string
  1159 ;;		_number_32bit_to_string
  1160 ;; This function uses a non-reentrant model
  1161 ;;
  1162                           
  1163                           	psect	text3
  1164   002688                     __ptext3:
  1165                           	callstack 0
  1166   002688                     _sprintf:
  1167                           	callstack 21
  1168   002688  0E43               	movlw	low (?_sprintf+4)
  1169   00268A  6E47               	movwf	sprintf@ap^0,c
  1170   00268C  0E00               	movlw	high (?_sprintf+4)
  1171   00268E  6E48               	movwf	(sprintf@ap+1)^0,c
  1172   002690  C03F  F049         	movff	sprintf@s,sprintf@f
  1173   002694  C040  F04A         	movff	sprintf@s+1,sprintf@f+1
  1174   002698  0E00               	movlw	0
  1175   00269A  6E4D               	movwf	(sprintf@f+4)^0,c
  1176   00269C  0E00               	movlw	0
  1177   00269E  6E4C               	movwf	(sprintf@f+3)^0,c
  1178   0026A0  0E00               	movlw	0
  1179   0026A2  6E54               	movwf	(sprintf@f+11)^0,c
  1180   0026A4  0E00               	movlw	0
  1181   0026A6  6E53               	movwf	(sprintf@f+10)^0,c
  1182   0026A8  0E49               	movlw	low sprintf@f
  1183   0026AA  6E37               	movwf	vfprintf@fp^0,c
  1184   0026AC  0E00               	movlw	high sprintf@f
  1185   0026AE  6E38               	movwf	(vfprintf@fp+1)^0,c
  1186   0026B0  C041  F039         	movff	sprintf@fmt,vfprintf@fmt
  1187   0026B4  C042  F03A         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1188   0026B8  0E47               	movlw	low sprintf@ap
  1189   0026BA  6E3B               	movwf	vfprintf@ap^0,c
  1190   0026BC  0E00               	movlw	high sprintf@ap
  1191   0026BE  6E3C               	movwf	(vfprintf@ap+1)^0,c
  1192   0026C0  ECF6  F012         	call	_vfprintf	;wreg free
  1193   0026C4  504C               	movf	(sprintf@f+3)^0,w,c
  1194   0026C6  243F               	addwf	sprintf@s^0,w,c
  1195   0026C8  6ED9               	movwf	fsr2l,c
  1196   0026CA  504D               	movf	(sprintf@f+4)^0,w,c
  1197   0026CC  2040               	addwfc	(sprintf@s+1)^0,w,c
  1198   0026CE  6EDA               	movwf	fsr2h,c
  1199   0026D0  6ADF               	clrf	indf2,c
  1200   0026D2  0012               	return		;funcret
  1201   0026D4                     __end_of_sprintf:
  1202                           	callstack 0
  1203                           
  1204 ;; *************** function _vfprintf *****************
  1205 ;; Defined at:
  1206 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1207 ;; Parameters:    Size  Location     Type
  1208 ;;  fp              2   54[COMRAM] PTR struct _IO_FILE
  1209 ;;		 -> sprintf@f(12), 
  1210 ;;  fmt             2   56[COMRAM] PTR const unsigned char 
  1211 ;;		 -> STR_6(3), STR_5(3), STR_4(3), 
  1212 ;;  ap              2   58[COMRAM] PTR PTR void 
  1213 ;;		 -> sprintf@ap(2), 
  1214 ;; Auto vars:     Size  Location     Type
  1215 ;;  cfmt            2   60[COMRAM] PTR unsigned char 
  1216 ;;		 -> STR_6(3), STR_5(3), STR_4(3), 
  1217 ;; Return value:  Size  Location     Type
  1218 ;;                  2   54[COMRAM] int 
  1219 ;; Registers used:
  1220 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1226 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1227 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1229 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1230 ;;Total ram usage:        8 bytes
  1231 ;; Hardware stack levels used: 1
  1232 ;; Hardware stack levels required when called: 6
  1233 ;; This function calls:
  1234 ;;		_vfpfcnvrt
  1235 ;; This function is called by:
  1236 ;;		_sprintf
  1237 ;; This function uses a non-reentrant model
  1238 ;;
  1239                           
  1240                           	psect	text4
  1241   0025EC                     __ptext4:
  1242                           	callstack 0
  1243   0025EC                     _vfprintf:
  1244                           	callstack 21
  1245   0025EC                     
  1246                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  1247   0025EC  C039  F03D         	movff	vfprintf@fmt,vfprintf@cfmt
  1248   0025F0  C03A  F03E         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1249                           
  1250                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1251   0025F4  EF0A  F013         	goto	l3085
  1252   0025F8                     l3083:
  1253                           
  1254                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1255   0025F8  C037  F029         	movff	vfprintf@fp,vfpfcnvrt@fp
  1256   0025FC  C038  F02A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1257   002600  0E3D               	movlw	low vfprintf@cfmt
  1258   002602  6E2B               	movwf	vfpfcnvrt@fmt^0,c
  1259   002604  0E00               	movlw	high vfprintf@cfmt
  1260   002606  6E2C               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1261   002608  C03B  F02D         	movff	vfprintf@ap,vfpfcnvrt@ap
  1262   00260C  C03C  F02E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1263   002610  ECC2  F00B         	call	_vfpfcnvrt	;wreg free
  1264   002614                     l3085:
  1265                           
  1266                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1267   002614  C03D  FFF6         	movff	vfprintf@cfmt,tblptrl
  1268   002618  C03E  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1269   00261C                     	if	0	;tblptru may be non-zero
  1270   00261C                     	endif
  1271   00261C                     	if	0	;tblptru may be non-zero
  1272   00261C                     	endif
  1273   00261C  0008               	tblrd		*
  1274   00261E  50F5               	movf	tablat,w,c
  1275   002620  0900               	iorlw	0
  1276   002622  A4D8               	btfss	status,2,c
  1277   002624  EF16  F013         	goto	u2171
  1278   002628  EF18  F013         	goto	u2170
  1279   00262C                     u2171:
  1280   00262C  EFFC  F012         	goto	l3083
  1281   002630                     u2170:
  1282   002630                     
  1283                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  1284   002630  0E00               	movlw	0
  1285   002632  6E38               	movwf	(?_vfprintf+1)^0,c
  1286   002634  0E00               	movlw	0
  1287   002636  6E37               	movwf	?_vfprintf^0,c
  1288   002638  0012               	return		;funcret
  1289   00263A                     __end_of_vfprintf:
  1290                           	callstack 0
  1291                           
  1292 ;; *************** function _vfpfcnvrt *****************
  1293 ;; Defined at:
  1294 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1295 ;; Parameters:    Size  Location     Type
  1296 ;;  fp              2   40[COMRAM] PTR struct _IO_FILE
  1297 ;;		 -> sprintf@f(12), 
  1298 ;;  fmt             2   42[COMRAM] PTR PTR unsigned char 
  1299 ;;		 -> vfprintf@cfmt(2), 
  1300 ;;  ap              2   44[COMRAM] PTR PTR void 
  1301 ;;		 -> sprintf@ap(2), 
  1302 ;; Auto vars:     Size  Location     Type
  1303 ;;  convarg         4   48[COMRAM] struct .
  1304 ;;  cp              2   52[COMRAM] PTR unsigned char 
  1305 ;;		 -> STR_6(3), STR_5(3), STR_4(3), 
  1306 ;;  i               2    0        int 
  1307 ;;  done            2    0        int 
  1308 ;;  c               1    0        unsigned char 
  1309 ;; Return value:  Size  Location     Type
  1310 ;;                  1    wreg      void 
  1311 ;; Registers used:
  1312 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1313 ;; Tracked objects:
  1314 ;;		On entry : 0/0
  1315 ;;		On exit  : 0/0
  1316 ;;		Unchanged: 0/0
  1317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1318 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1319 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1320 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1321 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1322 ;;Total ram usage:       14 bytes
  1323 ;; Hardware stack levels used: 1
  1324 ;; Hardware stack levels required when called: 5
  1325 ;; This function calls:
  1326 ;;		_dtoa
  1327 ;;		_fputc
  1328 ;; This function is called by:
  1329 ;;		_vfprintf
  1330 ;; This function uses a non-reentrant model
  1331 ;;
  1332                           
  1333                           	psect	text5
  1334   001784                     __ptext5:
  1335                           	callstack 0
  1336   001784                     _vfpfcnvrt:
  1337                           	callstack 21
  1338   001784                     
  1339                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  1340   001784  C02B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1341   001788  C02C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1342   00178C  CFDE FFF6          	movff	postinc2,tblptrl
  1343   001790  CFDD FFF7          	movff	postdec2,tblptrh
  1344   001794                     	if	0	;tblptru may be non-zero
  1345   001794                     	endif
  1346   001794                     	if	0	;tblptru may be non-zero
  1347   001794                     	endif
  1348   001794  0008               	tblrd		*
  1349   001796  50F5               	movf	tablat,w,c
  1350   001798  0A25               	xorlw	37
  1351   00179A  A4D8               	btfss	status,2,c
  1352   00179C  EFD2  F00B         	goto	u2041
  1353   0017A0  EFD4  F00B         	goto	u2040
  1354   0017A4                     u2041:
  1355   0017A4  EF3E  F00C         	goto	l2999
  1356   0017A8                     u2040:
  1357   0017A8                     
  1358                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  1359   0017A8  C02B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1360   0017AC  C02C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1361   0017B0  2ADE               	incf	postinc2,f,c
  1362   0017B2  0E00               	movlw	0
  1363   0017B4  22DD               	addwfc	postdec2,f,c
  1364   0017B6                     
  1365                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  1366   0017B6  0E00               	movlw	0
  1367   0017B8  6E5E               	movwf	(_width+1)^0,c
  1368   0017BA  0E00               	movlw	0
  1369   0017BC  6E5D               	movwf	_width^0,c
  1370   0017BE  C05D  F061         	movff	_width,_flags
  1371   0017C2                     
  1372                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  1373   0017C2  685F               	setf	_prec^0,c
  1374   0017C4  6860               	setf	(_prec+1)^0,c
  1375   0017C6                     
  1376                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  1377   0017C6  C02B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1378   0017CA  C02C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1379   0017CE  CFDE F035          	movff	postinc2,vfpfcnvrt@cp
  1380   0017D2  CFDD F036          	movff	postdec2,vfpfcnvrt@cp+1
  1381   0017D6                     
  1382                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1383   0017D6  C035  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1384   0017DA  C036  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1385   0017DE                     	if	0	;tblptru may be non-zero
  1386   0017DE                     	endif
  1387   0017DE                     	if	0	;tblptru may be non-zero
  1388   0017DE                     	endif
  1389   0017DE  0008               	tblrd		*
  1390   0017E0  50F5               	movf	tablat,w,c
  1391   0017E2  0A64               	xorlw	100
  1392   0017E4  B4D8               	btfsc	status,2,c
  1393   0017E6  EFF7  F00B         	goto	u2051
  1394   0017EA  EFF9  F00B         	goto	u2050
  1395   0017EE                     u2051:
  1396   0017EE  EF07  F00C         	goto	l2989
  1397   0017F2                     u2050:
  1398   0017F2  C035  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1399   0017F6  C036  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1400   0017FA                     	if	0	;tblptru may be non-zero
  1401   0017FA                     	endif
  1402   0017FA                     	if	0	;tblptru may be non-zero
  1403   0017FA                     	endif
  1404   0017FA  0008               	tblrd		*
  1405   0017FC  50F5               	movf	tablat,w,c
  1406   0017FE  0A69               	xorlw	105
  1407   001800  A4D8               	btfss	status,2,c
  1408   001802  EF05  F00C         	goto	u2061
  1409   001806  EF07  F00C         	goto	u2060
  1410   00180A                     u2061:
  1411   00180A  EF35  F00C         	goto	l2995
  1412   00180E                     u2060:
  1413   00180E                     l2989:
  1414                           
  1415                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1416   00180E  C02D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1417   001812  C02E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1418   001816  CFDF F02F          	movff	indf2,??_vfpfcnvrt
  1419   00181A  0E02               	movlw	2
  1420   00181C  26DE               	addwf	postinc2,f,c
  1421   00181E  CFDF F030          	movff	indf2,??_vfpfcnvrt+1
  1422   001822  0E00               	movlw	0
  1423   001824  22DD               	addwfc	postdec2,f,c
  1424   001826  C02F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1425   00182A  C030  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1426   00182E  CFDE F031          	movff	postinc2,vfpfcnvrt@convarg
  1427   001832  CFDD F032          	movff	postdec2,vfpfcnvrt@convarg+1
  1428                           
  1429                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  1430   001836  0E01               	movlw	1
  1431   001838  2435               	addwf	vfpfcnvrt@cp^0,w,c
  1432   00183A  6E2F               	movwf	??_vfpfcnvrt^0,c
  1433   00183C  0E00               	movlw	0
  1434   00183E  2036               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1435   001840  6E30               	movwf	(??_vfpfcnvrt+1)^0,c
  1436   001842  C02B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1437   001846  C02C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1438   00184A  C02F  FFDE         	movff	??_vfpfcnvrt,postinc2
  1439   00184E  C030  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1440   001852                     
  1441                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  1442   001852  C029  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1443   001856  C02A  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1444   00185A  C031  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  1445   00185E  C032  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1446   001862  EC06  F009         	call	_dtoa	;wreg free
  1447   001866  EF52  F00C         	goto	l1313
  1448   00186A                     l2995:
  1449                           
  1450                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  1451   00186A  C02B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1452   00186E  C02C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1453   001872  2ADE               	incf	postinc2,f,c
  1454   001874  0E00               	movlw	0
  1455   001876  22DD               	addwfc	postdec2,f,c
  1456   001878  EF52  F00C         	goto	l1313
  1457   00187C                     l2999:
  1458                           
  1459                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  1460   00187C  C02B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1461   001880  C02C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1462   001884  CFDE FFF6          	movff	postinc2,tblptrl
  1463   001888  CFDD FFF7          	movff	postdec2,tblptrh
  1464   00188C                     	if	0	;tblptru may be non-zero
  1465   00188C                     	endif
  1466   00188C                     	if	0	;tblptru may be non-zero
  1467   00188C                     	endif
  1468   00188C  0008               	tblrd		*
  1469   00188E  50F5               	movf	tablat,w,c
  1470   001890  6E01               	movwf	fputc@c^0,c
  1471   001892  6A02               	clrf	(fputc@c+1)^0,c
  1472   001894  C029  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1473   001898  C02A  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1474   00189C  ECF2  F00E         	call	_fputc	;wreg free
  1475   0018A0  EF35  F00C         	goto	l2995
  1476   0018A4                     l1313:
  1477   0018A4  0012               	return		;funcret
  1478   0018A6                     __end_of_vfpfcnvrt:
  1479                           	callstack 0
  1480                           
  1481 ;; *************** function _dtoa *****************
  1482 ;; Defined at:
  1483 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1484 ;; Parameters:    Size  Location     Type
  1485 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1486 ;;		 -> sprintf@f(12), 
  1487 ;;  d               2   29[COMRAM] int 
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;  i               2   37[COMRAM] int 
  1490 ;;  w               2   35[COMRAM] int 
  1491 ;;  p               2   33[COMRAM] int 
  1492 ;;  s               1   39[COMRAM] unsigned char 
  1493 ;; Return value:  Size  Location     Type
  1494 ;;                  1    wreg      void 
  1495 ;; Registers used:
  1496 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1502 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1503 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1505 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1506 ;;Total ram usage:       13 bytes
  1507 ;; Hardware stack levels used: 1
  1508 ;; Hardware stack levels required when called: 4
  1509 ;; This function calls:
  1510 ;;		___awdiv
  1511 ;;		___awmod
  1512 ;;		_abs
  1513 ;;		_pad
  1514 ;; This function is called by:
  1515 ;;		_vfpfcnvrt
  1516 ;; This function uses a non-reentrant model
  1517 ;;
  1518                           
  1519                           	psect	text6
  1520   00120C                     __ptext6:
  1521                           	callstack 0
  1522   00120C                     _dtoa:
  1523                           	callstack 21
  1524   00120C                     
  1525                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  1526   00120C  BE1F               	btfsc	(dtoa@d+1)^0,7,c
  1527   00120E  EF0B  F009         	goto	u1921
  1528   001212  EF0E  F009         	goto	u1920
  1529   001216                     u1921:
  1530   001216  0E01               	movlw	1
  1531   001218  EF0F  F009         	goto	u1930
  1532   00121C                     u1920:
  1533   00121C  0E00               	movlw	0
  1534   00121E                     u1930:
  1535   00121E  6E28               	movwf	dtoa@s^0,c
  1536   001220                     
  1537                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  1538   001220  5028               	movf	dtoa@s^0,w,c
  1539   001222  B4D8               	btfsc	status,2,c
  1540   001224  EF16  F009         	goto	u1941
  1541   001228  EF18  F009         	goto	u1940
  1542   00122C                     u1941:
  1543   00122C  EF1C  F009         	goto	l2907
  1544   001230                     u1940:
  1545   001230                     
  1546                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  1547   001230  6C1E               	negf	dtoa@d^0,c
  1548   001232  1E1F               	comf	(dtoa@d+1)^0,f,c
  1549   001234  B0D8               	btfsc	status,0,c
  1550   001236  2A1F               	incf	(dtoa@d+1)^0,f,c
  1551   001238                     l2907:
  1552                           
  1553                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  1554   001238  BE60               	btfsc	(_prec+1)^0,7,c
  1555   00123A  EF23  F009         	goto	u1950
  1556   00123E  EF21  F009         	goto	u1951
  1557   001242                     u1951:
  1558   001242  EF29  F009         	goto	l1292
  1559   001246                     u1950:
  1560   001246  0E00               	movlw	0
  1561   001248  6E23               	movwf	(dtoa@p+1)^0,c
  1562   00124A  0E01               	movlw	1
  1563   00124C  6E22               	movwf	dtoa@p^0,c
  1564   00124E  EF2D  F009         	goto	l1294
  1565   001252                     l1292:
  1566   001252  C05F  F022         	movff	_prec,dtoa@p
  1567   001256  C060  F023         	movff	_prec+1,dtoa@p+1
  1568   00125A                     l1294:
  1569                           
  1570                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  1571   00125A  C05D  F024         	movff	_width,dtoa@w
  1572   00125E  C05E  F025         	movff	_width+1,dtoa@w+1
  1573   001262                     
  1574                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  1575   001262  5028               	movf	dtoa@s^0,w,c
  1576   001264  B4D8               	btfsc	status,2,c
  1577   001266  EF37  F009         	goto	u1961
  1578   00126A  EF39  F009         	goto	u1960
  1579   00126E                     u1961:
  1580   00126E  EF50  F009         	goto	l1295
  1581   001272                     u1960:
  1582   001272                     
  1583                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  1584   001272  0624               	decf	dtoa@w^0,f,c
  1585   001274  A0D8               	btfss	status,0,c
  1586   001276  0625               	decf	(dtoa@w+1)^0,f,c
  1587   001278                     
  1588                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  1589   001278  5028               	movf	dtoa@s^0,w,c
  1590   00127A  A4D8               	btfss	status,2,c
  1591   00127C  EF42  F009         	goto	u1971
  1592   001280  EF44  F009         	goto	u1970
  1593   001284                     u1971:
  1594   001284  EF4A  F009         	goto	l2919
  1595   001288                     u1970:
  1596   001288  0E00               	movlw	0
  1597   00128A  6E21               	movwf	(_dtoa$1438+1)^0,c
  1598   00128C  0E2B               	movlw	43
  1599   00128E  6E20               	movwf	_dtoa$1438^0,c
  1600   001290  EF4E  F009         	goto	l2921
  1601   001294                     l2919:
  1602   001294  0E00               	movlw	0
  1603   001296  6E21               	movwf	(_dtoa$1438+1)^0,c
  1604   001298  0E2D               	movlw	45
  1605   00129A  6E20               	movwf	_dtoa$1438^0,c
  1606   00129C                     l2921:
  1607   00129C  C020  F028         	movff	_dtoa$1438,dtoa@s
  1608   0012A0                     l1295:
  1609                           
  1610                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  1611   0012A0  0E00               	movlw	0
  1612   0012A2  6E27               	movwf	(dtoa@i+1)^0,c
  1613   0012A4  0E1F               	movlw	31
  1614   0012A6  6E26               	movwf	dtoa@i^0,c
  1615   0012A8                     
  1616                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  1617   0012A8  0E00               	movlw	0
  1618   0012AA  0100               	movlb	0	; () banked
  1619   0012AC  6FCB               	movwf	(_dbuf+31)& (0+255),b
  1620                           
  1621                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  1622   0012AE  EF89  F009         	goto	l2935
  1623   0012B2                     l2925:
  1624                           
  1625                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  1626   0012B2  0626               	decf	dtoa@i^0,f,c
  1627   0012B4  A0D8               	btfss	status,0,c
  1628   0012B6  0627               	decf	(dtoa@i+1)^0,f,c
  1629   0012B8                     
  1630                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  1631   0012B8  0EAC               	movlw	low _dbuf
  1632   0012BA  2426               	addwf	dtoa@i^0,w,c
  1633   0012BC  6ED9               	movwf	fsr2l,c
  1634   0012BE  0E00               	movlw	high _dbuf
  1635   0012C0  2027               	addwfc	(dtoa@i+1)^0,w,c
  1636   0012C2  6EDA               	movwf	fsr2h,c
  1637   0012C4  C01E  F001         	movff	dtoa@d,___awmod@dividend
  1638   0012C8  C01F  F002         	movff	dtoa@d+1,___awmod@dividend+1
  1639   0012CC  0E00               	movlw	0
  1640   0012CE  6E04               	movwf	(___awmod@divisor+1)^0,c
  1641   0012D0  0E0A               	movlw	10
  1642   0012D2  6E03               	movwf	___awmod@divisor^0,c
  1643   0012D4  ECB9  F00F         	call	___awmod	;wreg free
  1644   0012D8  C001  F007         	movff	?___awmod,abs@a
  1645   0012DC  C002  F008         	movff	?___awmod+1,abs@a+1
  1646   0012E0  ECB0  F013         	call	_abs	;wreg free
  1647   0012E4  5007               	movf	?_abs^0,w,c
  1648   0012E6  0F30               	addlw	48
  1649   0012E8  6EDF               	movwf	indf2,c
  1650   0012EA                     
  1651                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  1652   0012EA  0622               	decf	dtoa@p^0,f,c
  1653   0012EC  A0D8               	btfss	status,0,c
  1654   0012EE  0623               	decf	(dtoa@p+1)^0,f,c
  1655   0012F0                     
  1656                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  1657   0012F0  0624               	decf	dtoa@w^0,f,c
  1658   0012F2  A0D8               	btfss	status,0,c
  1659   0012F4  0625               	decf	(dtoa@w+1)^0,f,c
  1660   0012F6                     
  1661                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  1662   0012F6  C01E  F001         	movff	dtoa@d,___awdiv@dividend
  1663   0012FA  C01F  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  1664   0012FE  0E00               	movlw	0
  1665   001300  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1666   001302  0E0A               	movlw	10
  1667   001304  6E03               	movwf	___awdiv@divisor^0,c
  1668   001306  EC57  F00F         	call	___awdiv	;wreg free
  1669   00130A  C001  F01E         	movff	?___awdiv,dtoa@d
  1670   00130E  C002  F01F         	movff	?___awdiv+1,dtoa@d+1
  1671   001312                     l2935:
  1672                           
  1673                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  1674   001312  BE27               	btfsc	(dtoa@i+1)^0,7,c
  1675   001314  EF94  F009         	goto	u1981
  1676   001318  5027               	movf	(dtoa@i+1)^0,w,c
  1677   00131A  E108               	bnz	u1980
  1678   00131C  0426               	decf	dtoa@i^0,w,c
  1679   00131E  A0D8               	btfss	status,0,c
  1680   001320  EF94  F009         	goto	u1981
  1681   001324  EF96  F009         	goto	u1980
  1682   001328                     u1981:
  1683   001328  EFAC  F009         	goto	l2941
  1684   00132C                     u1980:
  1685   00132C  501E               	movf	dtoa@d^0,w,c
  1686   00132E  101F               	iorwf	(dtoa@d+1)^0,w,c
  1687   001330  A4D8               	btfss	status,2,c
  1688   001332  EF9D  F009         	goto	u1991
  1689   001336  EF9F  F009         	goto	u1990
  1690   00133A                     u1991:
  1691   00133A  EF59  F009         	goto	l2925
  1692   00133E                     u1990:
  1693   00133E  BE23               	btfsc	(dtoa@p+1)^0,7,c
  1694   001340  EFAC  F009         	goto	u2000
  1695   001344  5023               	movf	(dtoa@p+1)^0,w,c
  1696   001346  E106               	bnz	u2001
  1697   001348  0422               	decf	dtoa@p^0,w,c
  1698   00134A  B0D8               	btfsc	status,0,c
  1699   00134C  EFAA  F009         	goto	u2001
  1700   001350  EFAC  F009         	goto	u2000
  1701   001354                     u2001:
  1702   001354  EF59  F009         	goto	l2925
  1703   001358                     u2000:
  1704   001358                     l2941:
  1705                           
  1706                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  1707   001358  5028               	movf	dtoa@s^0,w,c
  1708   00135A  B4D8               	btfsc	status,2,c
  1709   00135C  EFB2  F009         	goto	u2011
  1710   001360  EFB4  F009         	goto	u2010
  1711   001364                     u2011:
  1712   001364  EFBF  F009         	goto	l2947
  1713   001368                     u2010:
  1714   001368                     
  1715                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  1716   001368  0626               	decf	dtoa@i^0,f,c
  1717   00136A  A0D8               	btfss	status,0,c
  1718   00136C  0627               	decf	(dtoa@i+1)^0,f,c
  1719   00136E                     
  1720                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  1721   00136E  0EAC               	movlw	low _dbuf
  1722   001370  2426               	addwf	dtoa@i^0,w,c
  1723   001372  6ED9               	movwf	fsr2l,c
  1724   001374  0E00               	movlw	high _dbuf
  1725   001376  2027               	addwfc	(dtoa@i+1)^0,w,c
  1726   001378  6EDA               	movwf	fsr2h,c
  1727   00137A  C028  FFDF         	movff	dtoa@s,indf2
  1728   00137E                     l2947:
  1729                           
  1730                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1731   00137E  C01C  F011         	movff	dtoa@fp,pad@fp
  1732   001382  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  1733   001386  0EAC               	movlw	low _dbuf
  1734   001388  2426               	addwf	dtoa@i^0,w,c
  1735   00138A  6E13               	movwf	pad@buf^0,c
  1736   00138C  0E00               	movlw	high _dbuf
  1737   00138E  2027               	addwfc	(dtoa@i+1)^0,w,c
  1738   001390  6E14               	movwf	(pad@buf+1)^0,c
  1739   001392  C024  F015         	movff	dtoa@w,pad@p
  1740   001396  C025  F016         	movff	dtoa@w+1,pad@p+1
  1741   00139A  EC7D  F011         	call	_pad	;wreg free
  1742   00139E  0012               	return		;funcret
  1743   0013A0                     __end_of_dtoa:
  1744                           	callstack 0
  1745                           
  1746 ;; *************** function _pad *****************
  1747 ;; Defined at:
  1748 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1749 ;; Parameters:    Size  Location     Type
  1750 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  1751 ;;		 -> sprintf@f(12), 
  1752 ;;  buf             2   18[COMRAM] PTR unsigned char 
  1753 ;;		 -> dbuf(32), 
  1754 ;;  p               2   20[COMRAM] int 
  1755 ;; Auto vars:     Size  Location     Type
  1756 ;;  w               2   25[COMRAM] int 
  1757 ;;  i               2   23[COMRAM] int 
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  1    wreg      void 
  1760 ;; Registers used:
  1761 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1767 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1768 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1769 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1770 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1771 ;;Total ram usage:       11 bytes
  1772 ;; Hardware stack levels used: 1
  1773 ;; Hardware stack levels required when called: 3
  1774 ;; This function calls:
  1775 ;;		_fputc
  1776 ;;		_fputs
  1777 ;; This function is called by:
  1778 ;;		_dtoa
  1779 ;; This function uses a non-reentrant model
  1780 ;;
  1781                           
  1782                           	psect	text7
  1783   0022FA                     __ptext7:
  1784                           	callstack 0
  1785   0022FA                     _pad:
  1786                           	callstack 21
  1787   0022FA                     
  1788                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
  1789   0022FA  BE16               	btfsc	(pad@p+1)^0,7,c
  1790   0022FC  EF82  F011         	goto	u1871
  1791   002300  EF84  F011         	goto	u1870
  1792   002304                     u1871:
  1793   002304  EF8A  F011         	goto	l2859
  1794   002308                     u1870:
  1795   002308  C015  F01A         	movff	pad@p,pad@w
  1796   00230C  C016  F01B         	movff	pad@p+1,pad@w+1
  1797   002310  EF8E  F011         	goto	l1283
  1798   002314                     l2859:
  1799   002314  0E00               	movlw	0
  1800   002316  6E1B               	movwf	(pad@w+1)^0,c
  1801   002318  0E00               	movlw	0
  1802   00231A  6E1A               	movwf	pad@w^0,c
  1803   00231C                     l1283:
  1804                           
  1805                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  1806   00231C  0E00               	movlw	0
  1807   00231E  6E19               	movwf	(pad@i+1)^0,c
  1808   002320  0E00               	movlw	0
  1809   002322  6E18               	movwf	pad@i^0,c
  1810                           
  1811                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  1812   002324  EFA0  F011         	goto	l2865
  1813   002328                     l2861:
  1814                           
  1815                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  1816   002328  0E00               	movlw	0
  1817   00232A  6E02               	movwf	(fputc@c+1)^0,c
  1818   00232C  0E20               	movlw	32
  1819   00232E  6E01               	movwf	fputc@c^0,c
  1820   002330  C011  F003         	movff	pad@fp,fputc@fp
  1821   002334  C012  F004         	movff	pad@fp+1,fputc@fp+1
  1822   002338  ECF2  F00E         	call	_fputc	;wreg free
  1823   00233C                     
  1824                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  1825   00233C  4A18               	infsnz	pad@i^0,f,c
  1826   00233E  2A19               	incf	(pad@i+1)^0,f,c
  1827   002340                     l2865:
  1828                           
  1829                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  1830   002340  501A               	movf	pad@w^0,w,c
  1831   002342  5C18               	subwf	pad@i^0,w,c
  1832   002344  5019               	movf	(pad@i+1)^0,w,c
  1833   002346  0A80               	xorlw	128
  1834   002348  6E17               	movwf	??_pad^0,c
  1835   00234A  501B               	movf	(pad@w+1)^0,w,c
  1836   00234C  0A80               	xorlw	128
  1837   00234E  5817               	subwfb	??_pad^0,w,c
  1838   002350  A0D8               	btfss	status,0,c
  1839   002352  EFAD  F011         	goto	u1881
  1840   002356  EFAF  F011         	goto	u1880
  1841   00235A                     u1881:
  1842   00235A  EF94  F011         	goto	l2861
  1843   00235E                     u1880:
  1844   00235E                     
  1845                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  1846   00235E  C013  F00A         	movff	pad@buf,fputs@s
  1847   002362  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1848   002366  C011  F00C         	movff	pad@fp,fputs@fp
  1849   00236A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1850   00236E  EC8E  F013         	call	_fputs	;wreg free
  1851   002372  0012               	return		;funcret
  1852   002374                     __end_of_pad:
  1853                           	callstack 0
  1854                           
  1855 ;; *************** function _fputs *****************
  1856 ;; Defined at:
  1857 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  1858 ;; Parameters:    Size  Location     Type
  1859 ;;  s               2    9[COMRAM] PTR const unsigned char 
  1860 ;;		 -> dbuf(32), 
  1861 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  1862 ;;		 -> sprintf@f(12), 
  1863 ;; Auto vars:     Size  Location     Type
  1864 ;;  i               2   14[COMRAM] int 
  1865 ;;  c               1   13[COMRAM] unsigned char 
  1866 ;; Return value:  Size  Location     Type
  1867 ;;                  2    9[COMRAM] int 
  1868 ;; Registers used:
  1869 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1870 ;; Tracked objects:
  1871 ;;		On entry : 0/0
  1872 ;;		On exit  : 0/0
  1873 ;;		Unchanged: 0/0
  1874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1875 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1876 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1878 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1879 ;;Total ram usage:        7 bytes
  1880 ;; Hardware stack levels used: 1
  1881 ;; Hardware stack levels required when called: 2
  1882 ;; This function calls:
  1883 ;;		_fputc
  1884 ;; This function is called by:
  1885 ;;		_pad
  1886 ;; This function uses a non-reentrant model
  1887 ;;
  1888                           
  1889                           	psect	text8
  1890   00271C                     __ptext8:
  1891                           	callstack 0
  1892   00271C                     _fputs:
  1893                           	callstack 21
  1894   00271C  0E00               	movlw	0
  1895   00271E  6E10               	movwf	(fputs@i+1)^0,c
  1896   002720  0E00               	movlw	0
  1897   002722  6E0F               	movwf	fputs@i^0,c
  1898   002724  EF9F  F013         	goto	l2749
  1899   002728                     l2745:
  1900   002728  C00E  F001         	movff	fputs@c,fputc@c
  1901   00272C  6A02               	clrf	(fputc@c+1)^0,c
  1902   00272E  C00C  F003         	movff	fputs@fp,fputc@fp
  1903   002732  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  1904   002736  ECF2  F00E         	call	_fputc	;wreg free
  1905   00273A  4A0F               	infsnz	fputs@i^0,f,c
  1906   00273C  2A10               	incf	(fputs@i+1)^0,f,c
  1907   00273E                     l2749:
  1908   00273E  500F               	movf	fputs@i^0,w,c
  1909   002740  240A               	addwf	fputs@s^0,w,c
  1910   002742  6ED9               	movwf	fsr2l,c
  1911   002744  5010               	movf	(fputs@i+1)^0,w,c
  1912   002746  200B               	addwfc	(fputs@s+1)^0,w,c
  1913   002748  6EDA               	movwf	fsr2h,c
  1914   00274A  50DF               	movf	indf2,w,c
  1915   00274C  6E0E               	movwf	fputs@c^0,c
  1916   00274E  500E               	movf	fputs@c^0,w,c
  1917   002750  A4D8               	btfss	status,2,c
  1918   002752  EFAD  F013         	goto	u1701
  1919   002756  EFAF  F013         	goto	u1700
  1920   00275A                     u1701:
  1921   00275A  EF94  F013         	goto	l2745
  1922   00275E                     u1700:
  1923   00275E  0012               	return		;funcret
  1924   002760                     __end_of_fputs:
  1925                           	callstack 0
  1926                           
  1927 ;; *************** function _fputc *****************
  1928 ;; Defined at:
  1929 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  1930 ;; Parameters:    Size  Location     Type
  1931 ;;  c               2    0[COMRAM] int 
  1932 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  1933 ;;		 -> sprintf@f(12), 
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;		None
  1936 ;; Return value:  Size  Location     Type
  1937 ;;                  2    0[COMRAM] int 
  1938 ;; Registers used:
  1939 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1945 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1947 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1948 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1949 ;;Total ram usage:        9 bytes
  1950 ;; Hardware stack levels used: 1
  1951 ;; Hardware stack levels required when called: 1
  1952 ;; This function calls:
  1953 ;;		_putch
  1954 ;; This function is called by:
  1955 ;;		_pad
  1956 ;;		_vfpfcnvrt
  1957 ;;		_fputs
  1958 ;; This function uses a non-reentrant model
  1959 ;;
  1960                           
  1961                           	psect	text9
  1962   001DE4                     __ptext9:
  1963                           	callstack 0
  1964   001DE4                     _fputc:
  1965                           	callstack 24
  1966   001DE4  5003               	movf	fputc@fp^0,w,c
  1967   001DE6  1004               	iorwf	(fputc@fp+1)^0,w,c
  1968   001DE8  B4D8               	btfsc	status,2,c
  1969   001DEA  EFF9  F00E         	goto	u1661
  1970   001DEE  EFFB  F00E         	goto	u1660
  1971   001DF2                     u1661:
  1972   001DF2  EF04  F00F         	goto	l2733
  1973   001DF6                     u1660:
  1974   001DF6  5003               	movf	fputc@fp^0,w,c
  1975   001DF8  1004               	iorwf	(fputc@fp+1)^0,w,c
  1976   001DFA  A4D8               	btfss	status,2,c
  1977   001DFC  EF02  F00F         	goto	u1671
  1978   001E00  EF04  F00F         	goto	u1670
  1979   001E04                     u1671:
  1980   001E04  EF09  F00F         	goto	l2735
  1981   001E08                     u1670:
  1982   001E08                     l2733:
  1983   001E08  5001               	movf	fputc@c^0,w,c
  1984   001E0A  EC1A  F014         	call	_putch
  1985   001E0E  EF56  F00F         	goto	l1338
  1986   001E12                     l2735:
  1987   001E12  EE20 F00A          	lfsr	2,10
  1988   001E16  5003               	movf	fputc@fp^0,w,c
  1989   001E18  26D9               	addwf	fsr2l,f,c
  1990   001E1A  5004               	movf	(fputc@fp+1)^0,w,c
  1991   001E1C  22DA               	addwfc	fsr2h,f,c
  1992   001E1E  50DE               	movf	postinc2,w,c
  1993   001E20  10DE               	iorwf	postinc2,w,c
  1994   001E22  B4D8               	btfsc	status,2,c
  1995   001E24  EF16  F00F         	goto	u1681
  1996   001E28  EF18  F00F         	goto	u1680
  1997   001E2C                     u1681:
  1998   001E2C  EF33  F00F         	goto	l2739
  1999   001E30                     u1680:
  2000   001E30  EE20 F00A          	lfsr	2,10
  2001   001E34  5003               	movf	fputc@fp^0,w,c
  2002   001E36  26D9               	addwf	fsr2l,f,c
  2003   001E38  5004               	movf	(fputc@fp+1)^0,w,c
  2004   001E3A  22DA               	addwfc	fsr2h,f,c
  2005   001E3C  EE10 F003          	lfsr	1,3
  2006   001E40  5003               	movf	fputc@fp^0,w,c
  2007   001E42  26E1               	addwf	fsr1l,f,c
  2008   001E44  5004               	movf	(fputc@fp+1)^0,w,c
  2009   001E46  22E2               	addwfc	fsr1h,f,c
  2010   001E48  50DE               	movf	postinc2,w,c
  2011   001E4A  5CE6               	subwf	postinc1,w,c
  2012   001E4C  50E6               	movf	postinc1,w,c
  2013   001E4E  0A80               	xorlw	128
  2014   001E50  6E09               	movwf	(??_fputc+4)^0,c
  2015   001E52  50DE               	movf	postinc2,w,c
  2016   001E54  0A80               	xorlw	128
  2017   001E56  5809               	subwfb	(??_fputc+4)^0,w,c
  2018   001E58  B0D8               	btfsc	status,0,c
  2019   001E5A  EF31  F00F         	goto	u1691
  2020   001E5E  EF33  F00F         	goto	u1690
  2021   001E62                     u1691:
  2022   001E62  EF56  F00F         	goto	l1338
  2023   001E66                     u1690:
  2024   001E66                     l2739:
  2025   001E66  EE20 F003          	lfsr	2,3
  2026   001E6A  5003               	movf	fputc@fp^0,w,c
  2027   001E6C  26D9               	addwf	fsr2l,f,c
  2028   001E6E  5004               	movf	(fputc@fp+1)^0,w,c
  2029   001E70  22DA               	addwfc	fsr2h,f,c
  2030   001E72  CFDE F005          	movff	postinc2,??_fputc
  2031   001E76  CFDD F006          	movff	postdec2,??_fputc+1
  2032   001E7A  C003  FFD9         	movff	fputc@fp,fsr2l
  2033   001E7E  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2034   001E82  CFDE F007          	movff	postinc2,??_fputc+2
  2035   001E86  CFDD F008          	movff	postdec2,??_fputc+3
  2036   001E8A  5005               	movf	??_fputc^0,w,c
  2037   001E8C  2407               	addwf	(??_fputc+2)^0,w,c
  2038   001E8E  6ED9               	movwf	fsr2l,c
  2039   001E90  5006               	movf	(??_fputc+1)^0,w,c
  2040   001E92  2008               	addwfc	(??_fputc+3)^0,w,c
  2041   001E94  6EDA               	movwf	fsr2h,c
  2042   001E96  C001  FFDF         	movff	fputc@c,indf2
  2043   001E9A  EE20 F003          	lfsr	2,3
  2044   001E9E  5003               	movf	fputc@fp^0,w,c
  2045   001EA0  26D9               	addwf	fsr2l,f,c
  2046   001EA2  5004               	movf	(fputc@fp+1)^0,w,c
  2047   001EA4  22DA               	addwfc	fsr2h,f,c
  2048   001EA6  2ADE               	incf	postinc2,f,c
  2049   001EA8  0E00               	movlw	0
  2050   001EAA  22DD               	addwfc	postdec2,f,c
  2051   001EAC                     l1338:
  2052   001EAC  0012               	return		;funcret
  2053   001EAE                     __end_of_fputc:
  2054                           	callstack 0
  2055                           
  2056 ;; *************** function _putch *****************
  2057 ;; Defined at:
  2058 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  2059 ;; Parameters:    Size  Location     Type
  2060 ;;  c               1    wreg     unsigned char 
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;  c               1    0[COMRAM] unsigned char 
  2063 ;; Return value:  Size  Location     Type
  2064 ;;                  1    wreg      void 
  2065 ;; Registers used:
  2066 ;;		wreg
  2067 ;; Tracked objects:
  2068 ;;		On entry : 0/0
  2069 ;;		On exit  : 0/0
  2070 ;;		Unchanged: 0/0
  2071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2076 ;;Total ram usage:        0 bytes
  2077 ;; Hardware stack levels used: 1
  2078 ;; This function calls:
  2079 ;;		Nothing
  2080 ;; This function is called by:
  2081 ;;		_fputc
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085                           	psect	text10
  2086   002834                     __ptext10:
  2087                           	callstack 0
  2088   002834                     _putch:
  2089                           	callstack 24
  2090   002834  0012               	return		;funcret
  2091   002836                     __end_of_putch:
  2092                           	callstack 0
  2093                           
  2094 ;; *************** function _abs *****************
  2095 ;; Defined at:
  2096 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;  a               2    6[COMRAM] int 
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;		None
  2101 ;; Return value:  Size  Location     Type
  2102 ;;                  2    6[COMRAM] int 
  2103 ;; Registers used:
  2104 ;;		wreg, status,2, status,0
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2110 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2112 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2113 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2114 ;;Total ram usage:        4 bytes
  2115 ;; Hardware stack levels used: 1
  2116 ;; This function calls:
  2117 ;;		Nothing
  2118 ;; This function is called by:
  2119 ;;		_dtoa
  2120 ;; This function uses a non-reentrant model
  2121 ;;
  2122                           
  2123                           	psect	text11
  2124   002760                     __ptext11:
  2125                           	callstack 0
  2126   002760                     _abs:
  2127                           	callstack 24
  2128   002760  BE08               	btfsc	(abs@a+1)^0,7,c
  2129   002762  EFBD  F013         	goto	u1890
  2130   002766  5008               	movf	(abs@a+1)^0,w,c
  2131   002768  E106               	bnz	u1891
  2132   00276A  0407               	decf	abs@a^0,w,c
  2133   00276C  B0D8               	btfsc	status,0,c
  2134   00276E  EFBB  F013         	goto	u1891
  2135   002772  EFBD  F013         	goto	u1890
  2136   002776                     u1891:
  2137   002776  EFCB  F013         	goto	l1323
  2138   00277A                     u1890:
  2139   00277A  C007  F009         	movff	abs@a,??_abs
  2140   00277E  C008  F00A         	movff	abs@a+1,??_abs+1
  2141   002782  1E09               	comf	??_abs^0,f,c
  2142   002784  1E0A               	comf	(??_abs+1)^0,f,c
  2143   002786  4A09               	infsnz	??_abs^0,f,c
  2144   002788  2A0A               	incf	(??_abs+1)^0,f,c
  2145   00278A  C009  F007         	movff	??_abs,?_abs
  2146   00278E  C00A  F008         	movff	??_abs+1,?_abs+1
  2147   002792  EFCF  F013         	goto	l1326
  2148   002796                     l1323:
  2149   002796  C007  F007         	movff	abs@a,?_abs
  2150   00279A  C008  F008         	movff	abs@a+1,?_abs+1
  2151   00279E                     l1326:
  2152   00279E  0012               	return		;funcret
  2153   0027A0                     __end_of_abs:
  2154                           	callstack 0
  2155                           
  2156 ;; *************** function ___awmod *****************
  2157 ;; Defined at:
  2158 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  2159 ;; Parameters:    Size  Location     Type
  2160 ;;  dividend        2    0[COMRAM] int 
  2161 ;;  divisor         2    2[COMRAM] int 
  2162 ;; Auto vars:     Size  Location     Type
  2163 ;;  sign            1    5[COMRAM] unsigned char 
  2164 ;;  counter         1    4[COMRAM] unsigned char 
  2165 ;; Return value:  Size  Location     Type
  2166 ;;                  2    0[COMRAM] int 
  2167 ;; Registers used:
  2168 ;;		wreg, status,2, status,0
  2169 ;; Tracked objects:
  2170 ;;		On entry : 0/0
  2171 ;;		On exit  : 0/0
  2172 ;;		Unchanged: 0/0
  2173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2174 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2175 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2177 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2178 ;;Total ram usage:        6 bytes
  2179 ;; Hardware stack levels used: 1
  2180 ;; This function calls:
  2181 ;;		Nothing
  2182 ;; This function is called by:
  2183 ;;		_dtoa
  2184 ;; This function uses a non-reentrant model
  2185 ;;
  2186                           
  2187                           	psect	text12
  2188   001F72                     __ptext12:
  2189                           	callstack 0
  2190   001F72                     ___awmod:
  2191                           	callstack 24
  2192   001F72  0E00               	movlw	0
  2193   001F74  6E06               	movwf	___awmod@sign^0,c
  2194   001F76  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2195   001F78  EFC2  F00F         	goto	u1810
  2196   001F7C  EFC0  F00F         	goto	u1811
  2197   001F80                     u1811:
  2198   001F80  EFC8  F00F         	goto	l2827
  2199   001F84                     u1810:
  2200   001F84  6C01               	negf	___awmod@dividend^0,c
  2201   001F86  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2202   001F88  B0D8               	btfsc	status,0,c
  2203   001F8A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2204   001F8C  0E01               	movlw	1
  2205   001F8E  6E06               	movwf	___awmod@sign^0,c
  2206   001F90                     l2827:
  2207   001F90  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2208   001F92  EFCF  F00F         	goto	u1820
  2209   001F96  EFCD  F00F         	goto	u1821
  2210   001F9A                     u1821:
  2211   001F9A  EFD3  F00F         	goto	l2831
  2212   001F9E                     u1820:
  2213   001F9E  6C03               	negf	___awmod@divisor^0,c
  2214   001FA0  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2215   001FA2  B0D8               	btfsc	status,0,c
  2216   001FA4  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2217   001FA6                     l2831:
  2218   001FA6  5003               	movf	___awmod@divisor^0,w,c
  2219   001FA8  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2220   001FAA  B4D8               	btfsc	status,2,c
  2221   001FAC  EFDA  F00F         	goto	u1831
  2222   001FB0  EFDC  F00F         	goto	u1830
  2223   001FB4                     u1831:
  2224   001FB4  EF00  F010         	goto	l2847
  2225   001FB8                     u1830:
  2226   001FB8  0E01               	movlw	1
  2227   001FBA  6E05               	movwf	___awmod@counter^0,c
  2228   001FBC  EFE4  F00F         	goto	l2837
  2229   001FC0                     l2835:
  2230   001FC0  90D8               	bcf	status,0,c
  2231   001FC2  3603               	rlcf	___awmod@divisor^0,f,c
  2232   001FC4  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2233   001FC6  2A05               	incf	___awmod@counter^0,f,c
  2234   001FC8                     l2837:
  2235   001FC8  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2236   001FCA  EFE9  F00F         	goto	u1841
  2237   001FCE  EFEB  F00F         	goto	u1840
  2238   001FD2                     u1841:
  2239   001FD2  EFE0  F00F         	goto	l2835
  2240   001FD6                     u1840:
  2241   001FD6                     l2839:
  2242   001FD6  5003               	movf	___awmod@divisor^0,w,c
  2243   001FD8  5C01               	subwf	___awmod@dividend^0,w,c
  2244   001FDA  5004               	movf	(___awmod@divisor+1)^0,w,c
  2245   001FDC  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2246   001FDE  A0D8               	btfss	status,0,c
  2247   001FE0  EFF4  F00F         	goto	u1851
  2248   001FE4  EFF6  F00F         	goto	u1850
  2249   001FE8                     u1851:
  2250   001FE8  EFFA  F00F         	goto	l2843
  2251   001FEC                     u1850:
  2252   001FEC  5003               	movf	___awmod@divisor^0,w,c
  2253   001FEE  5E01               	subwf	___awmod@dividend^0,f,c
  2254   001FF0  5004               	movf	(___awmod@divisor+1)^0,w,c
  2255   001FF2  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2256   001FF4                     l2843:
  2257   001FF4  90D8               	bcf	status,0,c
  2258   001FF6  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2259   001FF8  3203               	rrcf	___awmod@divisor^0,f,c
  2260   001FFA  2E05               	decfsz	___awmod@counter^0,f,c
  2261   001FFC  EFEB  F00F         	goto	l2839
  2262   002000                     l2847:
  2263   002000  5006               	movf	___awmod@sign^0,w,c
  2264   002002  B4D8               	btfsc	status,2,c
  2265   002004  EF06  F010         	goto	u1861
  2266   002008  EF08  F010         	goto	u1860
  2267   00200C                     u1861:
  2268   00200C  EF0C  F010         	goto	l2851
  2269   002010                     u1860:
  2270   002010  6C01               	negf	___awmod@dividend^0,c
  2271   002012  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2272   002014  B0D8               	btfsc	status,0,c
  2273   002016  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2274   002018                     l2851:
  2275   002018  C001  F001         	movff	___awmod@dividend,?___awmod
  2276   00201C  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2277   002020  0012               	return		;funcret
  2278   002022                     __end_of___awmod:
  2279                           	callstack 0
  2280                           
  2281 ;; *************** function ___awdiv *****************
  2282 ;; Defined at:
  2283 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  2284 ;; Parameters:    Size  Location     Type
  2285 ;;  dividend        2    0[COMRAM] int 
  2286 ;;  divisor         2    2[COMRAM] int 
  2287 ;; Auto vars:     Size  Location     Type
  2288 ;;  quotient        2    6[COMRAM] int 
  2289 ;;  sign            1    5[COMRAM] unsigned char 
  2290 ;;  counter         1    4[COMRAM] unsigned char 
  2291 ;; Return value:  Size  Location     Type
  2292 ;;                  2    0[COMRAM] int 
  2293 ;; Registers used:
  2294 ;;		wreg, status,2, status,0
  2295 ;; Tracked objects:
  2296 ;;		On entry : 0/0
  2297 ;;		On exit  : 0/0
  2298 ;;		Unchanged: 0/0
  2299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2300 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2301 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2303 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2304 ;;Total ram usage:        8 bytes
  2305 ;; Hardware stack levels used: 1
  2306 ;; This function calls:
  2307 ;;		Nothing
  2308 ;; This function is called by:
  2309 ;;		_dtoa
  2310 ;; This function uses a non-reentrant model
  2311 ;;
  2312                           
  2313                           	psect	text13
  2314   001EAE                     __ptext13:
  2315                           	callstack 0
  2316   001EAE                     ___awdiv:
  2317                           	callstack 24
  2318   001EAE  0E00               	movlw	0
  2319   001EB0  6E06               	movwf	___awdiv@sign^0,c
  2320   001EB2  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  2321   001EB4  EF60  F00F         	goto	u1750
  2322   001EB8  EF5E  F00F         	goto	u1751
  2323   001EBC                     u1751:
  2324   001EBC  EF66  F00F         	goto	l2783
  2325   001EC0                     u1750:
  2326   001EC0  6C03               	negf	___awdiv@divisor^0,c
  2327   001EC2  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  2328   001EC4  B0D8               	btfsc	status,0,c
  2329   001EC6  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  2330   001EC8  0E01               	movlw	1
  2331   001ECA  6E06               	movwf	___awdiv@sign^0,c
  2332   001ECC                     l2783:
  2333   001ECC  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  2334   001ECE  EF6D  F00F         	goto	u1760
  2335   001ED2  EF6B  F00F         	goto	u1761
  2336   001ED6                     u1761:
  2337   001ED6  EF73  F00F         	goto	l2789
  2338   001EDA                     u1760:
  2339   001EDA  6C01               	negf	___awdiv@dividend^0,c
  2340   001EDC  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2341   001EDE  B0D8               	btfsc	status,0,c
  2342   001EE0  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  2343   001EE2  0E01               	movlw	1
  2344   001EE4  1A06               	xorwf	___awdiv@sign^0,f,c
  2345   001EE6                     l2789:
  2346   001EE6  0E00               	movlw	0
  2347   001EE8  6E08               	movwf	(___awdiv@quotient+1)^0,c
  2348   001EEA  0E00               	movlw	0
  2349   001EEC  6E07               	movwf	___awdiv@quotient^0,c
  2350   001EEE  5003               	movf	___awdiv@divisor^0,w,c
  2351   001EF0  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  2352   001EF2  B4D8               	btfsc	status,2,c
  2353   001EF4  EF7E  F00F         	goto	u1771
  2354   001EF8  EF80  F00F         	goto	u1770
  2355   001EFC                     u1771:
  2356   001EFC  EFA8  F00F         	goto	l2811
  2357   001F00                     u1770:
  2358   001F00  0E01               	movlw	1
  2359   001F02  6E05               	movwf	___awdiv@counter^0,c
  2360   001F04  EF88  F00F         	goto	l2797
  2361   001F08                     l2795:
  2362   001F08  90D8               	bcf	status,0,c
  2363   001F0A  3603               	rlcf	___awdiv@divisor^0,f,c
  2364   001F0C  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  2365   001F0E  2A05               	incf	___awdiv@counter^0,f,c
  2366   001F10                     l2797:
  2367   001F10  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2368   001F12  EF8D  F00F         	goto	u1781
  2369   001F16  EF8F  F00F         	goto	u1780
  2370   001F1A                     u1781:
  2371   001F1A  EF84  F00F         	goto	l2795
  2372   001F1E                     u1780:
  2373   001F1E                     l2799:
  2374   001F1E  90D8               	bcf	status,0,c
  2375   001F20  3607               	rlcf	___awdiv@quotient^0,f,c
  2376   001F22  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2377   001F24  5003               	movf	___awdiv@divisor^0,w,c
  2378   001F26  5C01               	subwf	___awdiv@dividend^0,w,c
  2379   001F28  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2380   001F2A  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2381   001F2C  A0D8               	btfss	status,0,c
  2382   001F2E  EF9B  F00F         	goto	u1791
  2383   001F32  EF9D  F00F         	goto	u1790
  2384   001F36                     u1791:
  2385   001F36  EFA2  F00F         	goto	l2807
  2386   001F3A                     u1790:
  2387   001F3A  5003               	movf	___awdiv@divisor^0,w,c
  2388   001F3C  5E01               	subwf	___awdiv@dividend^0,f,c
  2389   001F3E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2390   001F40  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2391   001F42  8007               	bsf	___awdiv@quotient^0,0,c
  2392   001F44                     l2807:
  2393   001F44  90D8               	bcf	status,0,c
  2394   001F46  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2395   001F48  3203               	rrcf	___awdiv@divisor^0,f,c
  2396   001F4A  2E05               	decfsz	___awdiv@counter^0,f,c
  2397   001F4C  EF8F  F00F         	goto	l2799
  2398   001F50                     l2811:
  2399   001F50  5006               	movf	___awdiv@sign^0,w,c
  2400   001F52  B4D8               	btfsc	status,2,c
  2401   001F54  EFAE  F00F         	goto	u1801
  2402   001F58  EFB0  F00F         	goto	u1800
  2403   001F5C                     u1801:
  2404   001F5C  EFB4  F00F         	goto	l2815
  2405   001F60                     u1800:
  2406   001F60  6C07               	negf	___awdiv@quotient^0,c
  2407   001F62  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  2408   001F64  B0D8               	btfsc	status,0,c
  2409   001F66  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  2410   001F68                     l2815:
  2411   001F68  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2412   001F6C  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2413   001F70  0012               	return		;funcret
  2414   001F72                     __end_of___awdiv:
  2415                           	callstack 0
  2416                           
  2417 ;; *************** function _memset *****************
  2418 ;; Defined at:
  2419 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memset.c"
  2420 ;; Parameters:    Size  Location     Type
  2421 ;;  dest            2    0[COMRAM] PTR void 
  2422 ;;		 -> result_1(4), str__2(4), str__1(4), 
  2423 ;;  c               2    2[COMRAM] int 
  2424 ;;  n               2    4[COMRAM] unsigned int 
  2425 ;; Auto vars:     Size  Location     Type
  2426 ;;  s               2   10[COMRAM] PTR unsigned char 
  2427 ;;		 -> result_1(4), str__2(4), str__1(4), 
  2428 ;;  k               2    8[COMRAM] unsigned int 
  2429 ;; Return value:  Size  Location     Type
  2430 ;;                  2    0[COMRAM] PTR void 
  2431 ;; Registers used:
  2432 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2433 ;; Tracked objects:
  2434 ;;		On entry : 0/0
  2435 ;;		On exit  : 0/0
  2436 ;;		Unchanged: 0/0
  2437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2438 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2439 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2440 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2441 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2442 ;;Total ram usage:       12 bytes
  2443 ;; Hardware stack levels used: 1
  2444 ;; This function calls:
  2445 ;;		Nothing
  2446 ;; This function is called by:
  2447 ;;		_main
  2448 ;;		_number_8bit_to_string
  2449 ;;		_number_16bit_to_string
  2450 ;;		_number_32bit_to_string
  2451 ;; This function uses a non-reentrant model
  2452 ;;
  2453                           
  2454                           	psect	text14
  2455   0013A0                     __ptext14:
  2456                           	callstack 0
  2457   0013A0                     _memset:
  2458                           	callstack 28
  2459   0013A0  C001  F00B         	movff	memset@dest,memset@s
  2460   0013A4  C002  F00C         	movff	memset@dest+1,memset@s+1
  2461   0013A8  5005               	movf	memset@n^0,w,c
  2462   0013AA  1006               	iorwf	(memset@n+1)^0,w,c
  2463   0013AC  A4D8               	btfss	status,2,c
  2464   0013AE  EFDB  F009         	goto	u2281
  2465   0013B2  EFDD  F009         	goto	u2280
  2466   0013B6                     u2281:
  2467   0013B6  EFDF  F009         	goto	l3155
  2468   0013BA                     u2280:
  2469   0013BA  EF8A  F00A         	goto	l1248
  2470   0013BE                     l3155:
  2471   0013BE  C00B  FFD9         	movff	memset@s,fsr2l
  2472   0013C2  C00C  FFDA         	movff	memset@s+1,fsr2h
  2473   0013C6  C003  FFDF         	movff	memset@c,indf2
  2474   0013CA  5005               	movf	memset@n^0,w,c
  2475   0013CC  240B               	addwf	memset@s^0,w,c
  2476   0013CE  6E07               	movwf	??_memset^0,c
  2477   0013D0  5006               	movf	(memset@n+1)^0,w,c
  2478   0013D2  200C               	addwfc	(memset@s+1)^0,w,c
  2479   0013D4  6E08               	movwf	(??_memset+1)^0,c
  2480   0013D6  0EFF               	movlw	255
  2481   0013D8  2407               	addwf	??_memset^0,w,c
  2482   0013DA  6ED9               	movwf	fsr2l,c
  2483   0013DC  0EFF               	movlw	255
  2484   0013DE  2008               	addwfc	(??_memset+1)^0,w,c
  2485   0013E0  6EDA               	movwf	fsr2h,c
  2486   0013E2  C003  FFDF         	movff	memset@c,indf2
  2487   0013E6  5006               	movf	(memset@n+1)^0,w,c
  2488   0013E8  E107               	bnz	u2291
  2489   0013EA  0E03               	movlw	3
  2490   0013EC  5C05               	subwf	memset@n^0,w,c
  2491   0013EE  B0D8               	btfsc	status,0,c
  2492   0013F0  EFFC  F009         	goto	u2291
  2493   0013F4  EFFE  F009         	goto	u2290
  2494   0013F8                     u2291:
  2495   0013F8  EF00  F00A         	goto	l3161
  2496   0013FC                     u2290:
  2497   0013FC  EF8A  F00A         	goto	l1248
  2498   001400                     l3161:
  2499   001400  EE20 F001          	lfsr	2,1
  2500   001404  500B               	movf	memset@s^0,w,c
  2501   001406  26D9               	addwf	fsr2l,f,c
  2502   001408  500C               	movf	(memset@s+1)^0,w,c
  2503   00140A  22DA               	addwfc	fsr2h,f,c
  2504   00140C  C003  FFDF         	movff	memset@c,indf2
  2505   001410  EE20 F002          	lfsr	2,2
  2506   001414  500B               	movf	memset@s^0,w,c
  2507   001416  26D9               	addwf	fsr2l,f,c
  2508   001418  500C               	movf	(memset@s+1)^0,w,c
  2509   00141A  22DA               	addwfc	fsr2h,f,c
  2510   00141C  C003  FFDF         	movff	memset@c,indf2
  2511   001420  5005               	movf	memset@n^0,w,c
  2512   001422  240B               	addwf	memset@s^0,w,c
  2513   001424  6E07               	movwf	??_memset^0,c
  2514   001426  5006               	movf	(memset@n+1)^0,w,c
  2515   001428  200C               	addwfc	(memset@s+1)^0,w,c
  2516   00142A  6E08               	movwf	(??_memset+1)^0,c
  2517   00142C  0EFE               	movlw	254
  2518   00142E  2407               	addwf	??_memset^0,w,c
  2519   001430  6ED9               	movwf	fsr2l,c
  2520   001432  0EFF               	movlw	255
  2521   001434  2008               	addwfc	(??_memset+1)^0,w,c
  2522   001436  6EDA               	movwf	fsr2h,c
  2523   001438  C003  FFDF         	movff	memset@c,indf2
  2524   00143C  5005               	movf	memset@n^0,w,c
  2525   00143E  240B               	addwf	memset@s^0,w,c
  2526   001440  6E07               	movwf	??_memset^0,c
  2527   001442  5006               	movf	(memset@n+1)^0,w,c
  2528   001444  200C               	addwfc	(memset@s+1)^0,w,c
  2529   001446  6E08               	movwf	(??_memset+1)^0,c
  2530   001448  0EFD               	movlw	253
  2531   00144A  2407               	addwf	??_memset^0,w,c
  2532   00144C  6ED9               	movwf	fsr2l,c
  2533   00144E  0EFF               	movlw	255
  2534   001450  2008               	addwfc	(??_memset+1)^0,w,c
  2535   001452  6EDA               	movwf	fsr2h,c
  2536   001454  C003  FFDF         	movff	memset@c,indf2
  2537   001458  5006               	movf	(memset@n+1)^0,w,c
  2538   00145A  E107               	bnz	u2301
  2539   00145C  0E07               	movlw	7
  2540   00145E  5C05               	subwf	memset@n^0,w,c
  2541   001460  B0D8               	btfsc	status,0,c
  2542   001462  EF35  F00A         	goto	u2301
  2543   001466  EF37  F00A         	goto	u2300
  2544   00146A                     u2301:
  2545   00146A  EF39  F00A         	goto	l3167
  2546   00146E                     u2300:
  2547   00146E  EF8A  F00A         	goto	l1248
  2548   001472                     l3167:
  2549   001472  EE20 F003          	lfsr	2,3
  2550   001476  500B               	movf	memset@s^0,w,c
  2551   001478  26D9               	addwf	fsr2l,f,c
  2552   00147A  500C               	movf	(memset@s+1)^0,w,c
  2553   00147C  22DA               	addwfc	fsr2h,f,c
  2554   00147E  C003  FFDF         	movff	memset@c,indf2
  2555   001482  5005               	movf	memset@n^0,w,c
  2556   001484  240B               	addwf	memset@s^0,w,c
  2557   001486  6E07               	movwf	??_memset^0,c
  2558   001488  5006               	movf	(memset@n+1)^0,w,c
  2559   00148A  200C               	addwfc	(memset@s+1)^0,w,c
  2560   00148C  6E08               	movwf	(??_memset+1)^0,c
  2561   00148E  0EFC               	movlw	252
  2562   001490  2407               	addwf	??_memset^0,w,c
  2563   001492  6ED9               	movwf	fsr2l,c
  2564   001494  0EFF               	movlw	255
  2565   001496  2008               	addwfc	(??_memset+1)^0,w,c
  2566   001498  6EDA               	movwf	fsr2h,c
  2567   00149A  C003  FFDF         	movff	memset@c,indf2
  2568   00149E  5006               	movf	(memset@n+1)^0,w,c
  2569   0014A0  E107               	bnz	u2311
  2570   0014A2  0E09               	movlw	9
  2571   0014A4  5C05               	subwf	memset@n^0,w,c
  2572   0014A6  B0D8               	btfsc	status,0,c
  2573   0014A8  EF58  F00A         	goto	u2311
  2574   0014AC  EF5A  F00A         	goto	u2310
  2575   0014B0                     u2311:
  2576   0014B0  EF5C  F00A         	goto	l3173
  2577   0014B4                     u2310:
  2578   0014B4  EF8A  F00A         	goto	l1248
  2579   0014B8                     l3173:
  2580   0014B8  C00B  F007         	movff	memset@s,??_memset
  2581   0014BC  C00C  F008         	movff	memset@s+1,??_memset+1
  2582   0014C0  1E07               	comf	??_memset^0,f,c
  2583   0014C2  1E08               	comf	(??_memset+1)^0,f,c
  2584   0014C4  4A07               	infsnz	??_memset^0,f,c
  2585   0014C6  2A08               	incf	(??_memset+1)^0,f,c
  2586   0014C8  0E03               	movlw	3
  2587   0014CA  1407               	andwf	??_memset^0,w,c
  2588   0014CC  6E09               	movwf	memset@k^0,c
  2589   0014CE  6A0A               	clrf	(memset@k+1)^0,c
  2590   0014D0  5009               	movf	memset@k^0,w,c
  2591   0014D2  260B               	addwf	memset@s^0,f,c
  2592   0014D4  500A               	movf	(memset@k+1)^0,w,c
  2593   0014D6  220C               	addwfc	(memset@s+1)^0,f,c
  2594   0014D8  5009               	movf	memset@k^0,w,c
  2595   0014DA  5E05               	subwf	memset@n^0,f,c
  2596   0014DC  500A               	movf	(memset@k+1)^0,w,c
  2597   0014DE  5A06               	subwfb	(memset@n+1)^0,f,c
  2598   0014E0  0EFC               	movlw	252
  2599   0014E2  1605               	andwf	memset@n^0,f,c
  2600   0014E4  0EFF               	movlw	255
  2601   0014E6  1606               	andwf	(memset@n+1)^0,f,c
  2602   0014E8  EF81  F00A         	goto	l3181
  2603   0014EC                     l3175:
  2604   0014EC  C00B  FFD9         	movff	memset@s,fsr2l
  2605   0014F0  C00C  FFDA         	movff	memset@s+1,fsr2h
  2606   0014F4  C003  FFDF         	movff	memset@c,indf2
  2607   0014F8  0605               	decf	memset@n^0,f,c
  2608   0014FA  A0D8               	btfss	status,0,c
  2609   0014FC  0606               	decf	(memset@n+1)^0,f,c
  2610   0014FE  4A0B               	infsnz	memset@s^0,f,c
  2611   001500  2A0C               	incf	(memset@s+1)^0,f,c
  2612   001502                     l3181:
  2613   001502  5005               	movf	memset@n^0,w,c
  2614   001504  1006               	iorwf	(memset@n+1)^0,w,c
  2615   001506  A4D8               	btfss	status,2,c
  2616   001508  EF88  F00A         	goto	u2321
  2617   00150C  EF8A  F00A         	goto	u2320
  2618   001510                     u2321:
  2619   001510  EF76  F00A         	goto	l3175
  2620   001514                     u2320:
  2621   001514                     l1248:
  2622   001514  0012               	return		;funcret
  2623   001516                     __end_of_memset:
  2624                           	callstack 0
  2625                           
  2626 ;; *************** function _num_1_read *****************
  2627 ;; Defined at:
  2628 ;;		line 36 in file "Application.c"
  2629 ;; Parameters:    Size  Location     Type
  2630 ;;  lcd             2   42[COMRAM] PTR struct .
  2631 ;;		 -> lcd_1(6), 
  2632 ;;  keypad          2   44[COMRAM] PTR struct .
  2633 ;;		 -> keypad_1(8), 
  2634 ;;  str             2   46[COMRAM] PTR unsigned char 
  2635 ;;		 -> str__1(4), 
  2636 ;;  operation       2   48[COMRAM] PTR unsigned char 
  2637 ;;		 -> operation_l(1), 
  2638 ;;  str_2           2   50[COMRAM] PTR unsigned char 
  2639 ;;		 -> str__2(4), 
  2640 ;; Auto vars:     Size  Location     Type
  2641 ;;  temp_value      1   58[COMRAM] unsigned char 
  2642 ;;  ret             1   57[COMRAM] unsigned char 
  2643 ;;  counter_3       1   56[COMRAM] unsigned char 
  2644 ;;  counter_1       1   55[COMRAM] unsigned char 
  2645 ;;  counter_2       1   54[COMRAM] unsigned char 
  2646 ;; Return value:  Size  Location     Type
  2647 ;;                  1    wreg      unsigned char 
  2648 ;; Registers used:
  2649 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2650 ;; Tracked objects:
  2651 ;;		On entry : 0/0
  2652 ;;		On exit  : 0/0
  2653 ;;		Unchanged: 0/0
  2654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2655 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2656 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2657 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2658 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2659 ;;Total ram usage:       17 bytes
  2660 ;; Hardware stack levels used: 1
  2661 ;; Hardware stack levels required when called: 6
  2662 ;; This function calls:
  2663 ;;		_convert_string_to_numbers
  2664 ;;		_keypad_read_value
  2665 ;;		_lcd_4bits_send_char
  2666 ;;		_lcd_4bits_send_string_pos
  2667 ;;		_num_2_read
  2668 ;; This function is called by:
  2669 ;;		_main
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673                           	psect	text15
  2674   00101E                     __ptext15:
  2675                           	callstack 0
  2676   00101E                     _num_1_read:
  2677                           	callstack 24
  2678   00101E                     
  2679                           ;Application.c: 38:     uint8 counter_1 = 0;
  2680   00101E  0E00               	movlw	0
  2681   001020  6E38               	movwf	num_1_read@counter_1^0,c
  2682                           
  2683                           ;Application.c: 39:     uint8 counter_2 = 0;
  2684   001022  0E00               	movlw	0
  2685   001024  6E37               	movwf	num_1_read@counter_2^0,c
  2686                           
  2687                           ;Application.c: 40:     uint8 counter_3 = 0;
  2688   001026  0E00               	movlw	0
  2689   001028  6E39               	movwf	num_1_read@counter_3^0,c
  2690                           
  2691                           ;Application.c: 41:     uint8 temp_value = 0;
  2692   00102A  0E00               	movlw	0
  2693   00102C  6E3B               	movwf	num_1_read@temp_value^0,c
  2694   00102E                     l3441:
  2695                           
  2696                           ;Application.c: 43:         if(counter_1 > 3){
  2697   00102E  0E03               	movlw	3
  2698   001030  6438               	cpfsgt	num_1_read@counter_1^0,c
  2699   001032  EF1D  F008         	goto	u2581
  2700   001036  EF1F  F008         	goto	u2580
  2701   00103A                     u2581:
  2702   00103A  EF31  F008         	goto	l3451
  2703   00103E                     u2580:
  2704   00103E                     
  2705                           ;Application.c: 44:             ret = lcd_4bits_send_string_pos(lcd , "error" , 3 , 1 );
  2706   00103E  C02B  F019         	movff	num_1_read@lcd,lcd_4bits_send_string_pos@lcd
  2707   001042  C02C  F01A         	movff	num_1_read@lcd+1,lcd_4bits_send_string_pos@lcd+1
  2708   001046  0E11               	movlw	low STR_1
  2709   001048  6E1B               	movwf	lcd_4bits_send_string_pos@data^0,c
  2710   00104A  0E10               	movlw	high STR_1
  2711   00104C  6E1C               	movwf	(lcd_4bits_send_string_pos@data+1)^0,c
  2712   00104E  0E03               	movlw	3
  2713   001050  6E1D               	movwf	lcd_4bits_send_string_pos@ROW^0,c
  2714   001052  0E01               	movlw	1
  2715   001054  6E1E               	movwf	lcd_4bits_send_string_pos@COLUMN^0,c
  2716   001056  EC6A  F013         	call	_lcd_4bits_send_string_pos	;wreg free
  2717   00105A  6E3A               	movwf	num_1_read@ret^0,c
  2718   00105C                     l3445:
  2719                           
  2720                           ;Application.c: 45:             return ret;
  2721   00105C  503A               	movf	num_1_read@ret^0,w,c
  2722   00105E  EF05  F009         	goto	l351
  2723   001062                     l3451:
  2724   001062  C02D  F00E         	movff	num_1_read@keypad,keypad_read_value@key_pad
  2725   001066  C02E  F00F         	movff	num_1_read@keypad+1,keypad_read_value@key_pad+1
  2726   00106A  0E3B               	movlw	low num_1_read@temp_value
  2727   00106C  6E10               	movwf	keypad_read_value@value^0,c
  2728   00106E  0E00               	movlw	high num_1_read@temp_value
  2729   001070  6E11               	movwf	(keypad_read_value@value+1)^0,c
  2730   001072  EC7B  F00E         	call	_keypad_read_value	;wreg free
  2731   001076                     
  2732                           ;Application.c: 50:                 if(temp_value != 0){
  2733   001076  503B               	movf	num_1_read@temp_value^0,w,c
  2734   001078  B4D8               	btfsc	status,2,c
  2735   00107A  EF41  F008         	goto	u2591
  2736   00107E  EF43  F008         	goto	u2590
  2737   001082                     u2591:
  2738   001082  EF17  F008         	goto	l3441
  2739   001086                     u2590:
  2740   001086                     
  2741                           ;Application.c: 52:                     if((temp_value == '+') || (temp_value == '*') ||
      +                           (temp_value == '-')){
  2742   001086  0E2B               	movlw	43
  2743   001088  183B               	xorwf	num_1_read@temp_value^0,w,c
  2744   00108A  B4D8               	btfsc	status,2,c
  2745   00108C  EF4A  F008         	goto	u2601
  2746   001090  EF4C  F008         	goto	u2600
  2747   001094                     u2601:
  2748   001094  EF78  F008         	goto	l3469
  2749   001098                     u2600:
  2750   001098  0E2A               	movlw	42
  2751   00109A  183B               	xorwf	num_1_read@temp_value^0,w,c
  2752   00109C  B4D8               	btfsc	status,2,c
  2753   00109E  EF53  F008         	goto	u2611
  2754   0010A2  EF55  F008         	goto	u2610
  2755   0010A6                     u2611:
  2756   0010A6  EF78  F008         	goto	l3469
  2757   0010AA                     u2610:
  2758   0010AA  0E2D               	movlw	45
  2759   0010AC  183B               	xorwf	num_1_read@temp_value^0,w,c
  2760   0010AE  A4D8               	btfss	status,2,c
  2761   0010B0  EF5C  F008         	goto	u2621
  2762   0010B4  EF5E  F008         	goto	u2620
  2763   0010B8                     u2621:
  2764   0010B8  EFC8  F008         	goto	l3491
  2765   0010BC                     u2620:
  2766   0010BC  EF78  F008         	goto	l3469
  2767   0010C0                     l3461:
  2768   0010C0  C031  FFD9         	movff	num_1_read@operation,fsr2l
  2769   0010C4  C032  FFDA         	movff	num_1_read@operation+1,fsr2h
  2770   0010C8  0E2B               	movlw	43
  2771   0010CA  6EDF               	movwf	indf2,c
  2772   0010CC  EF91  F008         	goto	l3471
  2773   0010D0                     l3463:
  2774   0010D0  C031  FFD9         	movff	num_1_read@operation,fsr2l
  2775   0010D4  C032  FFDA         	movff	num_1_read@operation+1,fsr2h
  2776   0010D8  0E2D               	movlw	45
  2777   0010DA  6EDF               	movwf	indf2,c
  2778   0010DC  EF91  F008         	goto	l3471
  2779   0010E0                     l3465:
  2780   0010E0  C031  FFD9         	movff	num_1_read@operation,fsr2l
  2781   0010E4  C032  FFDA         	movff	num_1_read@operation+1,fsr2h
  2782   0010E8  0E2A               	movlw	42
  2783   0010EA  6EDF               	movwf	indf2,c
  2784   0010EC  EF91  F008         	goto	l3471
  2785   0010F0                     l3469:
  2786   0010F0  503B               	movf	num_1_read@temp_value^0,w,c
  2787   0010F2  6E35               	movwf	??_num_1_read^0,c
  2788   0010F4  6A36               	clrf	(??_num_1_read+1)^0,c
  2789                           
  2790                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2791                           ; Switch size 1, requested type "simple"
  2792                           ; Number of cases is 1, Range of values is 0 to 0
  2793                           ; switch strategies available:
  2794                           ; Name         Instructions Cycles
  2795                           ; simple_byte            4     3 (average)
  2796                           ;	Chosen strategy is simple_byte
  2797   0010F6  5036               	movf	(??_num_1_read+1)^0,w,c
  2798   0010F8  0A00               	xorlw	0	; case 0
  2799   0010FA  B4D8               	btfsc	status,2,c
  2800   0010FC  EF82  F008         	goto	l4173
  2801   001100  EF91  F008         	goto	l3471
  2802   001104                     l4173:
  2803                           
  2804                           ; Switch size 1, requested type "simple"
  2805                           ; Number of cases is 3, Range of values is 42 to 45
  2806                           ; switch strategies available:
  2807                           ; Name         Instructions Cycles
  2808                           ; simple_byte           10     6 (average)
  2809                           ;	Chosen strategy is simple_byte
  2810   001104  5035               	movf	??_num_1_read^0,w,c
  2811   001106  0A2A               	xorlw	42	; case 42
  2812   001108  B4D8               	btfsc	status,2,c
  2813   00110A  EF70  F008         	goto	l3465
  2814   00110E  0A01               	xorlw	1	; case 43
  2815   001110  B4D8               	btfsc	status,2,c
  2816   001112  EF60  F008         	goto	l3461
  2817   001116  0A06               	xorlw	6	; case 45
  2818   001118  B4D8               	btfsc	status,2,c
  2819   00111A  EF68  F008         	goto	l3463
  2820   00111E  EF91  F008         	goto	l3471
  2821   001122                     l3471:
  2822                           
  2823                           ;Application.c: 59:                         counter_3++;
  2824   001122  2A39               	incf	num_1_read@counter_3^0,f,c
  2825   001124                     
  2826                           ;Application.c: 60:                         if(counter_3 == 10){
  2827   001124  0E0A               	movlw	10
  2828   001126  1839               	xorwf	num_1_read@counter_3^0,w,c
  2829   001128  A4D8               	btfss	status,2,c
  2830   00112A  EF99  F008         	goto	u2631
  2831   00112E  EF9B  F008         	goto	u2630
  2832   001132                     u2631:
  2833   001132  EF17  F008         	goto	l3441
  2834   001136                     u2630:
  2835   001136  C02B  F00F         	movff	num_1_read@lcd,lcd_4bits_send_char@lcd
  2836   00113A  C02C  F010         	movff	num_1_read@lcd+1,lcd_4bits_send_char@lcd+1
  2837   00113E  C03B  F011         	movff	num_1_read@temp_value,lcd_4bits_send_char@data
  2838   001142  ECF7  F011         	call	_lcd_4bits_send_char	;wreg free
  2839   001146  C02B  F020         	movff	num_1_read@lcd,num_2_read@lcd
  2840   00114A  C02C  F021         	movff	num_1_read@lcd+1,num_2_read@lcd+1
  2841   00114E  C02D  F022         	movff	num_1_read@keypad,num_2_read@keypad
  2842   001152  C02E  F023         	movff	num_1_read@keypad+1,num_2_read@keypad+1
  2843   001156  C033  F024         	movff	num_1_read@str_2,num_2_read@str
  2844   00115A  C034  F025         	movff	num_1_read@str_2+1,num_2_read@str+1
  2845   00115E  EC28  F00B         	call	_num_2_read	;wreg free
  2846   001162  C02F  F001         	movff	num_1_read@str,convert_string_to_numbers@str
  2847   001166  C030  F002         	movff	num_1_read@str+1,convert_string_to_numbers@str+1
  2848   00116A  0E78               	movlw	low _value_1
  2849   00116C  6E03               	movwf	convert_string_to_numbers@value^0,c
  2850   00116E  0E00               	movlw	high _value_1
  2851   001170  6E04               	movwf	(convert_string_to_numbers@value+1)^0,c
  2852   001172  EC8B  F00A         	call	_convert_string_to_numbers	;wreg free
  2853   001176                     
  2854                           ;Application.c: 66:                             ret = convert_string_to_numbers(str_2 , 
      +                          &value_2);
  2855   001176  C033  F001         	movff	num_1_read@str_2,convert_string_to_numbers@str
  2856   00117A  C034  F002         	movff	num_1_read@str_2+1,convert_string_to_numbers@str+1
  2857   00117E  0E77               	movlw	low _value_2
  2858   001180  6E03               	movwf	convert_string_to_numbers@value^0,c
  2859   001182  0E00               	movlw	high _value_2
  2860   001184  6E04               	movwf	(convert_string_to_numbers@value+1)^0,c
  2861   001186  EC8B  F00A         	call	_convert_string_to_numbers	;wreg free
  2862   00118A  6E3A               	movwf	num_1_read@ret^0,c
  2863   00118C  EF2E  F008         	goto	l3445
  2864   001190                     l3491:
  2865   001190  0E3D               	movlw	61
  2866   001192  183B               	xorwf	num_1_read@temp_value^0,w,c
  2867   001194  A4D8               	btfss	status,2,c
  2868   001196  EFCF  F008         	goto	u2641
  2869   00119A  EFD1  F008         	goto	u2640
  2870   00119E                     u2641:
  2871   00119E  EFE2  F008         	goto	l3501
  2872   0011A2                     u2640:
  2873   0011A2                     
  2874                           ;Application.c: 72:                         ret = lcd_4bits_send_string_pos(lcd , str , 
      +                          3 , 1 );
  2875   0011A2  C02B  F019         	movff	num_1_read@lcd,lcd_4bits_send_string_pos@lcd
  2876   0011A6  C02C  F01A         	movff	num_1_read@lcd+1,lcd_4bits_send_string_pos@lcd+1
  2877   0011AA  C02F  F01B         	movff	num_1_read@str,lcd_4bits_send_string_pos@data
  2878   0011AE  C030  F01C         	movff	num_1_read@str+1,lcd_4bits_send_string_pos@data+1
  2879   0011B2  0E03               	movlw	3
  2880   0011B4  6E1D               	movwf	lcd_4bits_send_string_pos@ROW^0,c
  2881   0011B6  0E01               	movlw	1
  2882   0011B8  6E1E               	movwf	lcd_4bits_send_string_pos@COLUMN^0,c
  2883   0011BA  EC6A  F013         	call	_lcd_4bits_send_string_pos	;wreg free
  2884   0011BE  6E3A               	movwf	num_1_read@ret^0,c
  2885   0011C0  EF2E  F008         	goto	l3445
  2886   0011C4                     l3501:
  2887                           
  2888                           ;Application.c: 76:                         counter_3++;
  2889   0011C4  2A39               	incf	num_1_read@counter_3^0,f,c
  2890   0011C6                     
  2891                           ;Application.c: 77:                         if(counter_3 == 5){
  2892   0011C6  0E05               	movlw	5
  2893   0011C8  1839               	xorwf	num_1_read@counter_3^0,w,c
  2894   0011CA  A4D8               	btfss	status,2,c
  2895   0011CC  EFEA  F008         	goto	u2651
  2896   0011D0  EFEC  F008         	goto	u2650
  2897   0011D4                     u2651:
  2898   0011D4  EF03  F009         	goto	l353
  2899   0011D8                     u2650:
  2900   0011D8  C02B  F00F         	movff	num_1_read@lcd,lcd_4bits_send_char@lcd
  2901   0011DC  C02C  F010         	movff	num_1_read@lcd+1,lcd_4bits_send_char@lcd+1
  2902   0011E0  C03B  F011         	movff	num_1_read@temp_value,lcd_4bits_send_char@data
  2903   0011E4  ECF7  F011         	call	_lcd_4bits_send_char	;wreg free
  2904   0011E8                     
  2905                           ;Application.c: 79:                             str[counter_1] = temp_value;
  2906   0011E8  5038               	movf	num_1_read@counter_1^0,w,c
  2907   0011EA  242F               	addwf	num_1_read@str^0,w,c
  2908   0011EC  6ED9               	movwf	fsr2l,c
  2909   0011EE  0E00               	movlw	0
  2910   0011F0  2030               	addwfc	(num_1_read@str+1)^0,w,c
  2911   0011F2  6EDA               	movwf	fsr2h,c
  2912   0011F4  C03B  FFDF         	movff	num_1_read@temp_value,indf2
  2913   0011F8                     
  2914                           ;Application.c: 80:                             counter_1++;
  2915   0011F8  2A38               	incf	num_1_read@counter_1^0,f,c
  2916   0011FA                     
  2917                           ;Application.c: 81:                             temp_value = 0;
  2918   0011FA  0E00               	movlw	0
  2919   0011FC  6E3B               	movwf	num_1_read@temp_value^0,c
  2920   0011FE                     
  2921                           ;Application.c: 82:                             counter_3 = 0;
  2922   0011FE  0E00               	movlw	0
  2923   001200  6E39               	movwf	num_1_read@counter_3^0,c
  2924   001202  EF17  F008         	goto	l3441
  2925   001206                     l353:
  2926   001206  EF17  F008         	goto	l3441
  2927   00120A                     l351:
  2928   00120A  0012               	return		;funcret
  2929   00120C                     __end_of_num_1_read:
  2930                           	callstack 0
  2931                           
  2932 ;; *************** function _num_2_read *****************
  2933 ;; Defined at:
  2934 ;;		line 97 in file "Application.c"
  2935 ;; Parameters:    Size  Location     Type
  2936 ;;  lcd             2   31[COMRAM] PTR struct .
  2937 ;;		 -> lcd_1(6), 
  2938 ;;  keypad          2   33[COMRAM] PTR struct .
  2939 ;;		 -> keypad_1(8), 
  2940 ;;  str             2   35[COMRAM] PTR unsigned char 
  2941 ;;		 -> str__2(4), 
  2942 ;; Auto vars:     Size  Location     Type
  2943 ;;  temp_value      1   41[COMRAM] unsigned char 
  2944 ;;  ret             1   40[COMRAM] unsigned char 
  2945 ;;  counter_3       1   39[COMRAM] unsigned char 
  2946 ;;  counter_1       1   38[COMRAM] unsigned char 
  2947 ;;  counter_2       1   37[COMRAM] unsigned char 
  2948 ;; Return value:  Size  Location     Type
  2949 ;;                  1    wreg      unsigned char 
  2950 ;; Registers used:
  2951 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2952 ;; Tracked objects:
  2953 ;;		On entry : 0/0
  2954 ;;		On exit  : 0/0
  2955 ;;		Unchanged: 0/0
  2956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2957 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2958 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2960 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2961 ;;Total ram usage:       11 bytes
  2962 ;; Hardware stack levels used: 1
  2963 ;; Hardware stack levels required when called: 5
  2964 ;; This function calls:
  2965 ;;		_keypad_read_value
  2966 ;;		_lcd_4bits_send_char
  2967 ;;		_lcd_4bits_send_string_pos
  2968 ;; This function is called by:
  2969 ;;		_num_1_read
  2970 ;; This function uses a non-reentrant model
  2971 ;;
  2972                           
  2973                           	psect	text16
  2974   001650                     __ptext16:
  2975                           	callstack 0
  2976   001650                     _num_2_read:
  2977                           	callstack 24
  2978   001650                     
  2979                           ;Application.c: 99:     uint8 counter_1 = 0;
  2980   001650  0E00               	movlw	0
  2981   001652  6E27               	movwf	num_2_read@counter_1^0,c
  2982                           
  2983                           ;Application.c: 100:     uint8 counter_2 = 0;
  2984   001654  0E00               	movlw	0
  2985   001656  6E26               	movwf	num_2_read@counter_2^0,c
  2986                           
  2987                           ;Application.c: 101:     uint8 counter_3 = 0;
  2988   001658  0E00               	movlw	0
  2989   00165A  6E28               	movwf	num_2_read@counter_3^0,c
  2990                           
  2991                           ;Application.c: 102:     uint8 temp_value = 0;
  2992   00165C  0E00               	movlw	0
  2993   00165E  6E2A               	movwf	num_2_read@temp_value^0,c
  2994   001660                     l3267:
  2995                           
  2996                           ;Application.c: 104:         if(counter_1 > 3){
  2997   001660  0E03               	movlw	3
  2998   001662  6427               	cpfsgt	num_2_read@counter_1^0,c
  2999   001664  EF36  F00B         	goto	u2421
  3000   001668  EF38  F00B         	goto	u2420
  3001   00166C                     u2421:
  3002   00166C  EF4A  F00B         	goto	l3277
  3003   001670                     u2420:
  3004   001670                     
  3005                           ;Application.c: 105:             ret = lcd_4bits_send_string_pos(lcd , "error" , 3 , 1 )
      +                          ;
  3006   001670  C020  F019         	movff	num_2_read@lcd,lcd_4bits_send_string_pos@lcd
  3007   001674  C021  F01A         	movff	num_2_read@lcd+1,lcd_4bits_send_string_pos@lcd+1
  3008   001678  0E11               	movlw	low STR_1
  3009   00167A  6E1B               	movwf	lcd_4bits_send_string_pos@data^0,c
  3010   00167C  0E10               	movlw	high STR_1
  3011   00167E  6E1C               	movwf	(lcd_4bits_send_string_pos@data+1)^0,c
  3012   001680  0E03               	movlw	3
  3013   001682  6E1D               	movwf	lcd_4bits_send_string_pos@ROW^0,c
  3014   001684  0E01               	movlw	1
  3015   001686  6E1E               	movwf	lcd_4bits_send_string_pos@COLUMN^0,c
  3016   001688  EC6A  F013         	call	_lcd_4bits_send_string_pos	;wreg free
  3017   00168C  6E29               	movwf	num_2_read@ret^0,c
  3018   00168E                     l3271:
  3019                           
  3020                           ;Application.c: 106:             return ret;
  3021   00168E  5029               	movf	num_2_read@ret^0,w,c
  3022   001690  EFC1  F00B         	goto	l374
  3023   001694                     l3277:
  3024                           
  3025                           ;Application.c: 110:             ret = keypad_read_value(keypad , &temp_value);
  3026   001694  C022  F00E         	movff	num_2_read@keypad,keypad_read_value@key_pad
  3027   001698  C023  F00F         	movff	num_2_read@keypad+1,keypad_read_value@key_pad+1
  3028   00169C  0E2A               	movlw	low num_2_read@temp_value
  3029   00169E  6E10               	movwf	keypad_read_value@value^0,c
  3030   0016A0  0E00               	movlw	high num_2_read@temp_value
  3031   0016A2  6E11               	movwf	(keypad_read_value@value+1)^0,c
  3032   0016A4  EC7B  F00E         	call	_keypad_read_value	;wreg free
  3033   0016A8  6E29               	movwf	num_2_read@ret^0,c
  3034   0016AA                     
  3035                           ;Application.c: 111:                 if(temp_value != 0){
  3036   0016AA  502A               	movf	num_2_read@temp_value^0,w,c
  3037   0016AC  B4D8               	btfsc	status,2,c
  3038   0016AE  EF5B  F00B         	goto	u2431
  3039   0016B2  EF5D  F00B         	goto	u2430
  3040   0016B6                     u2431:
  3041   0016B6  EF30  F00B         	goto	l3267
  3042   0016BA                     u2430:
  3043   0016BA                     
  3044                           ;Application.c: 112:                     if((temp_value == '+') || (temp_value == '*') |
      +                          | (temp_value == '-')){
  3045   0016BA  0E2B               	movlw	43
  3046   0016BC  182A               	xorwf	num_2_read@temp_value^0,w,c
  3047   0016BE  B4D8               	btfsc	status,2,c
  3048   0016C0  EF64  F00B         	goto	u2441
  3049   0016C4  EF66  F00B         	goto	u2440
  3050   0016C8                     u2441:
  3051   0016C8  EF78  F00B         	goto	l3287
  3052   0016CC                     u2440:
  3053   0016CC  0E2A               	movlw	42
  3054   0016CE  182A               	xorwf	num_2_read@temp_value^0,w,c
  3055   0016D0  B4D8               	btfsc	status,2,c
  3056   0016D2  EF6D  F00B         	goto	u2451
  3057   0016D6  EF6F  F00B         	goto	u2450
  3058   0016DA                     u2451:
  3059   0016DA  EF78  F00B         	goto	l3287
  3060   0016DE                     u2450:
  3061   0016DE  0E2D               	movlw	45
  3062   0016E0  182A               	xorwf	num_2_read@temp_value^0,w,c
  3063   0016E2  A4D8               	btfss	status,2,c
  3064   0016E4  EF76  F00B         	goto	u2461
  3065   0016E8  EF78  F00B         	goto	u2460
  3066   0016EC                     u2461:
  3067   0016EC  EF93  F00B         	goto	l3301
  3068   0016F0                     u2460:
  3069   0016F0                     l3287:
  3070                           
  3071                           ;Application.c: 113:                         counter_3++;
  3072   0016F0  2A28               	incf	num_2_read@counter_3^0,f,c
  3073   0016F2                     
  3074                           ;Application.c: 114:                         if(counter_3 == 10){
  3075   0016F2  0E0A               	movlw	10
  3076   0016F4  1828               	xorwf	num_2_read@counter_3^0,w,c
  3077   0016F6  A4D8               	btfss	status,2,c
  3078   0016F8  EF80  F00B         	goto	u2471
  3079   0016FC  EF82  F00B         	goto	u2470
  3080   001700                     u2471:
  3081   001700  EF30  F00B         	goto	l3267
  3082   001704                     u2470:
  3083   001704                     
  3084                           ;Application.c: 115:                             ret = lcd_4bits_send_string_pos(lcd , "
      +                          error" , 3 , 1 );
  3085   001704  C020  F019         	movff	num_2_read@lcd,lcd_4bits_send_string_pos@lcd
  3086   001708  C021  F01A         	movff	num_2_read@lcd+1,lcd_4bits_send_string_pos@lcd+1
  3087   00170C  0E11               	movlw	low STR_1
  3088   00170E  6E1B               	movwf	lcd_4bits_send_string_pos@data^0,c
  3089   001710  0E10               	movlw	high STR_1
  3090   001712  6E1C               	movwf	(lcd_4bits_send_string_pos@data+1)^0,c
  3091   001714  0E03               	movlw	3
  3092   001716  6E1D               	movwf	lcd_4bits_send_string_pos@ROW^0,c
  3093   001718  0E01               	movlw	1
  3094   00171A  6E1E               	movwf	lcd_4bits_send_string_pos@COLUMN^0,c
  3095   00171C  EC6A  F013         	call	_lcd_4bits_send_string_pos	;wreg free
  3096   001720  6E29               	movwf	num_2_read@ret^0,c
  3097   001722  EF47  F00B         	goto	l3271
  3098   001726                     l3301:
  3099   001726  0E3D               	movlw	61
  3100   001728  182A               	xorwf	num_2_read@temp_value^0,w,c
  3101   00172A  A4D8               	btfss	status,2,c
  3102   00172C  EF9A  F00B         	goto	u2481
  3103   001730  EF9C  F00B         	goto	u2480
  3104   001734                     u2481:
  3105   001734  EF9E  F00B         	goto	l3309
  3106   001738                     u2480:
  3107   001738  EF47  F00B         	goto	l3271
  3108   00173C                     l3309:
  3109                           
  3110                           ;Application.c: 125:                         counter_3++;
  3111   00173C  2A28               	incf	num_2_read@counter_3^0,f,c
  3112   00173E                     
  3113                           ;Application.c: 126:                         if(counter_3 == 10){
  3114   00173E  0E0A               	movlw	10
  3115   001740  1828               	xorwf	num_2_read@counter_3^0,w,c
  3116   001742  A4D8               	btfss	status,2,c
  3117   001744  EFA6  F00B         	goto	u2491
  3118   001748  EFA8  F00B         	goto	u2490
  3119   00174C                     u2491:
  3120   00174C  EFBF  F00B         	goto	l376
  3121   001750                     u2490:
  3122   001750  C020  F00F         	movff	num_2_read@lcd,lcd_4bits_send_char@lcd
  3123   001754  C021  F010         	movff	num_2_read@lcd+1,lcd_4bits_send_char@lcd+1
  3124   001758  C02A  F011         	movff	num_2_read@temp_value,lcd_4bits_send_char@data
  3125   00175C  ECF7  F011         	call	_lcd_4bits_send_char	;wreg free
  3126   001760                     
  3127                           ;Application.c: 128:                             str[counter_1] = temp_value;
  3128   001760  5027               	movf	num_2_read@counter_1^0,w,c
  3129   001762  2424               	addwf	num_2_read@str^0,w,c
  3130   001764  6ED9               	movwf	fsr2l,c
  3131   001766  0E00               	movlw	0
  3132   001768  2025               	addwfc	(num_2_read@str+1)^0,w,c
  3133   00176A  6EDA               	movwf	fsr2h,c
  3134   00176C  C02A  FFDF         	movff	num_2_read@temp_value,indf2
  3135   001770                     
  3136                           ;Application.c: 129:                             counter_1++;
  3137   001770  2A27               	incf	num_2_read@counter_1^0,f,c
  3138   001772                     
  3139                           ;Application.c: 130:                             temp_value = 0;
  3140   001772  0E00               	movlw	0
  3141   001774  6E2A               	movwf	num_2_read@temp_value^0,c
  3142   001776                     
  3143                           ;Application.c: 131:                             counter_3 = 0;
  3144   001776  0E00               	movlw	0
  3145   001778  6E28               	movwf	num_2_read@counter_3^0,c
  3146   00177A  EF30  F00B         	goto	l3267
  3147   00177E                     l376:
  3148   00177E  EF30  F00B         	goto	l3267
  3149   001782                     l374:
  3150   001782  0012               	return		;funcret
  3151   001784                     __end_of_num_2_read:
  3152                           	callstack 0
  3153                           
  3154 ;; *************** function _lcd_4bits_send_string_pos *****************
  3155 ;; Defined at:
  3156 ;;		line 111 in file "ECU_Layer/LCD/Lcd.c"
  3157 ;; Parameters:    Size  Location     Type
  3158 ;;  lcd             2   24[COMRAM] PTR const struct .
  3159 ;;		 -> lcd_1(6), 
  3160 ;;  data            2   26[COMRAM] PTR unsigned char 
  3161 ;;		 -> STR_3(6), STR_2(6), STR_1(6), result_1(4), 
  3162 ;;		 -> str__1(4), 
  3163 ;;  ROW             1   28[COMRAM] unsigned char 
  3164 ;;  COLUMN          1   29[COMRAM] unsigned char 
  3165 ;; Auto vars:     Size  Location     Type
  3166 ;;  ret             1   30[COMRAM] unsigned char 
  3167 ;; Return value:  Size  Location     Type
  3168 ;;                  1    wreg      unsigned char 
  3169 ;; Registers used:
  3170 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3171 ;; Tracked objects:
  3172 ;;		On entry : 0/0
  3173 ;;		On exit  : 0/0
  3174 ;;		Unchanged: 0/0
  3175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3176 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3177 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3179 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3180 ;;Total ram usage:        7 bytes
  3181 ;; Hardware stack levels used: 1
  3182 ;; Hardware stack levels required when called: 4
  3183 ;; This function calls:
  3184 ;;		_lcd_4bits_send_string
  3185 ;;		_lcd_4bits_set_cursor
  3186 ;; This function is called by:
  3187 ;;		_num_1_read
  3188 ;;		_num_2_read
  3189 ;;		_print_result
  3190 ;; This function uses a non-reentrant model
  3191 ;;
  3192                           
  3193                           	psect	text17
  3194   0026D4                     __ptext17:
  3195                           	callstack 0
  3196   0026D4                     _lcd_4bits_send_string_pos:
  3197                           	callstack 25
  3198   0026D4                     
  3199                           ;ECU_Layer/LCD/Lcd.c: 115:     if(lcd == ((void*)0)){
  3200   0026D4  5019               	movf	lcd_4bits_send_string_pos@lcd^0,w,c
  3201   0026D6  101A               	iorwf	(lcd_4bits_send_string_pos@lcd+1)^0,w,c
  3202   0026D8  A4D8               	btfss	status,2,c
  3203   0026DA  EF71  F013         	goto	u2331
  3204   0026DE  EF73  F013         	goto	u2330
  3205   0026E2                     u2331:
  3206   0026E2  EF77  F013         	goto	l3189
  3207   0026E6                     u2330:
  3208   0026E6                     
  3209                           ;ECU_Layer/LCD/Lcd.c: 116:         ret = (Std_ReturnType)0x01;
  3210   0026E6  0E01               	movlw	1
  3211   0026E8  6E1F               	movwf	lcd_4bits_send_string_pos@ret^0,c
  3212                           
  3213                           ;ECU_Layer/LCD/Lcd.c: 117:     }
  3214   0026EA  EF8C  F013         	goto	l3193
  3215   0026EE                     l3189:
  3216   0026EE  C019  F013         	movff	lcd_4bits_send_string_pos@lcd,lcd_4bits_set_cursor@lcd
  3217   0026F2  C01A  F014         	movff	lcd_4bits_send_string_pos@lcd+1,lcd_4bits_set_cursor@lcd+1
  3218   0026F6  C01D  F015         	movff	lcd_4bits_send_string_pos@ROW,lcd_4bits_set_cursor@ROW
  3219   0026FA  C01E  F016         	movff	lcd_4bits_send_string_pos@COLUMN,lcd_4bits_set_cursor@COLUMN
  3220   0026FE  EC11  F010         	call	_lcd_4bits_set_cursor	;wreg free
  3221   002702                     
  3222                           ;ECU_Layer/LCD/Lcd.c: 120:         ret = lcd_4bits_send_string(lcd , data);
  3223   002702  C019  F013         	movff	lcd_4bits_send_string_pos@lcd,lcd_4bits_send_string@lcd
  3224   002706  C01A  F014         	movff	lcd_4bits_send_string_pos@lcd+1,lcd_4bits_send_string@lcd+1
  3225   00270A  C01B  F015         	movff	lcd_4bits_send_string_pos@data,lcd_4bits_send_string@data
  3226   00270E  C01C  F016         	movff	lcd_4bits_send_string_pos@data+1,lcd_4bits_send_string@data+1
  3227   002712  ECB4  F010         	call	_lcd_4bits_send_string	;wreg free
  3228   002716  6E1F               	movwf	lcd_4bits_send_string_pos@ret^0,c
  3229   002718                     l3193:
  3230                           
  3231                           ;ECU_Layer/LCD/Lcd.c: 122:     return ret;
  3232   002718  501F               	movf	lcd_4bits_send_string_pos@ret^0,w,c
  3233   00271A  0012               	return		;funcret
  3234   00271C                     __end_of_lcd_4bits_send_string_pos:
  3235                           	callstack 0
  3236                           
  3237 ;; *************** function _lcd_4bits_set_cursor *****************
  3238 ;; Defined at:
  3239 ;;		line 144 in file "ECU_Layer/LCD/Lcd.c"
  3240 ;; Parameters:    Size  Location     Type
  3241 ;;  lcd             2   18[COMRAM] PTR const struct .
  3242 ;;		 -> lcd_1(6), 
  3243 ;;  ROW             1   20[COMRAM] unsigned char 
  3244 ;;  COLUMN          1   21[COMRAM] unsigned char 
  3245 ;; Auto vars:     Size  Location     Type
  3246 ;;  ret             1    0        unsigned char 
  3247 ;; Return value:  Size  Location     Type
  3248 ;;                  1    wreg      unsigned char 
  3249 ;; Registers used:
  3250 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3251 ;; Tracked objects:
  3252 ;;		On entry : 0/0
  3253 ;;		On exit  : 0/0
  3254 ;;		Unchanged: 0/0
  3255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3256 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3258 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3259 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3260 ;;Total ram usage:        6 bytes
  3261 ;; Hardware stack levels used: 1
  3262 ;; Hardware stack levels required when called: 3
  3263 ;; This function calls:
  3264 ;;		_lcd_4bits_send_command
  3265 ;; This function is called by:
  3266 ;;		_lcd_4bits_send_string_pos
  3267 ;;		_lcd_4bits_send_char_pos
  3268 ;; This function uses a non-reentrant model
  3269 ;;
  3270                           
  3271                           	psect	text18
  3272   002022                     __ptext18:
  3273                           	callstack 0
  3274   002022                     _lcd_4bits_set_cursor:
  3275                           	callstack 25
  3276   002022                     
  3277                           ;ECU_Layer/LCD/Lcd.c: 148:     if(lcd == ((void*)0)){
  3278   002022  5013               	movf	lcd_4bits_set_cursor@lcd^0,w,c
  3279   002024  1014               	iorwf	(lcd_4bits_set_cursor@lcd+1)^0,w,c
  3280   002026  A4D8               	btfss	status,2,c
  3281   002028  EF18  F010         	goto	u2121
  3282   00202C  EF1A  F010         	goto	u2120
  3283   002030                     u2121:
  3284   002030  EF48  F010         	goto	l3055
  3285   002034                     u2120:
  3286   002034                     
  3287                           ;ECU_Layer/LCD/Lcd.c: 150:     }
  3288   002034  EF65  F010         	goto	l3057
  3289   002038                     l3047:
  3290   002038  C013  F00F         	movff	lcd_4bits_set_cursor@lcd,lcd_4bits_send_command@lcd
  3291   00203C  C014  F010         	movff	lcd_4bits_set_cursor@lcd+1,lcd_4bits_send_command@lcd+1
  3292   002040  5016               	movf	lcd_4bits_set_cursor@COLUMN^0,w,c
  3293   002042  0F80               	addlw	128
  3294   002044  6E11               	movwf	lcd_4bits_send_command@command^0,c
  3295   002046  EC32  F012         	call	_lcd_4bits_send_command	;wreg free
  3296   00204A  EF65  F010         	goto	l3057
  3297   00204E                     l3049:
  3298   00204E  C013  F00F         	movff	lcd_4bits_set_cursor@lcd,lcd_4bits_send_command@lcd
  3299   002052  C014  F010         	movff	lcd_4bits_set_cursor@lcd+1,lcd_4bits_send_command@lcd+1
  3300   002056  5016               	movf	lcd_4bits_set_cursor@COLUMN^0,w,c
  3301   002058  0FC0               	addlw	192
  3302   00205A  6E11               	movwf	lcd_4bits_send_command@command^0,c
  3303   00205C  EC32  F012         	call	_lcd_4bits_send_command	;wreg free
  3304   002060  EF65  F010         	goto	l3057
  3305   002064                     l3051:
  3306   002064  C013  F00F         	movff	lcd_4bits_set_cursor@lcd,lcd_4bits_send_command@lcd
  3307   002068  C014  F010         	movff	lcd_4bits_set_cursor@lcd+1,lcd_4bits_send_command@lcd+1
  3308   00206C  5016               	movf	lcd_4bits_set_cursor@COLUMN^0,w,c
  3309   00206E  0F94               	addlw	148
  3310   002070  6E11               	movwf	lcd_4bits_send_command@command^0,c
  3311   002072  EC32  F012         	call	_lcd_4bits_send_command	;wreg free
  3312   002076  EF65  F010         	goto	l3057
  3313   00207A                     l3053:
  3314   00207A  C013  F00F         	movff	lcd_4bits_set_cursor@lcd,lcd_4bits_send_command@lcd
  3315   00207E  C014  F010         	movff	lcd_4bits_set_cursor@lcd+1,lcd_4bits_send_command@lcd+1
  3316   002082  5016               	movf	lcd_4bits_set_cursor@COLUMN^0,w,c
  3317   002084  0FD4               	addlw	212
  3318   002086  6E11               	movwf	lcd_4bits_send_command@command^0,c
  3319   002088  EC32  F012         	call	_lcd_4bits_send_command	;wreg free
  3320   00208C  EF65  F010         	goto	l3057
  3321   002090                     l3055:
  3322   002090  5015               	movf	lcd_4bits_set_cursor@ROW^0,w,c
  3323   002092  6E17               	movwf	??_lcd_4bits_set_cursor^0,c
  3324   002094  6A18               	clrf	(??_lcd_4bits_set_cursor+1)^0,c
  3325                           
  3326                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3327                           ; Switch size 1, requested type "simple"
  3328                           ; Number of cases is 1, Range of values is 0 to 0
  3329                           ; switch strategies available:
  3330                           ; Name         Instructions Cycles
  3331                           ; simple_byte            4     3 (average)
  3332                           ;	Chosen strategy is simple_byte
  3333   002096  5018               	movf	(??_lcd_4bits_set_cursor+1)^0,w,c
  3334   002098  0A00               	xorlw	0	; case 0
  3335   00209A  B4D8               	btfsc	status,2,c
  3336   00209C  EF52  F010         	goto	l4175
  3337   0020A0  EF65  F010         	goto	l3057
  3338   0020A4                     l4175:
  3339                           
  3340                           ; Switch size 1, requested type "simple"
  3341                           ; Number of cases is 4, Range of values is 1 to 4
  3342                           ; switch strategies available:
  3343                           ; Name         Instructions Cycles
  3344                           ; simple_byte           13     7 (average)
  3345                           ;	Chosen strategy is simple_byte
  3346   0020A4  5017               	movf	??_lcd_4bits_set_cursor^0,w,c
  3347   0020A6  0A01               	xorlw	1	; case 1
  3348   0020A8  B4D8               	btfsc	status,2,c
  3349   0020AA  EF1C  F010         	goto	l3047
  3350   0020AE  0A03               	xorlw	3	; case 2
  3351   0020B0  B4D8               	btfsc	status,2,c
  3352   0020B2  EF27  F010         	goto	l3049
  3353   0020B6  0A01               	xorlw	1	; case 3
  3354   0020B8  B4D8               	btfsc	status,2,c
  3355   0020BA  EF32  F010         	goto	l3051
  3356   0020BE  0A07               	xorlw	7	; case 4
  3357   0020C0  B4D8               	btfsc	status,2,c
  3358   0020C2  EF3D  F010         	goto	l3053
  3359   0020C6  EF65  F010         	goto	l3057
  3360   0020CA                     l3057:
  3361                           
  3362                           ;ECU_Layer/LCD/Lcd.c: 160:     return ret;
  3363   0020CA  0E01               	movlw	1
  3364   0020CC  0012               	return		;funcret
  3365   0020CE                     __end_of_lcd_4bits_set_cursor:
  3366                           	callstack 0
  3367                           
  3368 ;; *************** function _lcd_4bits_send_string *****************
  3369 ;; Defined at:
  3370 ;;		line 97 in file "ECU_Layer/LCD/Lcd.c"
  3371 ;; Parameters:    Size  Location     Type
  3372 ;;  lcd             2   18[COMRAM] PTR const struct .
  3373 ;;		 -> lcd_1(6), 
  3374 ;;  data            2   20[COMRAM] PTR unsigned char 
  3375 ;;		 -> STR_3(6), STR_2(6), STR_1(6), result_1(4), 
  3376 ;;		 -> str__1(4), 
  3377 ;; Auto vars:     Size  Location     Type
  3378 ;;  ret             1   22[COMRAM] unsigned char 
  3379 ;; Return value:  Size  Location     Type
  3380 ;;                  1    wreg      unsigned char 
  3381 ;; Registers used:
  3382 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3383 ;; Tracked objects:
  3384 ;;		On entry : 0/0
  3385 ;;		On exit  : 0/0
  3386 ;;		Unchanged: 0/0
  3387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3388 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3389 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3391 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3392 ;;Total ram usage:        5 bytes
  3393 ;; Hardware stack levels used: 1
  3394 ;; Hardware stack levels required when called: 3
  3395 ;; This function calls:
  3396 ;;		_lcd_4bits_send_char
  3397 ;; This function is called by:
  3398 ;;		_lcd_4bits_send_string_pos
  3399 ;; This function uses a non-reentrant model
  3400 ;;
  3401                           
  3402                           	psect	text19
  3403   002168                     __ptext19:
  3404                           	callstack 0
  3405   002168                     _lcd_4bits_send_string:
  3406                           	callstack 25
  3407   002168                     
  3408                           ;ECU_Layer/LCD/Lcd.c: 99:     Std_ReturnType ret = (Std_ReturnType)0x01;
  3409   002168  0E01               	movlw	1
  3410   00216A  6E17               	movwf	lcd_4bits_send_string@ret^0,c
  3411   00216C                     
  3412                           ;ECU_Layer/LCD/Lcd.c: 100:     if(lcd == ((void*)0)){
  3413   00216C  5013               	movf	lcd_4bits_send_string@lcd^0,w,c
  3414   00216E  1014               	iorwf	(lcd_4bits_send_string@lcd+1)^0,w,c
  3415   002170  A4D8               	btfss	status,2,c
  3416   002172  EFBD  F010         	goto	u2131
  3417   002176  EFBF  F010         	goto	u2130
  3418   00217A                     u2131:
  3419   00217A  EFDE  F010         	goto	l3075
  3420   00217E                     u2130:
  3421   00217E                     
  3422                           ;ECU_Layer/LCD/Lcd.c: 101:         ret = (Std_ReturnType)0x01;
  3423   00217E  0E01               	movlw	1
  3424   002180  6E17               	movwf	lcd_4bits_send_string@ret^0,c
  3425                           
  3426                           ;ECU_Layer/LCD/Lcd.c: 102:     }
  3427   002182  EFF7  F010         	goto	l3077
  3428   002186                     l3071:
  3429                           
  3430                           ;ECU_Layer/LCD/Lcd.c: 105:             ret = lcd_4bits_send_char(lcd , *data++);
  3431   002186  C013  F00F         	movff	lcd_4bits_send_string@lcd,lcd_4bits_send_char@lcd
  3432   00218A  C014  F010         	movff	lcd_4bits_send_string@lcd+1,lcd_4bits_send_char@lcd+1
  3433   00218E  C015  FFF6         	movff	lcd_4bits_send_string@data,tblptrl
  3434   002192  C016  FFF7         	movff	lcd_4bits_send_string@data+1,tblptrh
  3435   002196  0E00               	movlw	low (__smallconst shr (0+16))
  3436   002198  6EF8               	movwf	tblptru,c
  3437   00219A  0E0F               	movlw	(high __ramtop+-1)
  3438   00219C  64F7               	cpfsgt	tblptrh,c
  3439   00219E  D003               	bra	u2147
  3440   0021A0  0008               	tblrd		*
  3441   0021A2  50F5               	movf	tablat,w,c
  3442   0021A4  D005               	bra	u2140
  3443   0021A6                     u2147:
  3444   0021A6  CFF6 FFE9          	movff	tblptrl,fsr0l
  3445   0021AA  CFF7 FFEA          	movff	tblptrh,fsr0h
  3446   0021AE  50EF               	movf	indf0,w,c
  3447   0021B0                     u2140:
  3448   0021B0  6E11               	movwf	lcd_4bits_send_char@data^0,c
  3449   0021B2  ECF7  F011         	call	_lcd_4bits_send_char	;wreg free
  3450   0021B6  6E17               	movwf	lcd_4bits_send_string@ret^0,c
  3451   0021B8  4A15               	infsnz	lcd_4bits_send_string@data^0,f,c
  3452   0021BA  2A16               	incf	(lcd_4bits_send_string@data+1)^0,f,c
  3453   0021BC                     l3075:
  3454                           
  3455                           ;ECU_Layer/LCD/Lcd.c: 104:         while(*data){
  3456   0021BC  C015  FFF6         	movff	lcd_4bits_send_string@data,tblptrl
  3457   0021C0  C016  FFF7         	movff	lcd_4bits_send_string@data+1,tblptrh
  3458   0021C4  0E00               	movlw	low (__smallconst shr (0+16))
  3459   0021C6  6EF8               	movwf	tblptru,c
  3460   0021C8  0E0F               	movlw	(high __ramtop+-1)
  3461   0021CA  64F7               	cpfsgt	tblptrh,c
  3462   0021CC  D003               	bra	u2157
  3463   0021CE  0008               	tblrd		*
  3464   0021D0  50F5               	movf	tablat,w,c
  3465   0021D2  D005               	bra	u2150
  3466   0021D4                     u2157:
  3467   0021D4  CFF6 FFE9          	movff	tblptrl,fsr0l
  3468   0021D8  CFF7 FFEA          	movff	tblptrh,fsr0h
  3469   0021DC  50EF               	movf	indf0,w,c
  3470   0021DE                     u2150:
  3471   0021DE  0900               	iorlw	0
  3472   0021E0  A4D8               	btfss	status,2,c
  3473   0021E2  EFF5  F010         	goto	u2161
  3474   0021E6  EFF7  F010         	goto	u2160
  3475   0021EA                     u2161:
  3476   0021EA  EFC3  F010         	goto	l3071
  3477   0021EE                     u2160:
  3478   0021EE                     l3077:
  3479                           
  3480                           ;ECU_Layer/LCD/Lcd.c: 108:     return ret;
  3481   0021EE  5017               	movf	lcd_4bits_send_string@ret^0,w,c
  3482   0021F0  0012               	return		;funcret
  3483   0021F2                     __end_of_lcd_4bits_send_string:
  3484                           	callstack 0
  3485                           
  3486 ;; *************** function _lcd_4bits_send_char *****************
  3487 ;; Defined at:
  3488 ;;		line 66 in file "ECU_Layer/LCD/Lcd.c"
  3489 ;; Parameters:    Size  Location     Type
  3490 ;;  lcd             2   14[COMRAM] PTR const struct .
  3491 ;;		 -> lcd_1(6), 
  3492 ;;  data            1   16[COMRAM] unsigned char 
  3493 ;; Auto vars:     Size  Location     Type
  3494 ;;  ret             1   17[COMRAM] unsigned char 
  3495 ;; Return value:  Size  Location     Type
  3496 ;;                  1    wreg      unsigned char 
  3497 ;; Registers used:
  3498 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3499 ;; Tracked objects:
  3500 ;;		On entry : 0/0
  3501 ;;		On exit  : 0/0
  3502 ;;		Unchanged: 0/0
  3503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3504 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3505 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3507 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3508 ;;Total ram usage:        4 bytes
  3509 ;; Hardware stack levels used: 1
  3510 ;; Hardware stack levels required when called: 2
  3511 ;; This function calls:
  3512 ;;		_enable_pin_4bits
  3513 ;;		_gpio_pin_write_logic
  3514 ;;		_send_4bits
  3515 ;; This function is called by:
  3516 ;;		_num_1_read
  3517 ;;		_num_2_read
  3518 ;;		_lcd_4bits_send_string
  3519 ;;		_lcd_4bits_send_char_pos
  3520 ;;		_lcd_4bits_send_custom_char
  3521 ;; This function uses a non-reentrant model
  3522 ;;
  3523                           
  3524                           	psect	text20
  3525   0023EE                     __ptext20:
  3526                           	callstack 0
  3527   0023EE                     _lcd_4bits_send_char:
  3528                           	callstack 25
  3529   0023EE                     
  3530                           ;ECU_Layer/LCD/Lcd.c: 70:     if(lcd == ((void*)0)){
  3531   0023EE  500F               	movf	lcd_4bits_send_char@lcd^0,w,c
  3532   0023F0  1010               	iorwf	(lcd_4bits_send_char@lcd+1)^0,w,c
  3533   0023F2  A4D8               	btfss	status,2,c
  3534   0023F4  EFFE  F011         	goto	u2021
  3535   0023F8  EF00  F012         	goto	u2020
  3536   0023FC                     u2021:
  3537   0023FC  EF04  F012         	goto	l2957
  3538   002400                     u2020:
  3539   002400                     
  3540                           ;ECU_Layer/LCD/Lcd.c: 71:         ret = (Std_ReturnType)0x01;
  3541   002400  0E01               	movlw	1
  3542   002402  6E12               	movwf	lcd_4bits_send_char@ret^0,c
  3543                           
  3544                           ;ECU_Layer/LCD/Lcd.c: 72:     }
  3545   002404  EF30  F012         	goto	l2959
  3546   002408                     l2957:
  3547                           
  3548                           ;ECU_Layer/LCD/Lcd.c: 74:         ret = gpio_pin_write_logic(&(lcd->RS_REG), GPIO_HIGH);
  3549   002408  0E04               	movlw	4
  3550   00240A  240F               	addwf	lcd_4bits_send_char@lcd^0,w,c
  3551   00240C  6E01               	movwf	gpio_pin_write_logic@str^0,c
  3552   00240E  0E00               	movlw	0
  3553   002410  2010               	addwfc	(lcd_4bits_send_char@lcd+1)^0,w,c
  3554   002412  6E02               	movwf	(gpio_pin_write_logic@str+1)^0,c
  3555   002414  0E01               	movlw	1
  3556   002416  6E03               	movwf	gpio_pin_write_logic@LOG^0,c
  3557   002418  ECE3  F00C         	call	_gpio_pin_write_logic	;wreg free
  3558   00241C  6E12               	movwf	lcd_4bits_send_char@ret^0,c
  3559                           
  3560                           ;ECU_Layer/LCD/Lcd.c: 75:         ret = send_4bits(lcd , data >> 4 );
  3561   00241E  C00F  F00A         	movff	lcd_4bits_send_char@lcd,send_4bits@lcd
  3562   002422  C010  F00B         	movff	lcd_4bits_send_char@lcd+1,send_4bits@lcd+1
  3563   002426  3811               	swapf	lcd_4bits_send_char@data^0,w,c
  3564   002428  0B0F               	andlw	15
  3565   00242A  6E0C               	movwf	send_4bits@command^0,c
  3566   00242C  ECF9  F010         	call	_send_4bits	;wreg free
  3567   002430  6E12               	movwf	lcd_4bits_send_char@ret^0,c
  3568                           
  3569                           ;ECU_Layer/LCD/Lcd.c: 76:         ret = enable_pin_4bits(lcd);
  3570   002432  C00F  F00A         	movff	lcd_4bits_send_char@lcd,enable_pin_4bits@lcd
  3571   002436  C010  F00B         	movff	lcd_4bits_send_char@lcd+1,enable_pin_4bits@lcd+1
  3572   00243A  ECA1  F012         	call	_enable_pin_4bits	;wreg free
  3573   00243E  6E12               	movwf	lcd_4bits_send_char@ret^0,c
  3574                           
  3575                           ;ECU_Layer/LCD/Lcd.c: 77:         ret = send_4bits(lcd , data);
  3576   002440  C00F  F00A         	movff	lcd_4bits_send_char@lcd,send_4bits@lcd
  3577   002444  C010  F00B         	movff	lcd_4bits_send_char@lcd+1,send_4bits@lcd+1
  3578   002448  C011  F00C         	movff	lcd_4bits_send_char@data,send_4bits@command
  3579   00244C  ECF9  F010         	call	_send_4bits	;wreg free
  3580   002450  6E12               	movwf	lcd_4bits_send_char@ret^0,c
  3581                           
  3582                           ;ECU_Layer/LCD/Lcd.c: 78:         ret = enable_pin_4bits(lcd);
  3583   002452  C00F  F00A         	movff	lcd_4bits_send_char@lcd,enable_pin_4bits@lcd
  3584   002456  C010  F00B         	movff	lcd_4bits_send_char@lcd+1,enable_pin_4bits@lcd+1
  3585   00245A  ECA1  F012         	call	_enable_pin_4bits	;wreg free
  3586   00245E  6E12               	movwf	lcd_4bits_send_char@ret^0,c
  3587   002460                     l2959:
  3588                           
  3589                           ;ECU_Layer/LCD/Lcd.c: 80:     return ret;
  3590   002460  5012               	movf	lcd_4bits_send_char@ret^0,w,c
  3591   002462  0012               	return		;funcret
  3592   002464                     __end_of_lcd_4bits_send_char:
  3593                           	callstack 0
  3594                           
  3595 ;; *************** function _keypad_read_value *****************
  3596 ;; Defined at:
  3597 ;;		line 43 in file "ECU_Layer/KEYPAD/KeyPad.c"
  3598 ;; Parameters:    Size  Location     Type
  3599 ;;  key_pad         2   13[COMRAM] PTR struct .
  3600 ;;		 -> keypad_1(8), 
  3601 ;;  value           2   15[COMRAM] PTR unsigned char 
  3602 ;;		 -> num_2_read@temp_value(1), num_1_read@temp_value(1), 
  3603 ;; Auto vars:     Size  Location     Type
  3604 ;;  columns_coun    1   22[COMRAM] unsigned char 
  3605 ;;  rows_counter    1   21[COMRAM] unsigned char 
  3606 ;;  temp_value      1   20[COMRAM] unsigned char 
  3607 ;;  ret             1   19[COMRAM] unsigned char 
  3608 ;; Return value:  Size  Location     Type
  3609 ;;                  1    wreg      unsigned char 
  3610 ;; Registers used:
  3611 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3612 ;; Tracked objects:
  3613 ;;		On entry : 0/0
  3614 ;;		On exit  : 0/0
  3615 ;;		Unchanged: 0/0
  3616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3617 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3618 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3619 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3620 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3621 ;;Total ram usage:       10 bytes
  3622 ;; Hardware stack levels used: 1
  3623 ;; Hardware stack levels required when called: 2
  3624 ;; This function calls:
  3625 ;;		_gpio_pin_read_logic
  3626 ;;		_gpio_pin_write_logic
  3627 ;;		_turnoff_all_rows
  3628 ;; This function is called by:
  3629 ;;		_num_1_read
  3630 ;;		_num_2_read
  3631 ;; This function uses a non-reentrant model
  3632 ;;
  3633                           
  3634                           	psect	text21
  3635   001CF6                     __ptext21:
  3636                           	callstack 0
  3637   001CF6                     _keypad_read_value:
  3638                           	callstack 26
  3639   001CF6                     
  3640                           ;ECU_Layer/KEYPAD/KeyPad.c: 46:     uint8 rows_counter = 0;
  3641   001CF6  0E00               	movlw	0
  3642   001CF8  6E16               	movwf	keypad_read_value@rows_counter^0,c
  3643                           
  3644                           ;ECU_Layer/KEYPAD/KeyPad.c: 47:     uint8 columns_counter = 0;
  3645   001CFA  0E00               	movlw	0
  3646   001CFC  6E17               	movwf	keypad_read_value@columns_counter^0,c
  3647                           
  3648                           ;ECU_Layer/KEYPAD/KeyPad.c: 48:     uint8 temp_value = 0;
  3649   001CFE  0E00               	movlw	0
  3650   001D00  6E15               	movwf	keypad_read_value@temp_value^0,c
  3651   001D02                     
  3652                           ;ECU_Layer/KEYPAD/KeyPad.c: 50:     if(key_pad == ((void*)0)){
  3653   001D02  500E               	movf	keypad_read_value@key_pad^0,w,c
  3654   001D04  100F               	iorwf	(keypad_read_value@key_pad+1)^0,w,c
  3655   001D06  A4D8               	btfss	status,2,c
  3656   001D08  EF88  F00E         	goto	u2241
  3657   001D0C  EF8A  F00E         	goto	u2240
  3658   001D10                     u2241:
  3659   001D10  EF8E  F00E         	goto	l3117
  3660   001D14                     u2240:
  3661   001D14                     
  3662                           ;ECU_Layer/KEYPAD/KeyPad.c: 51:         ret = (Std_ReturnType)0x01;
  3663   001D14  0E01               	movlw	1
  3664   001D16  6E14               	movwf	keypad_read_value@ret^0,c
  3665                           
  3666                           ;ECU_Layer/KEYPAD/KeyPad.c: 52:     }
  3667   001D18  EFF0  F00E         	goto	l3147
  3668   001D1C                     l3117:
  3669                           
  3670                           ;ECU_Layer/KEYPAD/KeyPad.c: 55:         for(rows_counter=0; rows_counter<4; rows_counter
      +                          ++){
  3671   001D1C  0E00               	movlw	0
  3672   001D1E  6E16               	movwf	keypad_read_value@rows_counter^0,c
  3673   001D20                     l3123:
  3674                           
  3675                           ;ECU_Layer/KEYPAD/KeyPad.c: 57:             ret = turnoff_all_rows(key_pad);
  3676   001D20  C00E  F00A         	movff	keypad_read_value@key_pad,turnoff_all_rows@key_pad
  3677   001D24  C00F  F00B         	movff	keypad_read_value@key_pad+1,turnoff_all_rows@key_pad+1
  3678   001D28  EC1D  F013         	call	_turnoff_all_rows	;wreg free
  3679   001D2C  6E14               	movwf	keypad_read_value@ret^0,c
  3680                           
  3681                           ;ECU_Layer/KEYPAD/KeyPad.c: 59:             ret = gpio_pin_write_logic(&(key_pad->rows[r
      +                          ows_counter]) , GPIO_HIGH);
  3682   001D2E  5016               	movf	keypad_read_value@rows_counter^0,w,c
  3683   001D30  240E               	addwf	keypad_read_value@key_pad^0,w,c
  3684   001D32  6E01               	movwf	gpio_pin_write_logic@str^0,c
  3685   001D34  0E00               	movlw	0
  3686   001D36  200F               	addwfc	(keypad_read_value@key_pad+1)^0,w,c
  3687   001D38  6E02               	movwf	(gpio_pin_write_logic@str+1)^0,c
  3688   001D3A  0E01               	movlw	1
  3689   001D3C  6E03               	movwf	gpio_pin_write_logic@LOG^0,c
  3690   001D3E  ECE3  F00C         	call	_gpio_pin_write_logic	;wreg free
  3691   001D42  6E14               	movwf	keypad_read_value@ret^0,c
  3692   001D44                     
  3693                           ;ECU_Layer/KEYPAD/KeyPad.c: 60:             _delay((unsigned long)((10)*(8000000U/4000.0
      +                          )));
  3694   001D44  0E1A               	movlw	26
  3695   001D46  6E12               	movwf	??_keypad_read_value^0,c
  3696   001D48  0EF8               	movlw	248
  3697   001D4A                     u3317:
  3698   001D4A  2EE8               	decfsz	wreg,f,c
  3699   001D4C  D7FE               	bra	u3317
  3700   001D4E  2E12               	decfsz	??_keypad_read_value^0,f,c
  3701   001D50  D7FC               	bra	u3317
  3702   001D52  D000               	nop2	
  3703   001D54                     
  3704                           ;ECU_Layer/KEYPAD/KeyPad.c: 62:             for(columns_counter=0; columns_counter<4; co
      +                          lumns_counter++){
  3705   001D54  0E00               	movlw	0
  3706   001D56  6E17               	movwf	keypad_read_value@columns_counter^0,c
  3707   001D58                     l3133:
  3708                           
  3709                           ;ECU_Layer/KEYPAD/KeyPad.c: 63:                 ret = gpio_pin_read_logic(&(key_pad->col
      +                          umns[columns_counter]) , &temp_value);
  3710   001D58  5017               	movf	keypad_read_value@columns_counter^0,w,c
  3711   001D5A  240E               	addwf	keypad_read_value@key_pad^0,w,c
  3712   001D5C  6E12               	movwf	??_keypad_read_value^0,c
  3713   001D5E  0E00               	movlw	0
  3714   001D60  200F               	addwfc	(keypad_read_value@key_pad+1)^0,w,c
  3715   001D62  6E13               	movwf	(??_keypad_read_value+1)^0,c
  3716   001D64  0E04               	movlw	4
  3717   001D66  2412               	addwf	??_keypad_read_value^0,w,c
  3718   001D68  6E01               	movwf	gpio_pin_read_logic@str^0,c
  3719   001D6A  0E00               	movlw	0
  3720   001D6C  2013               	addwfc	(??_keypad_read_value+1)^0,w,c
  3721   001D6E  6E02               	movwf	(gpio_pin_read_logic@str+1)^0,c
  3722   001D70  0E15               	movlw	low keypad_read_value@temp_value
  3723   001D72  6E03               	movwf	gpio_pin_read_logic@LOG^0,c
  3724   001D74  0E00               	movlw	high keypad_read_value@temp_value
  3725   001D76  6E04               	movwf	(gpio_pin_read_logic@LOG+1)^0,c
  3726   001D78  EC67  F010         	call	_gpio_pin_read_logic	;wreg free
  3727   001D7C  6E14               	movwf	keypad_read_value@ret^0,c
  3728   001D7E                     
  3729                           ;ECU_Layer/KEYPAD/KeyPad.c: 65:                 if (GPIO_HIGH == temp_value){
  3730   001D7E  0415               	decf	keypad_read_value@temp_value^0,w,c
  3731   001D80  A4D8               	btfss	status,2,c
  3732   001D82  EFC5  F00E         	goto	u2251
  3733   001D86  EFC7  F00E         	goto	u2250
  3734   001D8A                     u2251:
  3735   001D8A  EFDE  F00E         	goto	l3139
  3736   001D8E                     u2250:
  3737   001D8E                     
  3738                           ;ECU_Layer/KEYPAD/KeyPad.c: 66:                     *value = btn_values[rows_counter][co
      +                          lumns_counter];
  3739   001D8E  5016               	movf	keypad_read_value@rows_counter^0,w,c
  3740   001D90  0D04               	mullw	4
  3741   001D92  0E01               	movlw	low _btn_values
  3742   001D94  24F3               	addwf	243,w,c
  3743   001D96  6E12               	movwf	??_keypad_read_value^0,c
  3744   001D98  0E10               	movlw	high _btn_values
  3745   001D9A  20F4               	addwfc	prodh,w,c
  3746   001D9C  6E13               	movwf	(??_keypad_read_value+1)^0,c
  3747   001D9E  5017               	movf	keypad_read_value@columns_counter^0,w,c
  3748   001DA0  2612               	addwf	??_keypad_read_value^0,f,c
  3749   001DA2  0E00               	movlw	0
  3750   001DA4  2213               	addwfc	(??_keypad_read_value+1)^0,f,c
  3751   001DA6  C012  FFF6         	movff	??_keypad_read_value,tblptrl
  3752   001DAA  C013  FFF7         	movff	??_keypad_read_value+1,tblptrh
  3753   001DAE                     	if	0	;tblptru may be non-zero
  3754   001DAE                     	endif
  3755   001DAE                     	if	0	;tblptru may be non-zero
  3756   001DAE                     	endif
  3757   001DAE  C010  FFD9         	movff	keypad_read_value@value,fsr2l
  3758   001DB2  C011  FFDA         	movff	keypad_read_value@value+1,fsr2h
  3759   001DB6  0008               	tblrd		*
  3760   001DB8  CFF5 FFDF          	movff	tablat,indf2
  3761   001DBC                     l3139:
  3762                           
  3763                           ;ECU_Layer/KEYPAD/KeyPad.c: 72:             }
  3764   001DBC  2A17               	incf	keypad_read_value@columns_counter^0,f,c
  3765   001DBE  0E03               	movlw	3
  3766   001DC0  6417               	cpfsgt	keypad_read_value@columns_counter^0,c
  3767   001DC2  EFE5  F00E         	goto	u2261
  3768   001DC6  EFE7  F00E         	goto	u2260
  3769   001DCA                     u2261:
  3770   001DCA  EFAC  F00E         	goto	l3133
  3771   001DCE                     u2260:
  3772   001DCE                     
  3773                           ;ECU_Layer/KEYPAD/KeyPad.c: 74:         }
  3774   001DCE  2A16               	incf	keypad_read_value@rows_counter^0,f,c
  3775   001DD0  0E03               	movlw	3
  3776   001DD2  6416               	cpfsgt	keypad_read_value@rows_counter^0,c
  3777   001DD4  EFEE  F00E         	goto	u2271
  3778   001DD8  EFF0  F00E         	goto	u2270
  3779   001DDC                     u2271:
  3780   001DDC  EF90  F00E         	goto	l3123
  3781   001DE0                     u2270:
  3782   001DE0                     l3147:
  3783                           
  3784                           ;ECU_Layer/KEYPAD/KeyPad.c: 78:     return ret;
  3785   001DE0  5014               	movf	keypad_read_value@ret^0,w,c
  3786   001DE2  0012               	return		;funcret
  3787   001DE4                     __end_of_keypad_read_value:
  3788                           	callstack 0
  3789                           
  3790 ;; *************** function _turnoff_all_rows *****************
  3791 ;; Defined at:
  3792 ;;		line 81 in file "ECU_Layer/KEYPAD/KeyPad.c"
  3793 ;; Parameters:    Size  Location     Type
  3794 ;;  key_pad         2    9[COMRAM] PTR struct .
  3795 ;;		 -> keypad_1(8), 
  3796 ;; Auto vars:     Size  Location     Type
  3797 ;;  rows_counter    1   12[COMRAM] unsigned char 
  3798 ;;  ret             1   11[COMRAM] unsigned char 
  3799 ;; Return value:  Size  Location     Type
  3800 ;;                  1    wreg      unsigned char 
  3801 ;; Registers used:
  3802 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3803 ;; Tracked objects:
  3804 ;;		On entry : 0/0
  3805 ;;		On exit  : 0/0
  3806 ;;		Unchanged: 0/0
  3807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3808 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3809 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3811 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3812 ;;Total ram usage:        4 bytes
  3813 ;; Hardware stack levels used: 1
  3814 ;; Hardware stack levels required when called: 1
  3815 ;; This function calls:
  3816 ;;		_gpio_pin_write_logic
  3817 ;; This function is called by:
  3818 ;;		_keypad_read_value
  3819 ;; This function uses a non-reentrant model
  3820 ;;
  3821                           
  3822                           	psect	text22
  3823   00263A                     __ptext22:
  3824                           	callstack 0
  3825   00263A                     _turnoff_all_rows:
  3826                           	callstack 26
  3827   00263A                     
  3828                           ;ECU_Layer/KEYPAD/KeyPad.c: 85:     uint8 rows_counter = 0;
  3829   00263A  0E00               	movlw	0
  3830   00263C  6E0D               	movwf	turnoff_all_rows@rows_counter^0,c
  3831   00263E                     
  3832                           ;ECU_Layer/KEYPAD/KeyPad.c: 87:     if(key_pad == ((void*)0)){
  3833   00263E  500A               	movf	turnoff_all_rows@key_pad^0,w,c
  3834   002640  100B               	iorwf	(turnoff_all_rows@key_pad+1)^0,w,c
  3835   002642  A4D8               	btfss	status,2,c
  3836   002644  EF26  F013         	goto	u2101
  3837   002648  EF28  F013         	goto	u2100
  3838   00264C                     u2101:
  3839   00264C  EF2C  F013         	goto	l3025
  3840   002650                     u2100:
  3841   002650                     
  3842                           ;ECU_Layer/KEYPAD/KeyPad.c: 88:         ret = (Std_ReturnType)0x01;
  3843   002650  0E01               	movlw	1
  3844   002652  6E0C               	movwf	turnoff_all_rows@ret^0,c
  3845                           
  3846                           ;ECU_Layer/KEYPAD/KeyPad.c: 89:     }
  3847   002654  EF42  F013         	goto	l3037
  3848   002658                     l3025:
  3849                           
  3850                           ;ECU_Layer/KEYPAD/KeyPad.c: 92:         for(rows_counter=0; rows_counter<4; rows_counter
      +                          ++){
  3851   002658  0E00               	movlw	0
  3852   00265A  6E0D               	movwf	turnoff_all_rows@rows_counter^0,c
  3853   00265C                     l3031:
  3854                           
  3855                           ;ECU_Layer/KEYPAD/KeyPad.c: 93:             ret = gpio_pin_write_logic(&(key_pad->rows[r
      +                          ows_counter]) , GPIO_LOW);
  3856   00265C  500D               	movf	turnoff_all_rows@rows_counter^0,w,c
  3857   00265E  240A               	addwf	turnoff_all_rows@key_pad^0,w,c
  3858   002660  6E01               	movwf	gpio_pin_write_logic@str^0,c
  3859   002662  0E00               	movlw	0
  3860   002664  200B               	addwfc	(turnoff_all_rows@key_pad+1)^0,w,c
  3861   002666  6E02               	movwf	(gpio_pin_write_logic@str+1)^0,c
  3862   002668  0E00               	movlw	0
  3863   00266A  6E03               	movwf	gpio_pin_write_logic@LOG^0,c
  3864   00266C  ECE3  F00C         	call	_gpio_pin_write_logic	;wreg free
  3865   002670  6E0C               	movwf	turnoff_all_rows@ret^0,c
  3866   002672                     
  3867                           ;ECU_Layer/KEYPAD/KeyPad.c: 94:         }
  3868   002672  2A0D               	incf	turnoff_all_rows@rows_counter^0,f,c
  3869   002674  0E03               	movlw	3
  3870   002676  640D               	cpfsgt	turnoff_all_rows@rows_counter^0,c
  3871   002678  EF40  F013         	goto	u2111
  3872   00267C  EF42  F013         	goto	u2110
  3873   002680                     u2111:
  3874   002680  EF2E  F013         	goto	l3031
  3875   002684                     u2110:
  3876   002684                     l3037:
  3877                           
  3878                           ;ECU_Layer/KEYPAD/KeyPad.c: 97:     return ret;
  3879   002684  500C               	movf	turnoff_all_rows@ret^0,w,c
  3880   002686  0012               	return		;funcret
  3881   002688                     __end_of_turnoff_all_rows:
  3882                           	callstack 0
  3883                           
  3884 ;; *************** function _gpio_pin_read_logic *****************
  3885 ;; Defined at:
  3886 ;;		line 82 in file "MCAL_Layer/GPIO/hal_gpio.c"
  3887 ;; Parameters:    Size  Location     Type
  3888 ;;  str             2    0[COMRAM] PTR const struct .
  3889 ;;		 -> keypad_1.columns(4), keypad_1(8), 
  3890 ;;  LOG             2    2[COMRAM] PTR enum E2989
  3891 ;;		 -> keypad_read_value@temp_value(1), button_read@PIN_STATUS(1), 
  3892 ;; Auto vars:     Size  Location     Type
  3893 ;;  ret             1    0        unsigned char 
  3894 ;; Return value:  Size  Location     Type
  3895 ;;                  1    wreg      unsigned char 
  3896 ;; Registers used:
  3897 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3898 ;; Tracked objects:
  3899 ;;		On entry : 0/0
  3900 ;;		On exit  : 0/0
  3901 ;;		Unchanged: 0/0
  3902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3903 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3905 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3906 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3907 ;;Total ram usage:        9 bytes
  3908 ;; Hardware stack levels used: 1
  3909 ;; This function calls:
  3910 ;;		Nothing
  3911 ;; This function is called by:
  3912 ;;		_keypad_read_value
  3913 ;;		_button_read
  3914 ;; This function uses a non-reentrant model
  3915 ;;
  3916                           
  3917                           	psect	text23
  3918   0020CE                     __ptext23:
  3919                           	callstack 0
  3920   0020CE                     _gpio_pin_read_logic:
  3921                           	callstack 27
  3922   0020CE                     
  3923                           ;MCAL_Layer/GPIO/hal_gpio.c: 84:     if(str == ((void*)0) || (str->PIN > 7)){
  3924   0020CE  5001               	movf	gpio_pin_read_logic@str^0,w,c
  3925   0020D0  1002               	iorwf	(gpio_pin_read_logic@str+1)^0,w,c
  3926   0020D2  B4D8               	btfsc	status,2,c
  3927   0020D4  EF6E  F010         	goto	u2071
  3928   0020D8  EF70  F010         	goto	u2070
  3929   0020DC                     u2071:
  3930   0020DC  EF7F  F010         	goto	l3011
  3931   0020E0                     u2070:
  3932   0020E0  C001  FFD9         	movff	gpio_pin_read_logic@str,fsr2l
  3933   0020E4  C002  FFDA         	movff	gpio_pin_read_logic@str+1,fsr2h
  3934   0020E8  50DF               	movf	223,w,c
  3935   0020EA  0B07               	andlw	7
  3936   0020EC  6E05               	movwf	??_gpio_pin_read_logic^0,c
  3937   0020EE  0E07               	movlw	7
  3938   0020F0  6405               	cpfsgt	??_gpio_pin_read_logic^0,c
  3939   0020F2  EF7D  F010         	goto	u2081
  3940   0020F6  EF7F  F010         	goto	u2080
  3941   0020FA                     u2081:
  3942   0020FA  EF81  F010         	goto	l3013
  3943   0020FE                     u2080:
  3944   0020FE                     l3011:
  3945                           
  3946                           ;MCAL_Layer/GPIO/hal_gpio.c: 86:     }
  3947   0020FE  EFB2  F010         	goto	l3015
  3948   002102                     l3013:
  3949                           
  3950                           ;MCAL_Layer/GPIO/hal_gpio.c: 88:         *LOG = ((*PORT_REG[str->PORT] >> str->PIN) & 0x
      +                          01);
  3951   002102  C001  FFD9         	movff	gpio_pin_read_logic@str,fsr2l
  3952   002106  C002  FFDA         	movff	gpio_pin_read_logic@str+1,fsr2h
  3953   00210A  50DF               	movf	223,w,c
  3954   00210C  0B07               	andlw	7
  3955   00210E  6E05               	movwf	??_gpio_pin_read_logic^0,c
  3956   002110  C001  FFD9         	movff	gpio_pin_read_logic@str,fsr2l
  3957   002114  C002  FFDA         	movff	gpio_pin_read_logic@str+1,fsr2h
  3958   002118  30DF               	rrcf	223,w,c
  3959   00211A  32E8               	rrcf	wreg,f,c
  3960   00211C  32E8               	rrcf	wreg,f,c
  3961   00211E  0B07               	andlw	7
  3962   002120  6E06               	movwf	(??_gpio_pin_read_logic+1)^0,c
  3963   002122  5006               	movf	(??_gpio_pin_read_logic+1)^0,w,c
  3964   002124  0D02               	mullw	2
  3965   002126  0E80               	movlw	low _PORT_REG
  3966   002128  24F3               	addwf	243,w,c
  3967   00212A  6ED9               	movwf	fsr2l,c
  3968   00212C  0E00               	movlw	high _PORT_REG
  3969   00212E  20F4               	addwfc	prodh,w,c
  3970   002130  6EDA               	movwf	fsr2h,c
  3971   002132  CFDE F007          	movff	postinc2,??_gpio_pin_read_logic+2
  3972   002136  CFDD F008          	movff	postdec2,??_gpio_pin_read_logic+3
  3973   00213A  C007  FFD9         	movff	??_gpio_pin_read_logic+2,fsr2l
  3974   00213E  C008  FFDA         	movff	??_gpio_pin_read_logic+3,fsr2h
  3975   002142  50DF               	movf	indf2,w,c
  3976   002144  6E09               	movwf	(??_gpio_pin_read_logic+4)^0,c
  3977   002146  2A05               	incf	??_gpio_pin_read_logic^0,f,c
  3978   002148  EFA8  F010         	goto	u2094
  3979   00214C                     u2095:
  3980   00214C  90D8               	bcf	status,0,c
  3981   00214E  3209               	rrcf	(??_gpio_pin_read_logic+4)^0,f,c
  3982   002150                     u2094:
  3983   002150  2E05               	decfsz	??_gpio_pin_read_logic^0,f,c
  3984   002152  EFA6  F010         	goto	u2095
  3985   002156  5009               	movf	(??_gpio_pin_read_logic+4)^0,w,c
  3986   002158  0B01               	andlw	1
  3987   00215A  C003  FFD9         	movff	gpio_pin_read_logic@LOG,fsr2l
  3988   00215E  C004  FFDA         	movff	gpio_pin_read_logic@LOG+1,fsr2h
  3989   002162  6EDF               	movwf	indf2,c
  3990   002164                     l3015:
  3991                           
  3992                           ;MCAL_Layer/GPIO/hal_gpio.c: 90:     return ret;
  3993   002164  0E01               	movlw	1
  3994   002166  0012               	return		;funcret
  3995   002168                     __end_of_gpio_pin_read_logic:
  3996                           	callstack 0
  3997                           
  3998 ;; *************** function _convert_string_to_numbers *****************
  3999 ;; Defined at:
  4000 ;;		line 143 in file "Application.c"
  4001 ;; Parameters:    Size  Location     Type
  4002 ;;  str             2    0[COMRAM] PTR unsigned char 
  4003 ;;		 -> str__2(4), str__1(4), 
  4004 ;;  value           2    2[COMRAM] PTR unsigned char 
  4005 ;;		 -> value_2(1), value_1(1), 
  4006 ;; Auto vars:     Size  Location     Type
  4007 ;;  counter         1    8[COMRAM] unsigned char 
  4008 ;;  temp_3          1    7[COMRAM] unsigned char 
  4009 ;;  temp_2          1    6[COMRAM] unsigned char 
  4010 ;;  temp_1          1    5[COMRAM] unsigned char 
  4011 ;;  ret             1    4[COMRAM] unsigned char 
  4012 ;; Return value:  Size  Location     Type
  4013 ;;                  1    wreg      unsigned char 
  4014 ;; Registers used:
  4015 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4016 ;; Tracked objects:
  4017 ;;		On entry : 0/0
  4018 ;;		On exit  : 0/0
  4019 ;;		Unchanged: 0/0
  4020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4021 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4022 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4024 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4025 ;;Total ram usage:        9 bytes
  4026 ;; Hardware stack levels used: 1
  4027 ;; This function calls:
  4028 ;;		Nothing
  4029 ;; This function is called by:
  4030 ;;		_main
  4031 ;;		_num_1_read
  4032 ;; This function uses a non-reentrant model
  4033 ;;
  4034                           
  4035                           	psect	text24
  4036   001516                     __ptext24:
  4037                           	callstack 0
  4038   001516                     _convert_string_to_numbers:
  4039                           	callstack 29
  4040   001516                     
  4041                           ;Application.c: 144:     Std_ReturnType ret = (Std_ReturnType)0x01;
  4042   001516  0E01               	movlw	1
  4043   001518  6E05               	movwf	convert_string_to_numbers@ret^0,c
  4044                           
  4045                           ;Application.c: 145:     uint8 counter = 0;
  4046   00151A  0E00               	movlw	0
  4047   00151C  6E09               	movwf	convert_string_to_numbers@counter^0,c
  4048                           
  4049                           ;Application.c: 146:     uint8 temp_1 = 0;
  4050   00151E  0E00               	movlw	0
  4051   001520  6E06               	movwf	convert_string_to_numbers@temp_1^0,c
  4052                           
  4053                           ;Application.c: 147:     uint8 temp_2 = 0;
  4054   001522  0E00               	movlw	0
  4055   001524  6E07               	movwf	convert_string_to_numbers@temp_2^0,c
  4056                           
  4057                           ;Application.c: 148:     uint8 temp_3 = 0;
  4058   001526  0E00               	movlw	0
  4059   001528  6E08               	movwf	convert_string_to_numbers@temp_3^0,c
  4060                           
  4061                           ;Application.c: 149:     for(counter=0; counter<3; counter++){
  4062   00152A  0E00               	movlw	0
  4063   00152C  6E09               	movwf	convert_string_to_numbers@counter^0,c
  4064   00152E                     l3229:
  4065                           
  4066                           ;Application.c: 150:         if(0 == str[2]){
  4067   00152E  EE20 F002          	lfsr	2,2
  4068   001532  5001               	movf	convert_string_to_numbers@str^0,w,c
  4069   001534  26D9               	addwf	fsr2l,f,c
  4070   001536  5002               	movf	(convert_string_to_numbers@str+1)^0,w,c
  4071   001538  22DA               	addwfc	fsr2h,f,c
  4072   00153A  50DF               	movf	indf2,w,c
  4073   00153C  A4D8               	btfss	status,2,c
  4074   00153E  EFA3  F00A         	goto	u2361
  4075   001542  EFA5  F00A         	goto	u2360
  4076   001546                     u2361:
  4077   001546  EFDD  F00A         	goto	l3243
  4078   00154A                     u2360:
  4079   00154A                     
  4080                           ;Application.c: 151:             if(0 == str[1]){
  4081   00154A  EE20 F001          	lfsr	2,1
  4082   00154E  5001               	movf	convert_string_to_numbers@str^0,w,c
  4083   001550  26D9               	addwf	fsr2l,f,c
  4084   001552  5002               	movf	(convert_string_to_numbers@str+1)^0,w,c
  4085   001554  22DA               	addwfc	fsr2h,f,c
  4086   001556  50DF               	movf	indf2,w,c
  4087   001558  A4D8               	btfss	status,2,c
  4088   00155A  EFB1  F00A         	goto	u2371
  4089   00155E  EFB3  F00A         	goto	u2370
  4090   001562                     u2371:
  4091   001562  EFC2  F00A         	goto	l3237
  4092   001566                     u2370:
  4093   001566                     
  4094                           ;Application.c: 152:                 temp_3 = ((str[0] - '0') * 1);
  4095   001566  C001  FFD9         	movff	convert_string_to_numbers@str,fsr2l
  4096   00156A  C002  FFDA         	movff	convert_string_to_numbers@str+1,fsr2h
  4097   00156E  50DF               	movf	indf2,w,c
  4098   001570  0FD0               	addlw	208
  4099   001572  6E08               	movwf	convert_string_to_numbers@temp_3^0,c
  4100   001574                     
  4101                           ;Application.c: 153:                 *value = temp_3;
  4102   001574  C003  FFD9         	movff	convert_string_to_numbers@value,fsr2l
  4103   001578  C004  FFDA         	movff	convert_string_to_numbers@value+1,fsr2h
  4104   00157C  C008  FFDF         	movff	convert_string_to_numbers@temp_3,indf2
  4105                           
  4106                           ;Application.c: 154:             }
  4107   001580  EF15  F00B         	goto	l3255
  4108   001584                     l3237:
  4109                           
  4110                           ;Application.c: 156:                 temp_2 = ((str[0] - '0') * 10);
  4111   001584  C001  FFD9         	movff	convert_string_to_numbers@str,fsr2l
  4112   001588  C002  FFDA         	movff	convert_string_to_numbers@str+1,fsr2h
  4113   00158C  50DF               	movf	indf2,w,c
  4114   00158E  0FD0               	addlw	208
  4115   001590  0D0A               	mullw	10
  4116   001592  CFF3 F007          	movff	prodl,convert_string_to_numbers@temp_2
  4117   001596                     
  4118                           ;Application.c: 157:                 temp_3 = ((str[1] - '0') * 1);
  4119   001596  EE20 F001          	lfsr	2,1
  4120   00159A  5001               	movf	convert_string_to_numbers@str^0,w,c
  4121   00159C  26D9               	addwf	fsr2l,f,c
  4122   00159E  5002               	movf	(convert_string_to_numbers@str+1)^0,w,c
  4123   0015A0  22DA               	addwfc	fsr2h,f,c
  4124   0015A2  50DF               	movf	indf2,w,c
  4125   0015A4  0FD0               	addlw	208
  4126   0015A6  6E08               	movwf	convert_string_to_numbers@temp_3^0,c
  4127   0015A8                     
  4128                           ;Application.c: 158:                 *value = (temp_2 + temp_3);
  4129   0015A8  5007               	movf	convert_string_to_numbers@temp_2^0,w,c
  4130   0015AA  2408               	addwf	convert_string_to_numbers@temp_3^0,w,c
  4131   0015AC  C003  FFD9         	movff	convert_string_to_numbers@value,fsr2l
  4132   0015B0  C004  FFDA         	movff	convert_string_to_numbers@value+1,fsr2h
  4133   0015B4  6EDF               	movwf	indf2,c
  4134   0015B6  EF15  F00B         	goto	l3255
  4135   0015BA                     l3243:
  4136                           
  4137                           ;Application.c: 163:         if(0 == counter){
  4138   0015BA  5009               	movf	convert_string_to_numbers@counter^0,w,c
  4139   0015BC  A4D8               	btfss	status,2,c
  4140   0015BE  EFE3  F00A         	goto	u2381
  4141   0015C2  EFE5  F00A         	goto	u2380
  4142   0015C6                     u2381:
  4143   0015C6  EFF0  F00A         	goto	l3247
  4144   0015CA                     u2380:
  4145   0015CA                     
  4146                           ;Application.c: 164:             temp_1 = ((str[counter] - '0') * 100);
  4147   0015CA  5009               	movf	convert_string_to_numbers@counter^0,w,c
  4148   0015CC  2401               	addwf	convert_string_to_numbers@str^0,w,c
  4149   0015CE  6ED9               	movwf	fsr2l,c
  4150   0015D0  0E00               	movlw	0
  4151   0015D2  2002               	addwfc	(convert_string_to_numbers@str+1)^0,w,c
  4152   0015D4  6EDA               	movwf	fsr2h,c
  4153   0015D6  50DF               	movf	indf2,w,c
  4154   0015D8  0FD0               	addlw	208
  4155   0015DA  0D64               	mullw	100
  4156   0015DC  CFF3 F006          	movff	prodl,convert_string_to_numbers@temp_1
  4157   0015E0                     l3247:
  4158                           
  4159                           ;Application.c: 166:         if(1 == counter){
  4160   0015E0  0409               	decf	convert_string_to_numbers@counter^0,w,c
  4161   0015E2  A4D8               	btfss	status,2,c
  4162   0015E4  EFF6  F00A         	goto	u2391
  4163   0015E8  EFF8  F00A         	goto	u2390
  4164   0015EC                     u2391:
  4165   0015EC  EF03  F00B         	goto	l3251
  4166   0015F0                     u2390:
  4167   0015F0                     
  4168                           ;Application.c: 167:             temp_2 = ((str[counter] - '0') * 10);
  4169   0015F0  5009               	movf	convert_string_to_numbers@counter^0,w,c
  4170   0015F2  2401               	addwf	convert_string_to_numbers@str^0,w,c
  4171   0015F4  6ED9               	movwf	fsr2l,c
  4172   0015F6  0E00               	movlw	0
  4173   0015F8  2002               	addwfc	(convert_string_to_numbers@str+1)^0,w,c
  4174   0015FA  6EDA               	movwf	fsr2h,c
  4175   0015FC  50DF               	movf	indf2,w,c
  4176   0015FE  0FD0               	addlw	208
  4177   001600  0D0A               	mullw	10
  4178   001602  CFF3 F007          	movff	prodl,convert_string_to_numbers@temp_2
  4179   001606                     l3251:
  4180                           
  4181                           ;Application.c: 169:         if(2 == counter){
  4182   001606  0E02               	movlw	2
  4183   001608  1809               	xorwf	convert_string_to_numbers@counter^0,w,c
  4184   00160A  A4D8               	btfss	status,2,c
  4185   00160C  EF0A  F00B         	goto	u2401
  4186   001610  EF0C  F00B         	goto	u2400
  4187   001614                     u2401:
  4188   001614  EF15  F00B         	goto	l3255
  4189   001618                     u2400:
  4190   001618                     
  4191                           ;Application.c: 170:             temp_3 = ((str[counter] - '0') * 1);
  4192   001618  5009               	movf	convert_string_to_numbers@counter^0,w,c
  4193   00161A  2401               	addwf	convert_string_to_numbers@str^0,w,c
  4194   00161C  6ED9               	movwf	fsr2l,c
  4195   00161E  0E00               	movlw	0
  4196   001620  2002               	addwfc	(convert_string_to_numbers@str+1)^0,w,c
  4197   001622  6EDA               	movwf	fsr2h,c
  4198   001624  50DF               	movf	indf2,w,c
  4199   001626  0FD0               	addlw	208
  4200   001628  6E08               	movwf	convert_string_to_numbers@temp_3^0,c
  4201   00162A                     l3255:
  4202                           
  4203                           ;Application.c: 173:     }
  4204   00162A  2A09               	incf	convert_string_to_numbers@counter^0,f,c
  4205   00162C  0E02               	movlw	2
  4206   00162E  6409               	cpfsgt	convert_string_to_numbers@counter^0,c
  4207   001630  EF1C  F00B         	goto	u2411
  4208   001634  EF1E  F00B         	goto	u2410
  4209   001638                     u2411:
  4210   001638  EF97  F00A         	goto	l3229
  4211   00163C                     u2410:
  4212   00163C                     
  4213                           ;Application.c: 174:     *value = (temp_1 + temp_2 + temp_3);
  4214   00163C  5006               	movf	convert_string_to_numbers@temp_1^0,w,c
  4215   00163E  2407               	addwf	convert_string_to_numbers@temp_2^0,w,c
  4216   001640  2408               	addwf	convert_string_to_numbers@temp_3^0,w,c
  4217   001642  C003  FFD9         	movff	convert_string_to_numbers@value,fsr2l
  4218   001646  C004  FFDA         	movff	convert_string_to_numbers@value+1,fsr2h
  4219   00164A  6EDF               	movwf	indf2,c
  4220   00164C                     
  4221                           ;Application.c: 176:     return ret;
  4222   00164C  5005               	movf	convert_string_to_numbers@ret^0,w,c
  4223   00164E  0012               	return		;funcret
  4224   001650                     __end_of_convert_string_to_numbers:
  4225                           	callstack 0
  4226                           
  4227 ;; *************** function _lcd_4bits_initialze *****************
  4228 ;; Defined at:
  4229 ;;		line 18 in file "ECU_Layer/LCD/Lcd.c"
  4230 ;; Parameters:    Size  Location     Type
  4231 ;;  lcd             2   18[COMRAM] PTR const struct .
  4232 ;;		 -> lcd_1(6), 
  4233 ;; Auto vars:     Size  Location     Type
  4234 ;;  ret             1   22[COMRAM] unsigned char 
  4235 ;;  counter         1   21[COMRAM] unsigned char 
  4236 ;; Return value:  Size  Location     Type
  4237 ;;                  1    wreg      unsigned char 
  4238 ;; Registers used:
  4239 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4240 ;; Tracked objects:
  4241 ;;		On entry : 0/0
  4242 ;;		On exit  : 0/0
  4243 ;;		Unchanged: 0/0
  4244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4245 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4246 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4247 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4248 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4249 ;;Total ram usage:        5 bytes
  4250 ;; Hardware stack levels used: 1
  4251 ;; Hardware stack levels required when called: 3
  4252 ;; This function calls:
  4253 ;;		_gpio_pin_intialize
  4254 ;;		_lcd_4bits_send_command
  4255 ;; This function is called by:
  4256 ;;		_main
  4257 ;; This function uses a non-reentrant model
  4258 ;;
  4259                           
  4260                           	psect	text25
  4261   0018A6                     __ptext25:
  4262                           	callstack 0
  4263   0018A6                     _lcd_4bits_initialze:
  4264                           	callstack 27
  4265   0018A6                     
  4266                           ;ECU_Layer/LCD/Lcd.c: 21:     uint8 counter = 0;
  4267   0018A6  0E00               	movlw	0
  4268   0018A8  6E16               	movwf	lcd_4bits_initialze@counter^0,c
  4269   0018AA                     
  4270                           ;ECU_Layer/LCD/Lcd.c: 22:     if(lcd == ((void*)0)){
  4271   0018AA  5013               	movf	lcd_4bits_initialze@lcd^0,w,c
  4272   0018AC  1014               	iorwf	(lcd_4bits_initialze@lcd+1)^0,w,c
  4273   0018AE  A4D8               	btfss	status,2,c
  4274   0018B0  EF5C  F00C         	goto	u2561
  4275   0018B4  EF5E  F00C         	goto	u2560
  4276   0018B8                     u2561:
  4277   0018B8  EF62  F00C         	goto	l3399
  4278   0018BC                     u2560:
  4279   0018BC                     
  4280                           ;ECU_Layer/LCD/Lcd.c: 23:         ret = (Std_ReturnType)0x01;
  4281   0018BC  0E01               	movlw	1
  4282   0018BE  6E17               	movwf	lcd_4bits_initialze@ret^0,c
  4283                           
  4284                           ;ECU_Layer/LCD/Lcd.c: 24:     }
  4285   0018C0  EFE1  F00C         	goto	l3435
  4286   0018C4                     l3399:
  4287                           
  4288                           ;ECU_Layer/LCD/Lcd.c: 26:         ret = gpio_pin_intialize(&(lcd->RS_REG));
  4289   0018C4  0E04               	movlw	4
  4290   0018C6  2413               	addwf	lcd_4bits_initialze@lcd^0,w,c
  4291   0018C8  6E0A               	movwf	gpio_pin_intialize@str^0,c
  4292   0018CA  0E00               	movlw	0
  4293   0018CC  2014               	addwfc	(lcd_4bits_initialze@lcd+1)^0,w,c
  4294   0018CE  6E0B               	movwf	(gpio_pin_intialize@str+1)^0,c
  4295   0018D0  EC6D  F012         	call	_gpio_pin_intialize	;wreg free
  4296   0018D4  6E17               	movwf	lcd_4bits_initialze@ret^0,c
  4297                           
  4298                           ;ECU_Layer/LCD/Lcd.c: 27:         ret = gpio_pin_intialize(&(lcd->EN_BIT));
  4299   0018D6  0E05               	movlw	5
  4300   0018D8  2413               	addwf	lcd_4bits_initialze@lcd^0,w,c
  4301   0018DA  6E0A               	movwf	gpio_pin_intialize@str^0,c
  4302   0018DC  0E00               	movlw	0
  4303   0018DE  2014               	addwfc	(lcd_4bits_initialze@lcd+1)^0,w,c
  4304   0018E0  6E0B               	movwf	(gpio_pin_intialize@str+1)^0,c
  4305   0018E2  EC6D  F012         	call	_gpio_pin_intialize	;wreg free
  4306   0018E6  6E17               	movwf	lcd_4bits_initialze@ret^0,c
  4307   0018E8                     
  4308                           ;ECU_Layer/LCD/Lcd.c: 28:         for(counter = 0; counter<4; counter++){
  4309   0018E8  0E00               	movlw	0
  4310   0018EA  6E16               	movwf	lcd_4bits_initialze@counter^0,c
  4311   0018EC                     l3407:
  4312   0018EC  5016               	movf	lcd_4bits_initialze@counter^0,w,c
  4313   0018EE  2413               	addwf	lcd_4bits_initialze@lcd^0,w,c
  4314   0018F0  6E0A               	movwf	gpio_pin_intialize@str^0,c
  4315   0018F2  0E00               	movlw	0
  4316   0018F4  2014               	addwfc	(lcd_4bits_initialze@lcd+1)^0,w,c
  4317   0018F6  6E0B               	movwf	(gpio_pin_intialize@str+1)^0,c
  4318   0018F8  EC6D  F012         	call	_gpio_pin_intialize	;wreg free
  4319   0018FC                     
  4320                           ;ECU_Layer/LCD/Lcd.c: 30:         }
  4321   0018FC  2A16               	incf	lcd_4bits_initialze@counter^0,f,c
  4322   0018FE  0E03               	movlw	3
  4323   001900  6416               	cpfsgt	lcd_4bits_initialze@counter^0,c
  4324   001902  EF85  F00C         	goto	u2571
  4325   001906  EF87  F00C         	goto	u2570
  4326   00190A                     u2571:
  4327   00190A  EF76  F00C         	goto	l3407
  4328   00190E                     u2570:
  4329   00190E                     
  4330                           ;ECU_Layer/LCD/Lcd.c: 31:         _delay((unsigned long)((20)*(8000000U/4000.0)));
  4331   00190E  0E34               	movlw	52
  4332   001910  6E15               	movwf	??_lcd_4bits_initialze^0,c
  4333   001912  0EF2               	movlw	242
  4334   001914                     u3327:
  4335   001914  2EE8               	decfsz	wreg,f,c
  4336   001916  D7FE               	bra	u3327
  4337   001918  2E15               	decfsz	??_lcd_4bits_initialze^0,f,c
  4338   00191A  D7FC               	bra	u3327
  4339   00191C  C013  F00F         	movff	lcd_4bits_initialze@lcd,lcd_4bits_send_command@lcd
  4340   001920  C014  F010         	movff	lcd_4bits_initialze@lcd+1,lcd_4bits_send_command@lcd+1
  4341   001924  0E38               	movlw	56
  4342   001926  6E11               	movwf	lcd_4bits_send_command@command^0,c
  4343   001928  EC32  F012         	call	_lcd_4bits_send_command	;wreg free
  4344   00192C                     
  4345                           ;ECU_Layer/LCD/Lcd.c: 33:         _delay((unsigned long)((5)*(8000000U/4000.0)));
  4346   00192C  0E0D               	movlw	13
  4347   00192E  6E15               	movwf	??_lcd_4bits_initialze^0,c
  4348   001930  0EFC               	movlw	252
  4349   001932                     u3337:
  4350   001932  2EE8               	decfsz	wreg,f,c
  4351   001934  D7FE               	bra	u3337
  4352   001936  2E15               	decfsz	??_lcd_4bits_initialze^0,f,c
  4353   001938  D7FC               	bra	u3337
  4354   00193A  C013  F00F         	movff	lcd_4bits_initialze@lcd,lcd_4bits_send_command@lcd
  4355   00193E  C014  F010         	movff	lcd_4bits_initialze@lcd+1,lcd_4bits_send_command@lcd+1
  4356   001942  0E38               	movlw	56
  4357   001944  6E11               	movwf	lcd_4bits_send_command@command^0,c
  4358   001946  EC32  F012         	call	_lcd_4bits_send_command	;wreg free
  4359   00194A                     
  4360                           ;ECU_Layer/LCD/Lcd.c: 35:         _delay((unsigned long)((150)*(8000000U/4000000.0)));
  4361   00194A  0E64               	movlw	100
  4362   00194C                     u3347:
  4363   00194C  2EE8               	decfsz	wreg,f,c
  4364   00194E  D7FE               	bra	u3347
  4365   001950  C013  F00F         	movff	lcd_4bits_initialze@lcd,lcd_4bits_send_command@lcd
  4366   001954  C014  F010         	movff	lcd_4bits_initialze@lcd+1,lcd_4bits_send_command@lcd+1
  4367   001958  0E38               	movlw	56
  4368   00195A  6E11               	movwf	lcd_4bits_send_command@command^0,c
  4369   00195C  EC32  F012         	call	_lcd_4bits_send_command	;wreg free
  4370   001960  C013  F00F         	movff	lcd_4bits_initialze@lcd,lcd_4bits_send_command@lcd
  4371   001964  C014  F010         	movff	lcd_4bits_initialze@lcd+1,lcd_4bits_send_command@lcd+1
  4372   001968  0E01               	movlw	1
  4373   00196A  6E11               	movwf	lcd_4bits_send_command@command^0,c
  4374   00196C  EC32  F012         	call	_lcd_4bits_send_command	;wreg free
  4375   001970  C013  F00F         	movff	lcd_4bits_initialze@lcd,lcd_4bits_send_command@lcd
  4376   001974  C014  F010         	movff	lcd_4bits_initialze@lcd+1,lcd_4bits_send_command@lcd+1
  4377   001978  0E02               	movlw	2
  4378   00197A  6E11               	movwf	lcd_4bits_send_command@command^0,c
  4379   00197C  EC32  F012         	call	_lcd_4bits_send_command	;wreg free
  4380   001980  C013  F00F         	movff	lcd_4bits_initialze@lcd,lcd_4bits_send_command@lcd
  4381   001984  C014  F010         	movff	lcd_4bits_initialze@lcd+1,lcd_4bits_send_command@lcd+1
  4382   001988  0E06               	movlw	6
  4383   00198A  6E11               	movwf	lcd_4bits_send_command@command^0,c
  4384   00198C  EC32  F012         	call	_lcd_4bits_send_command	;wreg free
  4385   001990  C013  F00F         	movff	lcd_4bits_initialze@lcd,lcd_4bits_send_command@lcd
  4386   001994  C014  F010         	movff	lcd_4bits_initialze@lcd+1,lcd_4bits_send_command@lcd+1
  4387   001998  0E0C               	movlw	12
  4388   00199A  6E11               	movwf	lcd_4bits_send_command@command^0,c
  4389   00199C  EC32  F012         	call	_lcd_4bits_send_command	;wreg free
  4390   0019A0  C013  F00F         	movff	lcd_4bits_initialze@lcd,lcd_4bits_send_command@lcd
  4391   0019A4  C014  F010         	movff	lcd_4bits_initialze@lcd+1,lcd_4bits_send_command@lcd+1
  4392   0019A8  0E28               	movlw	40
  4393   0019AA  6E11               	movwf	lcd_4bits_send_command@command^0,c
  4394   0019AC  EC32  F012         	call	_lcd_4bits_send_command	;wreg free
  4395   0019B0                     
  4396                           ;ECU_Layer/LCD/Lcd.c: 43:         ret = lcd_4bits_send_command(lcd, 0x80);
  4397   0019B0  C013  F00F         	movff	lcd_4bits_initialze@lcd,lcd_4bits_send_command@lcd
  4398   0019B4  C014  F010         	movff	lcd_4bits_initialze@lcd+1,lcd_4bits_send_command@lcd+1
  4399   0019B8  0E80               	movlw	128
  4400   0019BA  6E11               	movwf	lcd_4bits_send_command@command^0,c
  4401   0019BC  EC32  F012         	call	_lcd_4bits_send_command	;wreg free
  4402   0019C0  6E17               	movwf	lcd_4bits_initialze@ret^0,c
  4403   0019C2                     l3435:
  4404                           
  4405                           ;ECU_Layer/LCD/Lcd.c: 46:     return ret;
  4406   0019C2  5017               	movf	lcd_4bits_initialze@ret^0,w,c
  4407   0019C4  0012               	return		;funcret
  4408   0019C6                     __end_of_lcd_4bits_initialze:
  4409                           	callstack 0
  4410                           
  4411 ;; *************** function _lcd_4bits_send_command *****************
  4412 ;; Defined at:
  4413 ;;		line 49 in file "ECU_Layer/LCD/Lcd.c"
  4414 ;; Parameters:    Size  Location     Type
  4415 ;;  lcd             2   14[COMRAM] PTR const struct .
  4416 ;;		 -> lcd_1(6), 
  4417 ;;  command         1   16[COMRAM] unsigned char 
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;  ret             1   17[COMRAM] unsigned char 
  4420 ;; Return value:  Size  Location     Type
  4421 ;;                  1    wreg      unsigned char 
  4422 ;; Registers used:
  4423 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4424 ;; Tracked objects:
  4425 ;;		On entry : 0/0
  4426 ;;		On exit  : 0/0
  4427 ;;		Unchanged: 0/0
  4428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4429 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4430 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4432 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4433 ;;Total ram usage:        4 bytes
  4434 ;; Hardware stack levels used: 1
  4435 ;; Hardware stack levels required when called: 2
  4436 ;; This function calls:
  4437 ;;		_enable_pin_4bits
  4438 ;;		_gpio_pin_write_logic
  4439 ;;		_send_4bits
  4440 ;; This function is called by:
  4441 ;;		_lcd_4bits_initialze
  4442 ;;		_lcd_4bits_set_cursor
  4443 ;;		_lcd_4bits_send_custom_char
  4444 ;; This function uses a non-reentrant model
  4445 ;;
  4446                           
  4447                           	psect	text26
  4448   002464                     __ptext26:
  4449                           	callstack 0
  4450   002464                     _lcd_4bits_send_command:
  4451                           	callstack 25
  4452   002464                     
  4453                           ;ECU_Layer/LCD/Lcd.c: 53:     if(lcd == ((void*)0)){
  4454   002464  500F               	movf	lcd_4bits_send_command@lcd^0,w,c
  4455   002466  1010               	iorwf	(lcd_4bits_send_command@lcd+1)^0,w,c
  4456   002468  A4D8               	btfss	status,2,c
  4457   00246A  EF39  F012         	goto	u2031
  4458   00246E  EF3B  F012         	goto	u2030
  4459   002472                     u2031:
  4460   002472  EF3F  F012         	goto	l2969
  4461   002476                     u2030:
  4462   002476                     
  4463                           ;ECU_Layer/LCD/Lcd.c: 54:         ret = (Std_ReturnType)0x01;
  4464   002476  0E01               	movlw	1
  4465   002478  6E12               	movwf	lcd_4bits_send_command@ret^0,c
  4466                           
  4467                           ;ECU_Layer/LCD/Lcd.c: 55:     }
  4468   00247A  EF6B  F012         	goto	l2971
  4469   00247E                     l2969:
  4470                           
  4471                           ;ECU_Layer/LCD/Lcd.c: 57:         ret = gpio_pin_write_logic(&(lcd->RS_REG), GPIO_LOW);
  4472   00247E  0E04               	movlw	4
  4473   002480  240F               	addwf	lcd_4bits_send_command@lcd^0,w,c
  4474   002482  6E01               	movwf	gpio_pin_write_logic@str^0,c
  4475   002484  0E00               	movlw	0
  4476   002486  2010               	addwfc	(lcd_4bits_send_command@lcd+1)^0,w,c
  4477   002488  6E02               	movwf	(gpio_pin_write_logic@str+1)^0,c
  4478   00248A  0E00               	movlw	0
  4479   00248C  6E03               	movwf	gpio_pin_write_logic@LOG^0,c
  4480   00248E  ECE3  F00C         	call	_gpio_pin_write_logic	;wreg free
  4481   002492  6E12               	movwf	lcd_4bits_send_command@ret^0,c
  4482                           
  4483                           ;ECU_Layer/LCD/Lcd.c: 58:         ret = send_4bits(lcd , command>>4);
  4484   002494  C00F  F00A         	movff	lcd_4bits_send_command@lcd,send_4bits@lcd
  4485   002498  C010  F00B         	movff	lcd_4bits_send_command@lcd+1,send_4bits@lcd+1
  4486   00249C  3811               	swapf	lcd_4bits_send_command@command^0,w,c
  4487   00249E  0B0F               	andlw	15
  4488   0024A0  6E0C               	movwf	send_4bits@command^0,c
  4489   0024A2  ECF9  F010         	call	_send_4bits	;wreg free
  4490   0024A6  6E12               	movwf	lcd_4bits_send_command@ret^0,c
  4491                           
  4492                           ;ECU_Layer/LCD/Lcd.c: 59:         ret = enable_pin_4bits(lcd);
  4493   0024A8  C00F  F00A         	movff	lcd_4bits_send_command@lcd,enable_pin_4bits@lcd
  4494   0024AC  C010  F00B         	movff	lcd_4bits_send_command@lcd+1,enable_pin_4bits@lcd+1
  4495   0024B0  ECA1  F012         	call	_enable_pin_4bits	;wreg free
  4496   0024B4  6E12               	movwf	lcd_4bits_send_command@ret^0,c
  4497                           
  4498                           ;ECU_Layer/LCD/Lcd.c: 60:         ret = send_4bits(lcd , command);
  4499   0024B6  C00F  F00A         	movff	lcd_4bits_send_command@lcd,send_4bits@lcd
  4500   0024BA  C010  F00B         	movff	lcd_4bits_send_command@lcd+1,send_4bits@lcd+1
  4501   0024BE  C011  F00C         	movff	lcd_4bits_send_command@command,send_4bits@command
  4502   0024C2  ECF9  F010         	call	_send_4bits	;wreg free
  4503   0024C6  6E12               	movwf	lcd_4bits_send_command@ret^0,c
  4504                           
  4505                           ;ECU_Layer/LCD/Lcd.c: 61:         ret = enable_pin_4bits(lcd);
  4506   0024C8  C00F  F00A         	movff	lcd_4bits_send_command@lcd,enable_pin_4bits@lcd
  4507   0024CC  C010  F00B         	movff	lcd_4bits_send_command@lcd+1,enable_pin_4bits@lcd+1
  4508   0024D0  ECA1  F012         	call	_enable_pin_4bits	;wreg free
  4509   0024D4  6E12               	movwf	lcd_4bits_send_command@ret^0,c
  4510   0024D6                     l2971:
  4511                           
  4512                           ;ECU_Layer/LCD/Lcd.c: 63:     return ret;
  4513   0024D6  5012               	movf	lcd_4bits_send_command@ret^0,w,c
  4514   0024D8  0012               	return		;funcret
  4515   0024DA                     __end_of_lcd_4bits_send_command:
  4516                           	callstack 0
  4517                           
  4518 ;; *************** function _send_4bits *****************
  4519 ;; Defined at:
  4520 ;;		line 178 in file "ECU_Layer/LCD/Lcd.c"
  4521 ;; Parameters:    Size  Location     Type
  4522 ;;  lcd             2    9[COMRAM] PTR const struct .
  4523 ;;		 -> lcd_1(6), 
  4524 ;;  command         1   11[COMRAM] unsigned char 
  4525 ;; Auto vars:     Size  Location     Type
  4526 ;;  ret             1   13[COMRAM] unsigned char 
  4527 ;;  counter         1   12[COMRAM] unsigned char 
  4528 ;; Return value:  Size  Location     Type
  4529 ;;                  1    wreg      unsigned char 
  4530 ;; Registers used:
  4531 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4532 ;; Tracked objects:
  4533 ;;		On entry : 0/0
  4534 ;;		On exit  : 0/0
  4535 ;;		Unchanged: 0/0
  4536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4537 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4538 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4540 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4541 ;;Total ram usage:        5 bytes
  4542 ;; Hardware stack levels used: 1
  4543 ;; Hardware stack levels required when called: 1
  4544 ;; This function calls:
  4545 ;;		_gpio_pin_write_logic
  4546 ;; This function is called by:
  4547 ;;		_lcd_4bits_send_command
  4548 ;;		_lcd_4bits_send_char
  4549 ;; This function uses a non-reentrant model
  4550 ;;
  4551                           
  4552                           	psect	text27
  4553   0021F2                     __ptext27:
  4554                           	callstack 0
  4555   0021F2                     _send_4bits:
  4556                           	callstack 25
  4557   0021F2                     
  4558                           ;ECU_Layer/LCD/Lcd.c: 180:     uint8 counter = 0;
  4559   0021F2  0E00               	movlw	0
  4560   0021F4  6E0D               	movwf	send_4bits@counter^0,c
  4561   0021F6                     
  4562                           ;ECU_Layer/LCD/Lcd.c: 182:     if(lcd == ((void*)0)){
  4563   0021F6  500A               	movf	send_4bits@lcd^0,w,c
  4564   0021F8  100B               	iorwf	(send_4bits@lcd+1)^0,w,c
  4565   0021FA  A4D8               	btfss	status,2,c
  4566   0021FC  EF02  F011         	goto	u1901
  4567   002200  EF04  F011         	goto	u1900
  4568   002204                     u1901:
  4569   002204  EF08  F011         	goto	l2879
  4570   002208                     u1900:
  4571   002208                     
  4572                           ;ECU_Layer/LCD/Lcd.c: 183:         ret = (Std_ReturnType)0x01;
  4573   002208  0E01               	movlw	1
  4574   00220A  6E0E               	movwf	send_4bits@ret^0,c
  4575                           
  4576                           ;ECU_Layer/LCD/Lcd.c: 184:     }
  4577   00220C  EF3B  F011         	goto	l2881
  4578   002210                     l2879:
  4579                           
  4580                           ;ECU_Layer/LCD/Lcd.c: 186:         ret = gpio_pin_write_logic(&(lcd->DATA_BITS[0]) , (co
      +                          mmand >> 0) & (uint8)0x01);
  4581   002210  C00A  F001         	movff	send_4bits@lcd,gpio_pin_write_logic@str
  4582   002214  C00B  F002         	movff	send_4bits@lcd+1,gpio_pin_write_logic@str+1
  4583   002218  500C               	movf	send_4bits@command^0,w,c
  4584   00221A  0B01               	andlw	1
  4585   00221C  6E03               	movwf	gpio_pin_write_logic@LOG^0,c
  4586   00221E  ECE3  F00C         	call	_gpio_pin_write_logic	;wreg free
  4587   002222  6E0E               	movwf	send_4bits@ret^0,c
  4588                           
  4589                           ;ECU_Layer/LCD/Lcd.c: 187:         ret = gpio_pin_write_logic(&(lcd->DATA_BITS[1]) , (co
      +                          mmand >> 1) & (uint8)0x01);
  4590   002224  0E01               	movlw	1
  4591   002226  240A               	addwf	send_4bits@lcd^0,w,c
  4592   002228  6E01               	movwf	gpio_pin_write_logic@str^0,c
  4593   00222A  0E00               	movlw	0
  4594   00222C  200B               	addwfc	(send_4bits@lcd+1)^0,w,c
  4595   00222E  6E02               	movwf	(gpio_pin_write_logic@str+1)^0,c
  4596   002230  90D8               	bcf	status,0,c
  4597   002232  300C               	rrcf	send_4bits@command^0,w,c
  4598   002234  0B01               	andlw	1
  4599   002236  6E03               	movwf	gpio_pin_write_logic@LOG^0,c
  4600   002238  ECE3  F00C         	call	_gpio_pin_write_logic	;wreg free
  4601   00223C  6E0E               	movwf	send_4bits@ret^0,c
  4602                           
  4603                           ;ECU_Layer/LCD/Lcd.c: 188:         ret = gpio_pin_write_logic(&(lcd->DATA_BITS[2]) , (co
      +                          mmand >> 2) & (uint8)0x01);
  4604   00223E  0E02               	movlw	2
  4605   002240  240A               	addwf	send_4bits@lcd^0,w,c
  4606   002242  6E01               	movwf	gpio_pin_write_logic@str^0,c
  4607   002244  0E00               	movlw	0
  4608   002246  200B               	addwfc	(send_4bits@lcd+1)^0,w,c
  4609   002248  6E02               	movwf	(gpio_pin_write_logic@str+1)^0,c
  4610   00224A  400C               	rrncf	send_4bits@command^0,w,c
  4611   00224C  42E8               	rrncf	wreg,f,c
  4612   00224E  0B3F               	andlw	63
  4613   002250  0B01               	andlw	1
  4614   002252  6E03               	movwf	gpio_pin_write_logic@LOG^0,c
  4615   002254  ECE3  F00C         	call	_gpio_pin_write_logic	;wreg free
  4616   002258  6E0E               	movwf	send_4bits@ret^0,c
  4617                           
  4618                           ;ECU_Layer/LCD/Lcd.c: 189:         ret = gpio_pin_write_logic(&(lcd->DATA_BITS[3]) , (co
      +                          mmand >> 3) & (uint8)0x01);
  4619   00225A  0E03               	movlw	3
  4620   00225C  240A               	addwf	send_4bits@lcd^0,w,c
  4621   00225E  6E01               	movwf	gpio_pin_write_logic@str^0,c
  4622   002260  0E00               	movlw	0
  4623   002262  200B               	addwfc	(send_4bits@lcd+1)^0,w,c
  4624   002264  6E02               	movwf	(gpio_pin_write_logic@str+1)^0,c
  4625   002266  380C               	swapf	send_4bits@command^0,w,c
  4626   002268  46E8               	rlncf	wreg,f,c
  4627   00226A  0B1F               	andlw	31
  4628   00226C  0B01               	andlw	1
  4629   00226E  6E03               	movwf	gpio_pin_write_logic@LOG^0,c
  4630   002270  ECE3  F00C         	call	_gpio_pin_write_logic	;wreg free
  4631   002274  6E0E               	movwf	send_4bits@ret^0,c
  4632   002276                     l2881:
  4633                           
  4634                           ;ECU_Layer/LCD/Lcd.c: 192:     return ret;
  4635   002276  500E               	movf	send_4bits@ret^0,w,c
  4636   002278  0012               	return		;funcret
  4637   00227A                     __end_of_send_4bits:
  4638                           	callstack 0
  4639                           
  4640 ;; *************** function _enable_pin_4bits *****************
  4641 ;; Defined at:
  4642 ;;		line 163 in file "ECU_Layer/LCD/Lcd.c"
  4643 ;; Parameters:    Size  Location     Type
  4644 ;;  lcd             2    9[COMRAM] PTR const struct .
  4645 ;;		 -> lcd_1(6), 
  4646 ;; Auto vars:     Size  Location     Type
  4647 ;;  ret             1   12[COMRAM] unsigned char 
  4648 ;; Return value:  Size  Location     Type
  4649 ;;                  1    wreg      unsigned char 
  4650 ;; Registers used:
  4651 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4652 ;; Tracked objects:
  4653 ;;		On entry : 0/0
  4654 ;;		On exit  : 0/0
  4655 ;;		Unchanged: 0/0
  4656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4657 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4658 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4659 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4660 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4661 ;;Total ram usage:        4 bytes
  4662 ;; Hardware stack levels used: 1
  4663 ;; Hardware stack levels required when called: 1
  4664 ;; This function calls:
  4665 ;;		_gpio_pin_write_logic
  4666 ;; This function is called by:
  4667 ;;		_lcd_4bits_send_command
  4668 ;;		_lcd_4bits_send_char
  4669 ;; This function uses a non-reentrant model
  4670 ;;
  4671                           
  4672                           	psect	text28
  4673   002542                     __ptext28:
  4674                           	callstack 0
  4675   002542                     _enable_pin_4bits:
  4676                           	callstack 25
  4677   002542                     
  4678                           ;ECU_Layer/LCD/Lcd.c: 167:     if(lcd == ((void*)0)){
  4679   002542  500A               	movf	enable_pin_4bits@lcd^0,w,c
  4680   002544  100B               	iorwf	(enable_pin_4bits@lcd+1)^0,w,c
  4681   002546  A4D8               	btfss	status,2,c
  4682   002548  EFA8  F012         	goto	u1911
  4683   00254C  EFAA  F012         	goto	u1910
  4684   002550                     u1911:
  4685   002550  EFAE  F012         	goto	l2891
  4686   002554                     u1910:
  4687   002554                     
  4688                           ;ECU_Layer/LCD/Lcd.c: 168:         ret = (Std_ReturnType)0x01;
  4689   002554  0E01               	movlw	1
  4690   002556  6E0D               	movwf	enable_pin_4bits@ret^0,c
  4691                           
  4692                           ;ECU_Layer/LCD/Lcd.c: 169:     }
  4693   002558  EFCA  F012         	goto	l2897
  4694   00255C                     l2891:
  4695   00255C  0E05               	movlw	5
  4696   00255E  240A               	addwf	enable_pin_4bits@lcd^0,w,c
  4697   002560  6E01               	movwf	gpio_pin_write_logic@str^0,c
  4698   002562  0E00               	movlw	0
  4699   002564  200B               	addwfc	(enable_pin_4bits@lcd+1)^0,w,c
  4700   002566  6E02               	movwf	(gpio_pin_write_logic@str+1)^0,c
  4701   002568  0E01               	movlw	1
  4702   00256A  6E03               	movwf	gpio_pin_write_logic@LOG^0,c
  4703   00256C  ECE3  F00C         	call	_gpio_pin_write_logic	;wreg free
  4704   002570                     
  4705                           ;ECU_Layer/LCD/Lcd.c: 172:         _delay((unsigned long)((5)*(8000000U/4000.0)));
  4706   002570  0E0D               	movlw	13
  4707   002572  6E0C               	movwf	??_enable_pin_4bits^0,c
  4708   002574  0EFC               	movlw	252
  4709   002576                     u3357:
  4710   002576  2EE8               	decfsz	wreg,f,c
  4711   002578  D7FE               	bra	u3357
  4712   00257A  2E0C               	decfsz	??_enable_pin_4bits^0,f,c
  4713   00257C  D7FC               	bra	u3357
  4714   00257E                     
  4715                           ;ECU_Layer/LCD/Lcd.c: 173:         ret = gpio_pin_write_logic(&(lcd->EN_BIT) ,GPIO_LOW);
  4716   00257E  0E05               	movlw	5
  4717   002580  240A               	addwf	enable_pin_4bits@lcd^0,w,c
  4718   002582  6E01               	movwf	gpio_pin_write_logic@str^0,c
  4719   002584  0E00               	movlw	0
  4720   002586  200B               	addwfc	(enable_pin_4bits@lcd+1)^0,w,c
  4721   002588  6E02               	movwf	(gpio_pin_write_logic@str+1)^0,c
  4722   00258A  0E00               	movlw	0
  4723   00258C  6E03               	movwf	gpio_pin_write_logic@LOG^0,c
  4724   00258E  ECE3  F00C         	call	_gpio_pin_write_logic	;wreg free
  4725   002592  6E0D               	movwf	enable_pin_4bits@ret^0,c
  4726   002594                     l2897:
  4727                           
  4728                           ;ECU_Layer/LCD/Lcd.c: 175:     return ret;
  4729   002594  500D               	movf	enable_pin_4bits@ret^0,w,c
  4730   002596  0012               	return		;funcret
  4731   002598                     __end_of_enable_pin_4bits:
  4732                           	callstack 0
  4733                           
  4734 ;; *************** function _keypad_initialize *****************
  4735 ;; Defined at:
  4736 ;;		line 19 in file "ECU_Layer/KEYPAD/KeyPad.c"
  4737 ;; Parameters:    Size  Location     Type
  4738 ;;  key_pad         2   13[COMRAM] PTR struct .
  4739 ;;		 -> keypad_1(8), 
  4740 ;; Auto vars:     Size  Location     Type
  4741 ;;  columns_coun    1   19[COMRAM] unsigned char 
  4742 ;;  rows_counter    1   18[COMRAM] unsigned char 
  4743 ;;  ret             1   17[COMRAM] unsigned char 
  4744 ;; Return value:  Size  Location     Type
  4745 ;;                  1    wreg      unsigned char 
  4746 ;; Registers used:
  4747 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4748 ;; Tracked objects:
  4749 ;;		On entry : 0/0
  4750 ;;		On exit  : 0/0
  4751 ;;		Unchanged: 0/0
  4752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4753 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4754 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4755 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4756 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4757 ;;Total ram usage:        7 bytes
  4758 ;; Hardware stack levels used: 1
  4759 ;; Hardware stack levels required when called: 2
  4760 ;; This function calls:
  4761 ;;		_gpio_pin_direction_intialize
  4762 ;;		_gpio_pin_intialize
  4763 ;; This function is called by:
  4764 ;;		_main
  4765 ;; This function uses a non-reentrant model
  4766 ;;
  4767                           
  4768                           	psect	text29
  4769   00227A                     __ptext29:
  4770                           	callstack 0
  4771   00227A                     _keypad_initialize:
  4772                           	callstack 28
  4773   00227A                     
  4774                           ;ECU_Layer/KEYPAD/KeyPad.c: 23:     uint8 rows_counter = 0;
  4775   00227A  0E00               	movlw	0
  4776   00227C  6E13               	movwf	keypad_initialize@rows_counter^0,c
  4777                           
  4778                           ;ECU_Layer/KEYPAD/KeyPad.c: 24:     uint8 columns_counter = 0;
  4779   00227E  0E00               	movlw	0
  4780   002280  6E14               	movwf	keypad_initialize@columns_counter^0,c
  4781   002282                     
  4782                           ;ECU_Layer/KEYPAD/KeyPad.c: 26:     if(key_pad == ((void*)0)){
  4783   002282  500E               	movf	keypad_initialize@key_pad^0,w,c
  4784   002284  100F               	iorwf	(keypad_initialize@key_pad+1)^0,w,c
  4785   002286  A4D8               	btfss	status,2,c
  4786   002288  EF48  F011         	goto	u2531
  4787   00228C  EF4A  F011         	goto	u2530
  4788   002290                     u2531:
  4789   002290  EF4E  F011         	goto	l3365
  4790   002294                     u2530:
  4791   002294                     
  4792                           ;ECU_Layer/KEYPAD/KeyPad.c: 27:         ret = (Std_ReturnType)0x01;
  4793   002294  0E01               	movlw	1
  4794   002296  6E12               	movwf	keypad_initialize@ret^0,c
  4795                           
  4796                           ;ECU_Layer/KEYPAD/KeyPad.c: 28:     }
  4797   002298  EF7B  F011         	goto	l3389
  4798   00229C                     l3365:
  4799                           
  4800                           ;ECU_Layer/KEYPAD/KeyPad.c: 31:         for(rows_counter=0; rows_counter<4; rows_counter
      +                          ++){
  4801   00229C  0E00               	movlw	0
  4802   00229E  6E13               	movwf	keypad_initialize@rows_counter^0,c
  4803   0022A0                     l3371:
  4804   0022A0  5013               	movf	keypad_initialize@rows_counter^0,w,c
  4805   0022A2  240E               	addwf	keypad_initialize@key_pad^0,w,c
  4806   0022A4  6E0A               	movwf	gpio_pin_intialize@str^0,c
  4807   0022A6  0E00               	movlw	0
  4808   0022A8  200F               	addwfc	(keypad_initialize@key_pad+1)^0,w,c
  4809   0022AA  6E0B               	movwf	(gpio_pin_intialize@str+1)^0,c
  4810   0022AC  EC6D  F012         	call	_gpio_pin_intialize	;wreg free
  4811   0022B0                     
  4812                           ;ECU_Layer/KEYPAD/KeyPad.c: 33:         }
  4813   0022B0  2A13               	incf	keypad_initialize@rows_counter^0,f,c
  4814   0022B2  0E03               	movlw	3
  4815   0022B4  6413               	cpfsgt	keypad_initialize@rows_counter^0,c
  4816   0022B6  EF5F  F011         	goto	u2541
  4817   0022BA  EF61  F011         	goto	u2540
  4818   0022BE                     u2541:
  4819   0022BE  EF50  F011         	goto	l3371
  4820   0022C2                     u2540:
  4821   0022C2                     
  4822                           ;ECU_Layer/KEYPAD/KeyPad.c: 35:         for(columns_counter=0; columns_counter<4; column
      +                          s_counter++){
  4823   0022C2  0E00               	movlw	0
  4824   0022C4  6E14               	movwf	keypad_initialize@columns_counter^0,c
  4825   0022C6                     l3383:
  4826                           
  4827                           ;ECU_Layer/KEYPAD/KeyPad.c: 36:             ret = gpio_pin_direction_intialize(&(key_pad
      +                          ->columns[columns_counter]));
  4828   0022C6  5014               	movf	keypad_initialize@columns_counter^0,w,c
  4829   0022C8  240E               	addwf	keypad_initialize@key_pad^0,w,c
  4830   0022CA  6E10               	movwf	??_keypad_initialize^0,c
  4831   0022CC  0E00               	movlw	0
  4832   0022CE  200F               	addwfc	(keypad_initialize@key_pad+1)^0,w,c
  4833   0022D0  6E11               	movwf	(??_keypad_initialize+1)^0,c
  4834   0022D2  0E04               	movlw	4
  4835   0022D4  2410               	addwf	??_keypad_initialize^0,w,c
  4836   0022D6  6E01               	movwf	gpio_pin_direction_intialize@str^0,c
  4837   0022D8  0E00               	movlw	0
  4838   0022DA  2011               	addwfc	(??_keypad_initialize+1)^0,w,c
  4839   0022DC  6E02               	movwf	(gpio_pin_direction_intialize@str+1)^0,c
  4840   0022DE  EC73  F00D         	call	_gpio_pin_direction_intialize	;wreg free
  4841   0022E2  6E12               	movwf	keypad_initialize@ret^0,c
  4842   0022E4                     
  4843                           ;ECU_Layer/KEYPAD/KeyPad.c: 37:         }
  4844   0022E4  2A14               	incf	keypad_initialize@columns_counter^0,f,c
  4845   0022E6  0E03               	movlw	3
  4846   0022E8  6414               	cpfsgt	keypad_initialize@columns_counter^0,c
  4847   0022EA  EF79  F011         	goto	u2551
  4848   0022EE  EF7B  F011         	goto	u2550
  4849   0022F2                     u2551:
  4850   0022F2  EF63  F011         	goto	l3383
  4851   0022F6                     u2550:
  4852   0022F6                     l3389:
  4853                           
  4854                           ;ECU_Layer/KEYPAD/KeyPad.c: 40:     return ret;
  4855   0022F6  5012               	movf	keypad_initialize@ret^0,w,c
  4856   0022F8  0012               	return		;funcret
  4857   0022FA                     __end_of_keypad_initialize:
  4858                           	callstack 0
  4859                           
  4860 ;; *************** function _gpio_pin_intialize *****************
  4861 ;; Defined at:
  4862 ;;		line 108 in file "MCAL_Layer/GPIO/hal_gpio.c"
  4863 ;; Parameters:    Size  Location     Type
  4864 ;;  str             2    9[COMRAM] PTR const struct .
  4865 ;;		 -> lcd_1.DATA_BITS(4), lcd_1(6), keypad_1.rows(4), keypad_1(8), 
  4866 ;;		 -> relay_initialize@rel_pin(1), led_intialize@LED_IN(1), 
  4867 ;; Auto vars:     Size  Location     Type
  4868 ;;  ret             1   12[COMRAM] unsigned char 
  4869 ;; Return value:  Size  Location     Type
  4870 ;;                  1    wreg      unsigned char 
  4871 ;; Registers used:
  4872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4873 ;; Tracked objects:
  4874 ;;		On entry : 0/0
  4875 ;;		On exit  : 0/0
  4876 ;;		Unchanged: 0/0
  4877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4878 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4879 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4880 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4881 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4882 ;;Total ram usage:        4 bytes
  4883 ;; Hardware stack levels used: 1
  4884 ;; Hardware stack levels required when called: 1
  4885 ;; This function calls:
  4886 ;;		_gpio_pin_direction_intialize
  4887 ;;		_gpio_pin_write_logic
  4888 ;; This function is called by:
  4889 ;;		_keypad_initialize
  4890 ;;		_lcd_4bits_initialze
  4891 ;;		_led_intialize
  4892 ;;		_relay_initialize
  4893 ;;		_seg_7_pins_intialize
  4894 ;;		_lcd_8bits_initialze
  4895 ;; This function uses a non-reentrant model
  4896 ;;
  4897                           
  4898                           	psect	text30
  4899   0024DA                     __ptext30:
  4900                           	callstack 0
  4901   0024DA                     _gpio_pin_intialize:
  4902                           	callstack 28
  4903   0024DA                     
  4904                           ;MCAL_Layer/GPIO/hal_gpio.c: 112:     if(str == ((void*)0) || (str->PIN > 7)){
  4905   0024DA  500A               	movf	gpio_pin_intialize@str^0,w,c
  4906   0024DC  100B               	iorwf	(gpio_pin_intialize@str+1)^0,w,c
  4907   0024DE  B4D8               	btfsc	status,2,c
  4908   0024E0  EF74  F012         	goto	u2341
  4909   0024E4  EF76  F012         	goto	u2340
  4910   0024E8                     u2341:
  4911   0024E8  EF85  F012         	goto	l3215
  4912   0024EC                     u2340:
  4913   0024EC  C00A  FFD9         	movff	gpio_pin_intialize@str,fsr2l
  4914   0024F0  C00B  FFDA         	movff	gpio_pin_intialize@str+1,fsr2h
  4915   0024F4  50DF               	movf	223,w,c
  4916   0024F6  0B07               	andlw	7
  4917   0024F8  6E0C               	movwf	??_gpio_pin_intialize^0,c
  4918   0024FA  0E07               	movlw	7
  4919   0024FC  640C               	cpfsgt	??_gpio_pin_intialize^0,c
  4920   0024FE  EF83  F012         	goto	u2351
  4921   002502  EF85  F012         	goto	u2350
  4922   002506                     u2351:
  4923   002506  EF89  F012         	goto	l3217
  4924   00250A                     u2350:
  4925   00250A                     l3215:
  4926                           
  4927                           ;MCAL_Layer/GPIO/hal_gpio.c: 113:         ret = (Std_ReturnType)0x01;
  4928   00250A  0E01               	movlw	1
  4929   00250C  6E0D               	movwf	gpio_pin_intialize@ret^0,c
  4930                           
  4931                           ;MCAL_Layer/GPIO/hal_gpio.c: 114:     }
  4932   00250E  EF9F  F012         	goto	l3219
  4933   002512                     l3217:
  4934                           
  4935                           ;MCAL_Layer/GPIO/hal_gpio.c: 116:        ret = gpio_pin_direction_intialize(str);
  4936   002512  C00A  F001         	movff	gpio_pin_intialize@str,gpio_pin_direction_intialize@str
  4937   002516  C00B  F002         	movff	gpio_pin_intialize@str+1,gpio_pin_direction_intialize@str+1
  4938   00251A  EC73  F00D         	call	_gpio_pin_direction_intialize	;wreg free
  4939   00251E  6E0D               	movwf	gpio_pin_intialize@ret^0,c
  4940                           
  4941                           ;MCAL_Layer/GPIO/hal_gpio.c: 117:        ret = gpio_pin_write_logic(str , str->Logic);
  4942   002520  C00A  F001         	movff	gpio_pin_intialize@str,gpio_pin_write_logic@str
  4943   002524  C00B  F002         	movff	gpio_pin_intialize@str+1,gpio_pin_write_logic@str+1
  4944   002528  C00A  FFD9         	movff	gpio_pin_intialize@str,fsr2l
  4945   00252C  C00B  FFDA         	movff	gpio_pin_intialize@str+1,fsr2h
  4946   002530  0E00               	movlw	0
  4947   002532  BEDF               	btfsc	indf2,7,c
  4948   002534  0E01               	movlw	1
  4949   002536  6E03               	movwf	gpio_pin_write_logic@LOG^0,c
  4950   002538  ECE3  F00C         	call	_gpio_pin_write_logic	;wreg free
  4951   00253C  6E0D               	movwf	gpio_pin_intialize@ret^0,c
  4952   00253E                     l3219:
  4953                           
  4954                           ;MCAL_Layer/GPIO/hal_gpio.c: 120:     return ret;
  4955   00253E  500D               	movf	gpio_pin_intialize@ret^0,w,c
  4956   002540  0012               	return		;funcret
  4957   002542                     __end_of_gpio_pin_intialize:
  4958                           	callstack 0
  4959                           
  4960 ;; *************** function _gpio_pin_write_logic *****************
  4961 ;; Defined at:
  4962 ;;		line 58 in file "MCAL_Layer/GPIO/hal_gpio.c"
  4963 ;; Parameters:    Size  Location     Type
  4964 ;;  str             2    0[COMRAM] PTR const struct .
  4965 ;;		 -> lcd_1.DATA_BITS(4), lcd_1(6), keypad_1.rows(4), keypad_1(8), 
  4966 ;;		 -> relay_off@rel_pin(1), relay_on@rel_pin(1), relay_initialize@rel_pin(1), led_turn_off@LED_IN(1), 
  4967 ;;		 -> led_turn_on@LED_IN(1), led_intialize@LED_IN(1), 
  4968 ;;  LOG             1    2[COMRAM] enum E2989
  4969 ;; Auto vars:     Size  Location     Type
  4970 ;;  ret             1    0        unsigned char 
  4971 ;; Return value:  Size  Location     Type
  4972 ;;                  1    wreg      unsigned char 
  4973 ;; Registers used:
  4974 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4975 ;; Tracked objects:
  4976 ;;		On entry : 0/0
  4977 ;;		On exit  : 0/0
  4978 ;;		Unchanged: 0/0
  4979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4980 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4982 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4983 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4984 ;;Total ram usage:        9 bytes
  4985 ;; Hardware stack levels used: 1
  4986 ;; This function calls:
  4987 ;;		Nothing
  4988 ;; This function is called by:
  4989 ;;		_keypad_read_value
  4990 ;;		_turnoff_all_rows
  4991 ;;		_gpio_pin_intialize
  4992 ;;		_lcd_4bits_send_command
  4993 ;;		_lcd_4bits_send_char
  4994 ;;		_enable_pin_4bits
  4995 ;;		_send_4bits
  4996 ;;		_led_turn_on
  4997 ;;		_led_turn_off
  4998 ;;		_dc_motor_move_forward
  4999 ;;		_dc_motor_move_backward
  5000 ;;		_dc_motor_stop
  5001 ;;		_relay_on
  5002 ;;		_relay_off
  5003 ;;		_seg_7_pins_write
  5004 ;;		_lcd_8bits_send_command
  5005 ;;		_lcd_8bits_send_char
  5006 ;;		_enable_pin_8bits
  5007 ;; This function uses a non-reentrant model
  5008 ;;
  5009                           
  5010                           	psect	text31
  5011   0019C6                     __ptext31:
  5012                           	callstack 0
  5013   0019C6                     _gpio_pin_write_logic:
  5014                           	callstack 25
  5015   0019C6                     
  5016                           ;MCAL_Layer/GPIO/hal_gpio.c: 61:     if(str == ((void*)0) || (str->PIN > 7)){
  5017   0019C6  5001               	movf	gpio_pin_write_logic@str^0,w,c
  5018   0019C8  1002               	iorwf	(gpio_pin_write_logic@str+1)^0,w,c
  5019   0019CA  B4D8               	btfsc	status,2,c
  5020   0019CC  EFEA  F00C         	goto	u1711
  5021   0019D0  EFEC  F00C         	goto	u1710
  5022   0019D4                     u1711:
  5023   0019D4  EFFB  F00C         	goto	l2757
  5024   0019D8                     u1710:
  5025   0019D8  C001  FFD9         	movff	gpio_pin_write_logic@str,fsr2l
  5026   0019DC  C002  FFDA         	movff	gpio_pin_write_logic@str+1,fsr2h
  5027   0019E0  50DF               	movf	223,w,c
  5028   0019E2  0B07               	andlw	7
  5029   0019E4  6E04               	movwf	??_gpio_pin_write_logic^0,c
  5030   0019E6  0E07               	movlw	7
  5031   0019E8  6404               	cpfsgt	??_gpio_pin_write_logic^0,c
  5032   0019EA  EFF9  F00C         	goto	u1721
  5033   0019EE  EFFB  F00C         	goto	u1720
  5034   0019F2                     u1721:
  5035   0019F2  EF5C  F00D         	goto	l2765
  5036   0019F6                     u1720:
  5037   0019F6                     l2757:
  5038                           
  5039                           ;MCAL_Layer/GPIO/hal_gpio.c: 63:     }
  5040   0019F6  EF71  F00D         	goto	l2767
  5041   0019FA                     l2759:
  5042                           
  5043                           ;MCAL_Layer/GPIO/hal_gpio.c: 68:                 (*LAT_REG[str->PORT] |= (0x01 << str->P
      +                          IN));
  5044   0019FA  C001  FFD9         	movff	gpio_pin_write_logic@str,fsr2l
  5045   0019FE  C002  FFDA         	movff	gpio_pin_write_logic@str+1,fsr2h
  5046   001A02  50DF               	movf	223,w,c
  5047   001A04  0B07               	andlw	7
  5048   001A06  6E04               	movwf	??_gpio_pin_write_logic^0,c
  5049   001A08  0E01               	movlw	1
  5050   001A0A  6E05               	movwf	(??_gpio_pin_write_logic+1)^0,c
  5051   001A0C  2A04               	incf	??_gpio_pin_write_logic^0,f,c
  5052   001A0E  EF0B  F00D         	goto	u1734
  5053   001A12                     u1735:
  5054   001A12  90D8               	bcf	status,0,c
  5055   001A14  3605               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  5056   001A16                     u1734:
  5057   001A16  2E04               	decfsz	??_gpio_pin_write_logic^0,f,c
  5058   001A18  EF09  F00D         	goto	u1735
  5059   001A1C  C001  FFD9         	movff	gpio_pin_write_logic@str,fsr2l
  5060   001A20  C002  FFDA         	movff	gpio_pin_write_logic@str+1,fsr2h
  5061   001A24  30DF               	rrcf	223,w,c
  5062   001A26  32E8               	rrcf	wreg,f,c
  5063   001A28  32E8               	rrcf	wreg,f,c
  5064   001A2A  0B07               	andlw	7
  5065   001A2C  6E06               	movwf	(??_gpio_pin_write_logic+2)^0,c
  5066   001A2E  5006               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  5067   001A30  0D02               	mullw	2
  5068   001A32  0E94               	movlw	low _LAT_REG
  5069   001A34  24F3               	addwf	243,w,c
  5070   001A36  6ED9               	movwf	fsr2l,c
  5071   001A38  0E00               	movlw	high _LAT_REG
  5072   001A3A  20F4               	addwfc	prodh,w,c
  5073   001A3C  6EDA               	movwf	fsr2h,c
  5074   001A3E  CFDE F007          	movff	postinc2,??_gpio_pin_write_logic+3
  5075   001A42  CFDD F008          	movff	postdec2,??_gpio_pin_write_logic+4
  5076   001A46  C007  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  5077   001A4A  C008  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  5078   001A4E  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  5079   001A50  12DF               	iorwf	indf2,f,c
  5080                           
  5081                           ;MCAL_Layer/GPIO/hal_gpio.c: 69:                 break;
  5082   001A52  EF71  F00D         	goto	l2767
  5083   001A56                     l2761:
  5084                           
  5085                           ;MCAL_Layer/GPIO/hal_gpio.c: 71:                 (*LAT_REG[str->PORT] &= ~(0x01 << str->
      +                          PIN));
  5086   001A56  C001  FFD9         	movff	gpio_pin_write_logic@str,fsr2l
  5087   001A5A  C002  FFDA         	movff	gpio_pin_write_logic@str+1,fsr2h
  5088   001A5E  50DF               	movf	223,w,c
  5089   001A60  0B07               	andlw	7
  5090   001A62  6E04               	movwf	??_gpio_pin_write_logic^0,c
  5091   001A64  0E01               	movlw	1
  5092   001A66  6E05               	movwf	(??_gpio_pin_write_logic+1)^0,c
  5093   001A68  2A04               	incf	??_gpio_pin_write_logic^0,f,c
  5094   001A6A  EF39  F00D         	goto	u1744
  5095   001A6E                     u1745:
  5096   001A6E  90D8               	bcf	status,0,c
  5097   001A70  3605               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  5098   001A72                     u1744:
  5099   001A72  2E04               	decfsz	??_gpio_pin_write_logic^0,f,c
  5100   001A74  EF37  F00D         	goto	u1745
  5101   001A78  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  5102   001A7A  0AFF               	xorlw	255
  5103   001A7C  6E06               	movwf	(??_gpio_pin_write_logic+2)^0,c
  5104   001A7E  C001  FFD9         	movff	gpio_pin_write_logic@str,fsr2l
  5105   001A82  C002  FFDA         	movff	gpio_pin_write_logic@str+1,fsr2h
  5106   001A86  30DF               	rrcf	223,w,c
  5107   001A88  32E8               	rrcf	wreg,f,c
  5108   001A8A  32E8               	rrcf	wreg,f,c
  5109   001A8C  0B07               	andlw	7
  5110   001A8E  6E07               	movwf	(??_gpio_pin_write_logic+3)^0,c
  5111   001A90  5007               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  5112   001A92  0D02               	mullw	2
  5113   001A94  0E94               	movlw	low _LAT_REG
  5114   001A96  24F3               	addwf	243,w,c
  5115   001A98  6ED9               	movwf	fsr2l,c
  5116   001A9A  0E00               	movlw	high _LAT_REG
  5117   001A9C  20F4               	addwfc	prodh,w,c
  5118   001A9E  6EDA               	movwf	fsr2h,c
  5119   001AA0  CFDE F008          	movff	postinc2,??_gpio_pin_write_logic+4
  5120   001AA4  CFDD F009          	movff	postdec2,??_gpio_pin_write_logic+5
  5121   001AA8  C008  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  5122   001AAC  C009  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  5123   001AB0  5006               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  5124   001AB2  16DF               	andwf	indf2,f,c
  5125                           
  5126                           ;MCAL_Layer/GPIO/hal_gpio.c: 72:                 break;
  5127   001AB4  EF71  F00D         	goto	l2767
  5128   001AB8                     l2765:
  5129   001AB8  5003               	movf	gpio_pin_write_logic@LOG^0,w,c
  5130   001ABA  6E04               	movwf	??_gpio_pin_write_logic^0,c
  5131   001ABC  6A05               	clrf	(??_gpio_pin_write_logic+1)^0,c
  5132                           
  5133                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5134                           ; Switch size 1, requested type "simple"
  5135                           ; Number of cases is 1, Range of values is 0 to 0
  5136                           ; switch strategies available:
  5137                           ; Name         Instructions Cycles
  5138                           ; simple_byte            4     3 (average)
  5139                           ;	Chosen strategy is simple_byte
  5140   001ABE  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  5141   001AC0  0A00               	xorlw	0	; case 0
  5142   001AC2  B4D8               	btfsc	status,2,c
  5143   001AC4  EF66  F00D         	goto	l4177
  5144   001AC8  EFFB  F00C         	goto	l2757
  5145   001ACC                     l4177:
  5146                           
  5147                           ; Switch size 1, requested type "simple"
  5148                           ; Number of cases is 2, Range of values is 0 to 1
  5149                           ; switch strategies available:
  5150                           ; Name         Instructions Cycles
  5151                           ; simple_byte            7     4 (average)
  5152                           ;	Chosen strategy is simple_byte
  5153   001ACC  5004               	movf	??_gpio_pin_write_logic^0,w,c
  5154   001ACE  0A00               	xorlw	0	; case 0
  5155   001AD0  B4D8               	btfsc	status,2,c
  5156   001AD2  EF2B  F00D         	goto	l2761
  5157   001AD6  0A01               	xorlw	1	; case 1
  5158   001AD8  B4D8               	btfsc	status,2,c
  5159   001ADA  EFFD  F00C         	goto	l2759
  5160   001ADE  EFFB  F00C         	goto	l2757
  5161   001AE2                     l2767:
  5162                           
  5163                           ;MCAL_Layer/GPIO/hal_gpio.c: 78:     return ret;
  5164   001AE2  0E01               	movlw	1
  5165   001AE4  0012               	return		;funcret
  5166   001AE6                     __end_of_gpio_pin_write_logic:
  5167                           	callstack 0
  5168                           
  5169 ;; *************** function _gpio_pin_direction_intialize *****************
  5170 ;; Defined at:
  5171 ;;		line 20 in file "MCAL_Layer/GPIO/hal_gpio.c"
  5172 ;; Parameters:    Size  Location     Type
  5173 ;;  str             2    0[COMRAM] PTR const struct .
  5174 ;;		 -> lcd_1.DATA_BITS(4), lcd_1(6), keypad_1.columns(4), keypad_1.rows(4), 
  5175 ;;		 -> keypad_1(8), relay_initialize@rel_pin(1), led_intialize@LED_IN(1), 
  5176 ;; Auto vars:     Size  Location     Type
  5177 ;;  ret             1    0        unsigned char 
  5178 ;; Return value:  Size  Location     Type
  5179 ;;                  1    wreg      unsigned char 
  5180 ;; Registers used:
  5181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5182 ;; Tracked objects:
  5183 ;;		On entry : 0/0
  5184 ;;		On exit  : 0/0
  5185 ;;		Unchanged: 0/0
  5186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5187 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5189 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5190 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5191 ;;Total ram usage:        8 bytes
  5192 ;; Hardware stack levels used: 1
  5193 ;; This function calls:
  5194 ;;		Nothing
  5195 ;; This function is called by:
  5196 ;;		_keypad_initialize
  5197 ;;		_gpio_pin_intialize
  5198 ;;		_button_initialize
  5199 ;;		_dc_motor_initialize
  5200 ;; This function uses a non-reentrant model
  5201 ;;
  5202                           
  5203                           	psect	text32
  5204   001AE6                     __ptext32:
  5205                           	callstack 0
  5206   001AE6                     _gpio_pin_direction_intialize:
  5207                           	callstack 28
  5208   001AE6                     
  5209                           ;MCAL_Layer/GPIO/hal_gpio.c: 24:     if(str == ((void*)0) || (str->PIN > 7)){
  5210   001AE6  5001               	movf	gpio_pin_direction_intialize@str^0,w,c
  5211   001AE8  1002               	iorwf	(gpio_pin_direction_intialize@str+1)^0,w,c
  5212   001AEA  B4D8               	btfsc	status,2,c
  5213   001AEC  EF7A  F00D         	goto	u2181
  5214   001AF0  EF7C  F00D         	goto	u2180
  5215   001AF4                     u2181:
  5216   001AF4  EF8B  F00D         	goto	l3097
  5217   001AF8                     u2180:
  5218   001AF8  C001  FFD9         	movff	gpio_pin_direction_intialize@str,fsr2l
  5219   001AFC  C002  FFDA         	movff	gpio_pin_direction_intialize@str+1,fsr2h
  5220   001B00  50DF               	movf	223,w,c
  5221   001B02  0B07               	andlw	7
  5222   001B04  6E03               	movwf	??_gpio_pin_direction_intialize^0,c
  5223   001B06  0E07               	movlw	7
  5224   001B08  6403               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  5225   001B0A  EF89  F00D         	goto	u2191
  5226   001B0E  EF8B  F00D         	goto	u2190
  5227   001B12                     u2191:
  5228   001B12  EF8D  F00D         	goto	l3099
  5229   001B16                     u2190:
  5230   001B16                     l3097:
  5231                           
  5232                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:     }
  5233   001B16  EF00  F00E         	goto	l214
  5234   001B1A                     l3099:
  5235                           
  5236                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:         if(GPIO_DIRECTION_OUTPUT == str->Direction){
  5237   001B1A  C001  FFD9         	movff	gpio_pin_direction_intialize@str,fsr2l
  5238   001B1E  C002  FFDA         	movff	gpio_pin_direction_intialize@str+1,fsr2h
  5239   001B22  BCDF               	btfsc	indf2,6,c
  5240   001B24  EF96  F00D         	goto	u2201
  5241   001B28  EF98  F00D         	goto	u2200
  5242   001B2C                     u2201:
  5243   001B2C  EFC9  F00D         	goto	l3103
  5244   001B30                     u2200:
  5245   001B30                     
  5246                           ;MCAL_Layer/GPIO/hal_gpio.c: 30:             (*TRIS_REG[str->PORT] &= ~(0x01 << str->PIN
      +                          ));
  5247   001B30  C001  FFD9         	movff	gpio_pin_direction_intialize@str,fsr2l
  5248   001B34  C002  FFDA         	movff	gpio_pin_direction_intialize@str+1,fsr2h
  5249   001B38  50DF               	movf	223,w,c
  5250   001B3A  0B07               	andlw	7
  5251   001B3C  6E03               	movwf	??_gpio_pin_direction_intialize^0,c
  5252   001B3E  0E01               	movlw	1
  5253   001B40  6E04               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  5254   001B42  2A03               	incf	??_gpio_pin_direction_intialize^0,f,c
  5255   001B44  EFA6  F00D         	goto	u2214
  5256   001B48                     u2215:
  5257   001B48  90D8               	bcf	status,0,c
  5258   001B4A  3604               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  5259   001B4C                     u2214:
  5260   001B4C  2E03               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  5261   001B4E  EFA4  F00D         	goto	u2215
  5262   001B52  5004               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  5263   001B54  0AFF               	xorlw	255
  5264   001B56  6E05               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  5265   001B58  C001  FFD9         	movff	gpio_pin_direction_intialize@str,fsr2l
  5266   001B5C  C002  FFDA         	movff	gpio_pin_direction_intialize@str+1,fsr2h
  5267   001B60  30DF               	rrcf	223,w,c
  5268   001B62  32E8               	rrcf	wreg,f,c
  5269   001B64  32E8               	rrcf	wreg,f,c
  5270   001B66  0B07               	andlw	7
  5271   001B68  6E06               	movwf	(??_gpio_pin_direction_intialize+3)^0,c
  5272   001B6A  5006               	movf	(??_gpio_pin_direction_intialize+3)^0,w,c
  5273   001B6C  0D02               	mullw	2
  5274   001B6E  0E8A               	movlw	low _TRIS_REG
  5275   001B70  24F3               	addwf	243,w,c
  5276   001B72  6ED9               	movwf	fsr2l,c
  5277   001B74  0E00               	movlw	high _TRIS_REG
  5278   001B76  20F4               	addwfc	prodh,w,c
  5279   001B78  6EDA               	movwf	fsr2h,c
  5280   001B7A  CFDE F007          	movff	postinc2,??_gpio_pin_direction_intialize+4
  5281   001B7E  CFDD F008          	movff	postdec2,??_gpio_pin_direction_intialize+5
  5282   001B82  C007  FFD9         	movff	??_gpio_pin_direction_intialize+4,fsr2l
  5283   001B86  C008  FFDA         	movff	??_gpio_pin_direction_intialize+5,fsr2h
  5284   001B8A  5005               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  5285   001B8C  16DF               	andwf	indf2,f,c
  5286                           
  5287                           ;MCAL_Layer/GPIO/hal_gpio.c: 31:         }
  5288   001B8E  EF00  F00E         	goto	l214
  5289   001B92                     l3103:
  5290   001B92  C001  FFD9         	movff	gpio_pin_direction_intialize@str,fsr2l
  5291   001B96  C002  FFDA         	movff	gpio_pin_direction_intialize@str+1,fsr2h
  5292   001B9A  ACDF               	btfss	indf2,6,c
  5293   001B9C  EFD2  F00D         	goto	u2221
  5294   001BA0  EFD4  F00D         	goto	u2220
  5295   001BA4                     u2221:
  5296   001BA4  EF8B  F00D         	goto	l3097
  5297   001BA8                     u2220:
  5298   001BA8                     
  5299                           ;MCAL_Layer/GPIO/hal_gpio.c: 34:             (*TRIS_REG[str->PORT] |= (0x01 << str->PIN)
      +                          );
  5300   001BA8  C001  FFD9         	movff	gpio_pin_direction_intialize@str,fsr2l
  5301   001BAC  C002  FFDA         	movff	gpio_pin_direction_intialize@str+1,fsr2h
  5302   001BB0  50DF               	movf	223,w,c
  5303   001BB2  0B07               	andlw	7
  5304   001BB4  6E03               	movwf	??_gpio_pin_direction_intialize^0,c
  5305   001BB6  0E01               	movlw	1
  5306   001BB8  6E04               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  5307   001BBA  2A03               	incf	??_gpio_pin_direction_intialize^0,f,c
  5308   001BBC  EFE2  F00D         	goto	u2234
  5309   001BC0                     u2235:
  5310   001BC0  90D8               	bcf	status,0,c
  5311   001BC2  3604               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  5312   001BC4                     u2234:
  5313   001BC4  2E03               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  5314   001BC6  EFE0  F00D         	goto	u2235
  5315   001BCA  C001  FFD9         	movff	gpio_pin_direction_intialize@str,fsr2l
  5316   001BCE  C002  FFDA         	movff	gpio_pin_direction_intialize@str+1,fsr2h
  5317   001BD2  30DF               	rrcf	223,w,c
  5318   001BD4  32E8               	rrcf	wreg,f,c
  5319   001BD6  32E8               	rrcf	wreg,f,c
  5320   001BD8  0B07               	andlw	7
  5321   001BDA  6E05               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  5322   001BDC  5005               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  5323   001BDE  0D02               	mullw	2
  5324   001BE0  0E8A               	movlw	low _TRIS_REG
  5325   001BE2  24F3               	addwf	243,w,c
  5326   001BE4  6ED9               	movwf	fsr2l,c
  5327   001BE6  0E00               	movlw	high _TRIS_REG
  5328   001BE8  20F4               	addwfc	prodh,w,c
  5329   001BEA  6EDA               	movwf	fsr2h,c
  5330   001BEC  CFDE F006          	movff	postinc2,??_gpio_pin_direction_intialize+3
  5331   001BF0  CFDD F007          	movff	postdec2,??_gpio_pin_direction_intialize+4
  5332   001BF4  C006  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  5333   001BF8  C007  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  5334   001BFC  5004               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  5335   001BFE  12DF               	iorwf	indf2,f,c
  5336   001C00                     l214:
  5337                           
  5338                           ;MCAL_Layer/GPIO/hal_gpio.c: 40:     return ret;
  5339   001C00  0E01               	movlw	1
  5340   001C02  0012               	return		;funcret
  5341   001C04                     __end_of_gpio_pin_direction_intialize:
  5342                           	callstack 0
  5343                           
  5344 ;; *************** function _detect_operation *****************
  5345 ;; Defined at:
  5346 ;;		line 179 in file "Application.c"
  5347 ;; Parameters:    Size  Location     Type
  5348 ;;  operation_2     2    0[COMRAM] PTR unsigned char 
  5349 ;;		 -> operation_l(1), 
  5350 ;;  value__1        1    2[COMRAM] unsigned char 
  5351 ;;  value__2        1    3[COMRAM] unsigned char 
  5352 ;;  result__        2    4[COMRAM] PTR unsigned char 
  5353 ;;		 -> result(1), 
  5354 ;; Auto vars:     Size  Location     Type
  5355 ;;  ret             1    0        unsigned char 
  5356 ;; Return value:  Size  Location     Type
  5357 ;;                  1    wreg      unsigned char 
  5358 ;; Registers used:
  5359 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5360 ;; Tracked objects:
  5361 ;;		On entry : 0/0
  5362 ;;		On exit  : 0/0
  5363 ;;		Unchanged: 0/0
  5364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5365 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5367 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5368 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5369 ;;Total ram usage:        8 bytes
  5370 ;; Hardware stack levels used: 1
  5371 ;; This function calls:
  5372 ;;		Nothing
  5373 ;; This function is called by:
  5374 ;;		_main
  5375 ;; This function uses a non-reentrant model
  5376 ;;
  5377                           
  5378                           	psect	text33
  5379   002374                     __ptext33:
  5380                           	callstack 0
  5381   002374                     _detect_operation:
  5382                           	callstack 30
  5383   002374                     
  5384                           ;Application.c: 181:     switch(*operation_2){
  5385   002374  EFD8  F011         	goto	l3529
  5386   002378                     l3521:
  5387                           
  5388                           ;Application.c: 183:         *result__ = (value__1 + value__2);
  5389   002378  5003               	movf	detect_operation@value__1^0,w,c
  5390   00237A  2404               	addwf	detect_operation@value__2^0,w,c
  5391   00237C  C005  FFD9         	movff	detect_operation@result__,fsr2l
  5392   002380  C006  FFDA         	movff	detect_operation@result__+1,fsr2h
  5393   002384  6EDF               	movwf	indf2,c
  5394                           
  5395                           ;Application.c: 184:         break;
  5396   002386  EFF5  F011         	goto	l3531
  5397   00238A                     l3523:
  5398                           
  5399                           ;Application.c: 186:         *result__ = (value__1 * value__2);
  5400   00238A  5003               	movf	detect_operation@value__1^0,w,c
  5401   00238C  0204               	mulwf	detect_operation@value__2^0,c
  5402   00238E  C005  FFD9         	movff	detect_operation@result__,fsr2l
  5403   002392  C006  FFDA         	movff	detect_operation@result__+1,fsr2h
  5404   002396  CFF3 FFDF          	movff	prodl,indf2
  5405                           
  5406                           ;Application.c: 187:         break;
  5407   00239A  EFF5  F011         	goto	l3531
  5408   00239E                     l3525:
  5409                           
  5410                           ;Application.c: 189:         *result__ = (value__1 - value__2);
  5411   00239E  5004               	movf	detect_operation@value__2^0,w,c
  5412   0023A0  5C03               	subwf	detect_operation@value__1^0,w,c
  5413   0023A2  C005  FFD9         	movff	detect_operation@result__,fsr2l
  5414   0023A6  C006  FFDA         	movff	detect_operation@result__+1,fsr2h
  5415   0023AA  6EDF               	movwf	indf2,c
  5416                           
  5417                           ;Application.c: 190:         break;
  5418   0023AC  EFF5  F011         	goto	l3531
  5419   0023B0                     l3529:
  5420   0023B0  C001  FFD9         	movff	detect_operation@operation_2,fsr2l
  5421   0023B4  C002  FFDA         	movff	detect_operation@operation_2+1,fsr2h
  5422   0023B8  50DF               	movf	indf2,w,c
  5423   0023BA  6E07               	movwf	??_detect_operation^0,c
  5424   0023BC  6A08               	clrf	(??_detect_operation+1)^0,c
  5425                           
  5426                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5427                           ; Switch size 1, requested type "simple"
  5428                           ; Number of cases is 1, Range of values is 0 to 0
  5429                           ; switch strategies available:
  5430                           ; Name         Instructions Cycles
  5431                           ; simple_byte            4     3 (average)
  5432                           ;	Chosen strategy is simple_byte
  5433   0023BE  5008               	movf	(??_detect_operation+1)^0,w,c
  5434   0023C0  0A00               	xorlw	0	; case 0
  5435   0023C2  B4D8               	btfsc	status,2,c
  5436   0023C4  EFE6  F011         	goto	l4179
  5437   0023C8  EFF5  F011         	goto	l3531
  5438   0023CC                     l4179:
  5439                           
  5440                           ; Switch size 1, requested type "simple"
  5441                           ; Number of cases is 3, Range of values is 42 to 45
  5442                           ; switch strategies available:
  5443                           ; Name         Instructions Cycles
  5444                           ; simple_byte           10     6 (average)
  5445                           ;	Chosen strategy is simple_byte
  5446   0023CC  5007               	movf	??_detect_operation^0,w,c
  5447   0023CE  0A2A               	xorlw	42	; case 42
  5448   0023D0  B4D8               	btfsc	status,2,c
  5449   0023D2  EFC5  F011         	goto	l3523
  5450   0023D6  0A01               	xorlw	1	; case 43
  5451   0023D8  B4D8               	btfsc	status,2,c
  5452   0023DA  EFBC  F011         	goto	l3521
  5453   0023DE  0A06               	xorlw	6	; case 45
  5454   0023E0  B4D8               	btfsc	status,2,c
  5455   0023E2  EFCF  F011         	goto	l3525
  5456   0023E6  EFF5  F011         	goto	l3531
  5457   0023EA                     l3531:
  5458                           
  5459                           ;Application.c: 194:     return ret;
  5460   0023EA  0E01               	movlw	1
  5461   0023EC  0012               	return		;funcret
  5462   0023EE                     __end_of_detect_operation:
  5463                           	callstack 0
  5464                           
  5465                           	psect	rparam
  5466   000000                     
  5467                           	psect	config
  5468                           
  5469                           ; Padding undefined space
  5470   300000                     	org	3145728
  5471   300000  FF                 	db	255
  5472                           
  5473                           ;Config register CONFIG1H @ 0x300001
  5474                           ;	Oscillator Selection bits
  5475                           ;	OSC = RCIO6, External RC oscillator, port function on RA6
  5476                           ;	Fail-Safe Clock Monitor Enable bit
  5477                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5478                           ;	Internal/External Oscillator Switchover bit
  5479                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5480   300001                     	org	3145729
  5481   300001  07                 	db	7
  5482                           
  5483                           ;Config register CONFIG2L @ 0x300002
  5484                           ;	Power-up Timer Enable bit
  5485                           ;	PWRT = OFF, PWRT disabled
  5486                           ;	Brown-out Reset Enable bits
  5487                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  5488                           ;	Brown Out Reset Voltage bits
  5489                           ;	BORV = 3, Minimum setting
  5490   300002                     	org	3145730
  5491   300002  1F                 	db	31
  5492                           
  5493                           ;Config register CONFIG2H @ 0x300003
  5494                           ;	Watchdog Timer Enable bit
  5495                           ;	WDT = ON, WDT enabled
  5496                           ;	Watchdog Timer Postscale Select bits
  5497                           ;	WDTPS = 32768, 1:32768
  5498   300003                     	org	3145731
  5499   300003  1F                 	db	31
  5500                           
  5501                           ; Padding undefined space
  5502   300004                     	org	3145732
  5503   300004  FF                 	db	255
  5504                           
  5505                           ;Config register CONFIG3H @ 0x300005
  5506                           ;	CCP2 MUX bit
  5507                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5508                           ;	PORTB A/D Enable bit
  5509                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  5510                           ;	Low-Power Timer1 Oscillator Enable bit
  5511                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5512                           ;	MCLR Pin Enable bit
  5513                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5514   300005                     	org	3145733
  5515   300005  83                 	db	131
  5516                           
  5517                           ;Config register CONFIG4L @ 0x300006
  5518                           ;	Stack Full/Underflow Reset Enable bit
  5519                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5520                           ;	Single-Supply ICSP Enable bit
  5521                           ;	LVP = ON, Single-Supply ICSP enabled
  5522                           ;	Extended Instruction Set Enable bit
  5523                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5524                           ;	Background Debugger Enable bit
  5525                           ;	DEBUG = 0x1, unprogrammed default
  5526   300006                     	org	3145734
  5527   300006  85                 	db	133
  5528                           
  5529                           ; Padding undefined space
  5530   300007                     	org	3145735
  5531   300007  FF                 	db	255
  5532                           
  5533                           ;Config register CONFIG5L @ 0x300008
  5534                           ;	Code Protection bit
  5535                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  5536                           ;	Code Protection bit
  5537                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  5538                           ;	Code Protection bit
  5539                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  5540                           ;	Code Protection bit
  5541                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  5542   300008                     	org	3145736
  5543   300008  0F                 	db	15
  5544                           
  5545                           ;Config register CONFIG5H @ 0x300009
  5546                           ;	Boot Block Code Protection bit
  5547                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5548                           ;	Data EEPROM Code Protection bit
  5549                           ;	CPD = OFF, Data EEPROM not code-protected
  5550   300009                     	org	3145737
  5551   300009  C0                 	db	192
  5552                           
  5553                           ;Config register CONFIG6L @ 0x30000A
  5554                           ;	Write Protection bit
  5555                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  5556                           ;	Write Protection bit
  5557                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  5558                           ;	Write Protection bit
  5559                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  5560                           ;	Write Protection bit
  5561                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  5562   30000A                     	org	3145738
  5563   30000A  0F                 	db	15
  5564                           
  5565                           ;Config register CONFIG6H @ 0x30000B
  5566                           ;	Configuration Register Write Protection bit
  5567                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5568                           ;	Boot Block Write Protection bit
  5569                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5570                           ;	Data EEPROM Write Protection bit
  5571                           ;	WRTD = OFF, Data EEPROM not write-protected
  5572   30000B                     	org	3145739
  5573   30000B  E0                 	db	224
  5574                           
  5575                           ;Config register CONFIG7L @ 0x30000C
  5576                           ;	Table Read Protection bit
  5577                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  5578                           ;	Table Read Protection bit
  5579                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5580                           ;	Table Read Protection bit
  5581                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  5582                           ;	Table Read Protection bit
  5583                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  5584   30000C                     	org	3145740
  5585   30000C  0F                 	db	15
  5586                           
  5587                           ;Config register CONFIG7H @ 0x30000D
  5588                           ;	Boot Block Table Read Protection bit
  5589                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5590   30000D                     	org	3145741
  5591   30000D  40                 	db	64
  5592                           tosu	equ	0xFFF
  5593                           tosh	equ	0xFFE
  5594                           tosl	equ	0xFFD
  5595                           stkptr	equ	0xFFC
  5596                           pclatu	equ	0xFFB
  5597                           pclath	equ	0xFFA
  5598                           pcl	equ	0xFF9
  5599                           tblptru	equ	0xFF8
  5600                           tblptrh	equ	0xFF7
  5601                           tblptrl	equ	0xFF6
  5602                           tablat	equ	0xFF5
  5603                           prodh	equ	0xFF4
  5604                           prodl	equ	0xFF3
  5605                           indf0	equ	0xFEF
  5606                           postinc0	equ	0xFEE
  5607                           postdec0	equ	0xFED
  5608                           preinc0	equ	0xFEC
  5609                           plusw0	equ	0xFEB
  5610                           fsr0h	equ	0xFEA
  5611                           fsr0l	equ	0xFE9
  5612                           wreg	equ	0xFE8
  5613                           indf1	equ	0xFE7
  5614                           postinc1	equ	0xFE6
  5615                           postdec1	equ	0xFE5
  5616                           preinc1	equ	0xFE4
  5617                           plusw1	equ	0xFE3
  5618                           fsr1h	equ	0xFE2
  5619                           fsr1l	equ	0xFE1
  5620                           bsr	equ	0xFE0
  5621                           indf2	equ	0xFDF
  5622                           postinc2	equ	0xFDE
  5623                           postdec2	equ	0xFDD
  5624                           preinc2	equ	0xFDC
  5625                           plusw2	equ	0xFDB
  5626                           fsr2h	equ	0xFDA
  5627                           fsr2l	equ	0xFD9
  5628                           status	equ	0xFD8

Data Sizes:
    Strings     12
    Constant    16
    Data        45
    BSS         61
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     92     122
    BANK0           128      0      76
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 3
		 -> STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1411$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 4
		 -> result_1(COMRAM[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S1358$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1358$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 4
		 -> result_1(COMRAM[4]), str__2(COMRAM[4]), str__1(COMRAM[4]), 

    memset@s	PTR unsigned char  size(2) Largest target is 4
		 -> result_1(COMRAM[4]), str__2(COMRAM[4]), str__1(COMRAM[4]), 

    number_8bit_to_string@str	PTR unsigned char  size(2) Largest target is 4
		 -> result_1(COMRAM[4]), 

    send_4bits@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    enable_pin_4bits@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bits_set_cursor@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bits_send_string_pos@data	PTR unsigned char  size(2) Largest target is 6
		 -> STR_3(CODE[6]), STR_2(CODE[6]), STR_1(CODE[6]), result_1(COMRAM[4]), 
		 -> str__1(COMRAM[4]), 

    lcd_4bits_send_string_pos@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bits_send_string@data	PTR unsigned char  size(2) Largest target is 6
		 -> STR_3(CODE[6]), STR_2(CODE[6]), STR_1(CODE[6]), result_1(COMRAM[4]), 
		 -> str__1(COMRAM[4]), 

    lcd_4bits_send_string@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bits_send_char@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bits_send_command@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bits_initialze@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    print_result@lcd	PTR struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    print_result@result_1_	PTR unsigned char  size(2) Largest target is 4
		 -> result_1(COMRAM[4]), 

    detect_operation@operation_2	PTR unsigned char  size(2) Largest target is 1
		 -> operation_l(COMRAM[1]), 

    detect_operation@result__	PTR unsigned char  size(2) Largest target is 1
		 -> result(COMRAM[1]), 

    convert_string_to_numbers@value	PTR unsigned char  size(2) Largest target is 1
		 -> value_2(COMRAM[1]), value_1(COMRAM[1]), 

    convert_string_to_numbers@str	PTR unsigned char  size(2) Largest target is 4
		 -> str__2(COMRAM[4]), str__1(COMRAM[4]), 

    num_2_read@str	PTR unsigned char  size(2) Largest target is 4
		 -> str__2(COMRAM[4]), 

    num_2_read@keypad	PTR struct . size(2) Largest target is 8
		 -> keypad_1(BANK0[8]), 

    num_2_read@lcd	PTR struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    num_1_read@str	PTR unsigned char  size(2) Largest target is 4
		 -> str__1(COMRAM[4]), 

    num_1_read@str_2	PTR unsigned char  size(2) Largest target is 4
		 -> str__2(COMRAM[4]), 

    num_1_read@operation	PTR unsigned char  size(2) Largest target is 1
		 -> operation_l(COMRAM[1]), 

    num_1_read@keypad	PTR struct . size(2) Largest target is 8
		 -> keypad_1(BANK0[8]), 

    num_1_read@lcd	PTR struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    sp__memset	PTR void  size(2) Largest target is 4
		 -> result_1(COMRAM[4]), str__2(COMRAM[4]), str__1(COMRAM[4]), 

    gpio_pin_intialize@str	PTR const struct . size(2) Largest target is 8
		 -> lcd_1.DATA_BITS(BANK0[4]), lcd_1(BANK0[6]), keypad_1.rows(BANK0[4]), keypad_1(BANK0[8]), 
		 -> relay_initialize@rel_pin(COMRAM[1]), led_intialize@LED_IN(COMRAM[1]), 

    gpio_pin_read_logic@LOG	PTR enum E2989 size(2) Largest target is 1
		 -> keypad_read_value@temp_value(COMRAM[1]), button_read@PIN_STATUS(COMRAM[1]), 

    gpio_pin_read_logic@str	PTR const struct . size(2) Largest target is 8
		 -> keypad_1.columns(BANK0[4]), keypad_1(BANK0[8]), 

    gpio_pin_write_logic@str	PTR const struct . size(2) Largest target is 8
		 -> lcd_1.DATA_BITS(BANK0[4]), lcd_1(BANK0[6]), keypad_1.rows(BANK0[4]), keypad_1(BANK0[8]), 
		 -> relay_off@rel_pin(COMRAM[1]), relay_on@rel_pin(COMRAM[1]), relay_initialize@rel_pin(COMRAM[1]), led_turn_off@LED_IN(COMRAM[1]), 
		 -> led_turn_on@LED_IN(COMRAM[1]), led_intialize@LED_IN(COMRAM[1]), 

    gpio_pin_direction_intialize@str	PTR const struct . size(2) Largest target is 8
		 -> lcd_1.DATA_BITS(BANK0[4]), lcd_1(BANK0[6]), keypad_1.columns(BANK0[4]), keypad_1.rows(BANK0[4]), 
		 -> keypad_1(BANK0[8]), relay_initialize@rel_pin(COMRAM[1]), led_intialize@LED_IN(COMRAM[1]), 

    PORT_REG	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRl[1]), PORTD(BITBIGSFRl[1]), PORTC(BITBIGSFRl[1]), PORTB(BITBIGSFRl[1]), 
		 -> PORTA(BITBIGSFRl[1]), 

    TRIS_REG	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRhh[1]), TRISD(BITBIGSFRhh[1]), TRISC(BITBIGSFRhh[1]), TRISB(BITBIGSFRhh[1]), 
		 -> TRISA(BITBIGSFRhl[1]), 

    LAT_REG	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRhl[1]), LATD(BITBIGSFRhl[1]), LATC(BITBIGSFRhl[1]), LATB(BITBIGSFRhl[1]), 
		 -> LATA(BITBIGSFRl[1]), 

    turnoff_all_rows@key_pad	PTR struct . size(2) Largest target is 8
		 -> keypad_1(BANK0[8]), 

    keypad_read_value@value	PTR unsigned char  size(2) Largest target is 1
		 -> num_2_read@temp_value(COMRAM[1]), num_1_read@temp_value(COMRAM[1]), 

    keypad_read_value@key_pad	PTR struct . size(2) Largest target is 8
		 -> keypad_1(BANK0[8]), 

    keypad_initialize@key_pad	PTR struct . size(2) Largest target is 8
		 -> keypad_1(BANK0[8]), 


Critical Paths under _main in COMRAM

    _main->_print_result
    _print_result->_number_8bit_to_string
    _number_8bit_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _num_1_read->_num_2_read
    _num_2_read->_lcd_4bits_send_string_pos
    _lcd_4bits_send_string_pos->_lcd_4bits_set_cursor
    _lcd_4bits_set_cursor->_lcd_4bits_send_command
    _lcd_4bits_send_string->_lcd_4bits_send_char
    _lcd_4bits_send_char->_send_4bits
    _keypad_read_value->_turnoff_all_rows
    _turnoff_all_rows->_gpio_pin_write_logic
    _lcd_4bits_initialze->_lcd_4bits_send_command
    _lcd_4bits_send_command->_send_4bits
    _send_4bits->_gpio_pin_write_logic
    _enable_pin_4bits->_gpio_pin_write_logic
    _keypad_initialize->_gpio_pin_intialize
    _gpio_pin_intialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  217517
          _convert_string_to_numbers
                   _detect_operation
                  _keypad_initialize
                _lcd_4bits_initialze
                             _memset
                         _num_1_read
                       _print_result
 ---------------------------------------------------------------------------------
 (1) _print_result                                         6     1      5   46096
                                             87 COMRAM     5     0      5
          _lcd_4bits_send_string_pos
              _number_8bit_to_string
 ---------------------------------------------------------------------------------
 (2) _number_8bit_to_string                                4     2      2    7875
                                             84 COMRAM     3     1      2
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             24    16      8    5851
                                             62 COMRAM    22    14      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    5196
                                             54 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           19    13      6    4846
                                             40 COMRAM    14     8      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                13     9      4    3626
                                             27 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    1999
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _memset                                              12     6      6    1859
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (1) _num_1_read                                          17     7     10  135039
                                             42 COMRAM    17     7     10
          _convert_string_to_numbers
                  _keypad_read_value
                _lcd_4bits_send_char
          _lcd_4bits_send_string_pos
                         _num_2_read
 ---------------------------------------------------------------------------------
 (2) _num_2_read                                          11     5      6   66713
                                             31 COMRAM    11     5      6
                  _keypad_read_value
                _lcd_4bits_send_char
          _lcd_4bits_send_string_pos
 ---------------------------------------------------------------------------------
 (2) _lcd_4bits_send_string_pos                            7     1      6   37902
                                             24 COMRAM     7     1      6
              _lcd_4bits_send_string
               _lcd_4bits_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_4bits_set_cursor                                 7     3      4   18937
                                             18 COMRAM     6     2      4
             _lcd_4bits_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bits_send_string                                5     1      4   17287
                                             18 COMRAM     5     1      4
                _lcd_4bits_send_char
 ---------------------------------------------------------------------------------
 (4) _lcd_4bits_send_char                                  4     1      3   17021
                                             14 COMRAM     4     1      3
                   _enable_pin_4bits
               _gpio_pin_write_logic
                         _send_4bits
 ---------------------------------------------------------------------------------
 (3) _keypad_read_value                                   10     6      4   11104
                                             13 COMRAM    10     6      4
                _gpio_pin_read_logic
               _gpio_pin_write_logic
                   _turnoff_all_rows
 ---------------------------------------------------------------------------------
 (4) _turnoff_all_rows                                     4     2      2    5105
                                              9 COMRAM     4     2      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_read_logic                                 10     6      4     438
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (2) _convert_string_to_numbers                            9     5      4    1193
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (1) _lcd_4bits_initialze                                  5     3      2   25300
                                             18 COMRAM     5     3      2
                 _gpio_pin_intialize
             _lcd_4bits_send_command
 ---------------------------------------------------------------------------------
 (4) _lcd_4bits_send_command                               4     1      3   18237
                                             14 COMRAM     4     1      3
                   _enable_pin_4bits
               _gpio_pin_write_logic
                         _send_4bits
 ---------------------------------------------------------------------------------
 (5) _send_4bits                                           5     2      3    5726
                                              9 COMRAM     5     2      3
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _enable_pin_4bits                                     4     2      2    5287
                                              9 COMRAM     4     2      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _keypad_initialize                                    7     5      2    7483
                                             13 COMRAM     7     5      2
       _gpio_pin_direction_intialize
                 _gpio_pin_intialize
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_intialize                                   4     2      2    6596
                                              9 COMRAM     4     2      2
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (6) _gpio_pin_write_logic                                10     7      3    4891
                                              0 COMRAM     9     6      3
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_intialize                         9     7      2     581
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _detect_operation                                     9     3      6     547
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _convert_string_to_numbers
   _detect_operation
   _keypad_initialize
     _gpio_pin_direction_intialize
     _gpio_pin_intialize
       _gpio_pin_direction_intialize
       _gpio_pin_write_logic
   _lcd_4bits_initialze
     _gpio_pin_intialize
     _lcd_4bits_send_command
       _enable_pin_4bits
         _gpio_pin_write_logic
       _gpio_pin_write_logic
       _send_4bits
         _gpio_pin_write_logic
   _memset
   _num_1_read
     _convert_string_to_numbers
     _keypad_read_value
       _gpio_pin_read_logic
       _gpio_pin_write_logic
       _turnoff_all_rows
         _gpio_pin_write_logic
     _lcd_4bits_send_char
       _enable_pin_4bits
       _gpio_pin_write_logic
       _send_4bits
     _lcd_4bits_send_string_pos
       _lcd_4bits_send_string
         _lcd_4bits_send_char
       _lcd_4bits_set_cursor
         _lcd_4bits_send_command
     _num_2_read
       _keypad_read_value
       _lcd_4bits_send_char
       _lcd_4bits_send_string_pos
   _print_result
     _lcd_4bits_send_string_pos
     _number_8bit_to_string
       _memset
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___awdiv
               ___awmod
               _abs
                 ___awmod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
             _fputc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      4C       5       59.4%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     5C      7A       1       96.1%
BITBIGSFRhh         69      0       0      36        0.0%
BITBIGSFRhl          4      0       0      37        0.0%
BITBIGSFRl           4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C6      39        0.0%
DATA                 0      0      C6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sat Sep 09 17:02:56 2023

                                  l43 22F8                                    l61 2686  
                                  l54 1DE2                          ___awdiv@sign 0006  
                   ?_turnoff_all_rows 000A                                   l214 1C00  
           _lcd_4bits_send_string_pos 26D4                                   l410 2832  
                                 l219 1C02                                   l245 2166  
                                 l238 1AE4                                   l407 23EC  
                                 l351 120A                                   l343 1CEE  
                                 l344 1CEE                                   l441 19C4  
                                 l353 1206                                   l259 2540  
                                 l451 2462                                   l446 24D8  
                                 l374 1782                                   l464 21F0  
                                 l376 177E                                   l804 1F70  
                                 l564 27DA                                   l493 2596  
                                 l469 271A                                   l398 164E  
                                 l488 20CC                                   l817 2020  
                                 l498 2278                    ??_turnoff_all_rows 000C  
                num_2_read@temp_value 002A                  keypad_initialize@ret 0012  
                                 _abs 2760                                   _pad 22FA  
                                 _ret 0062                                   _num 007A  
                        ___awmod@sign 0006                                   prod 0FF3  
               relay_initialize@F3042 0065                                   wreg 0FE8  
        turnoff_all_rows@rows_counter 000D                      _detect_operation 2374  
                                ?_abs 0007                                  l1313 18A4  
                                l1306 139E                                  l3011 20FE  
                                l1323 2796                                  l3101 1B30  
                                l3013 2102                                  l3005 20CE  
                                l3021 263E                                  l1261 26D2  
                                l1326 279E                                  l3103 1B92  
                                l3015 2164                                  l3007 20CE  
                                l3031 265C                                  l3023 2650  
                                l3111 1CF6                                  l1319 2638  
                                l1248 1514                                  l3105 1BA8  
                                l3009 20E0                                  l3033 2672  
                                l3025 2658                                  l3113 1D02  
                                l3041 2022                                  l3201 26A0  
                                l1338 1EAC                                  l1346 275E  
                                l3211 24DA                                  l3035 2674  
                                l3019 263A                                  l3123 1D20  
                                l3115 1D14                                  l3051 2064  
                                l3043 2022                                  l1283 231C  
                                l3203 26A8                                  l1292 1252  
                                l3213 24EC                                  l3037 2684  
                                l3141 1DBE                                  l3133 1D58  
                                l3125 1D44                                  l3117 1D1C  
                                l3053 207A                                  l3045 2034  
                                l3301 1726                                  l1349 2834  
                                l3205 26C4                                  l1294 125A  
                                l3215 250A                                  l3231 154A  
                                l3223 1516                                  l3143 1DCE  
                                l3135 1D7E                                  l3127 1D54  
                                l3071 2186                                  l3047 2038  
                                l3055 2090                                  l3311 173E  
                                l3151 13A0                                  l1287 2372  
                                l1295 12A0                                  l3217 2512  
                                l3209 24DA                                  l3401 18E8  
                                l3241 15A8                                  l3233 1566  
                                l3145 1DD0                                  l3137 1D8E  
                                l3073 21B8                                  l3065 2168  
                                l3049 204E                                  l3057 20CA  
                                l3321 1776                                  l3313 1750  
                                l3161 1400                                  l3081 25EC  
                                l3091 1AE6                                  l3219 253E  
                                l3411 18FE                                  l3251 1606  
                                l3235 1574                                  l3243 15BA  
                                l3139 1DBC                                  l3147 1DE0  
                                l3075 21BC                                  l3067 216C  
                                l3315 1760                                  l3163 1458  
                                l3155 13BE                                  l3083 25F8  
                                l3323 27A2                                  l3093 1AE6  
                                l3421 1950                                  l3413 190E  
                                l3261 164C                                  l3253 1618  
                                l3245 15CA                                  l3237 1584  
                                l3229 152E                                  l3077 21EE  
                                l3069 217E                                  l3317 1770  
                                l3309 173C                                  l3501 11C4  
                                l3181 1502                                  l3173 14B8  
                                l3157 13CA                                  l3085 2614  
                                l3325 27A2                                  l3095 1AF8  
                                l3431 19A0                                  l3423 1960  
                                l3415 191C                                  l3407 18EC  
                                l3247 15E0                                  l3239 1596  
                                l3255 162A                                  l3191 2702  
                                l3183 26D4                                  l3319 1772  
                                l3271 168E                                  l3511 11FA  
                                l3503 11C6                                  l3175 14EC  
                                l3167 1472                                  l3087 2630  
                                l3327 27BE                                  l3521 2378  
                                l3097 1B16                                  l3361 2282  
                                l3433 19B0                                  l3425 1970  
                                l3417 192C                                  l3409 18FC  
                                l3257 162C                                  l3249 15F0  
                                l3193 2718                                  l3185 26D4  
                                l3281 16BA                                  l3265 1650  
                                l3513 11FE                                  l3505 11D8  
                                l3441 102E                                  l3177 14F8  
                                l3169 149E                                  l2801 1F24  
                                l3329 27D8                                  l3523 238A  
                                l3531 23EA                                  l3099 1B1A  
                                l3371 22A0                                  l3363 2294  
                                l3427 1980                                  l3419 194A  
                                l3435 19C2                                  l3259 163C  
                                l3187 26E6                                  l3291 1704  
                                l3283 16CC                                  l3267 1660  
                                l3507 11E8                                  l3443 103E  
                                l3451 1062                                  l3179 14FE  
                                l2803 1F3A                                  l2811 1F50  
                                l2731 1DF6                                  l3525 239E  
                                l3373 22B0                                  l3365 229C  
                                l3429 1990                                  l3189 26EE  
                                l3293 1722                                  l3285 16DE  
                                l3269 1670                                  l3277 1694  
                                l3509 11F8                                  l4173 1104  
                                l3461 10C0                                  l3453 1076  
                                l3445 105C                                  l2813 1F60  
                                l2805 1F42                                  l2821 1F76  
                                l2733 1E08                                  l2901 120C  
                                l3197 2688                                  l3541 2808  
                                l3519 2374                                  l2751 19C6  
                                l3383 22C6                                  l3375 22B2  
                                l3359 227A                                  l4175 20A4  
                                l3295 1722                                  l3287 16F0  
                                l3279 16AA                                  l3463 10D0  
                                l3471 1122                                  l3455 1086  
                                l3439 101E                                  l2815 1F68  
                                l2807 1F44                                  l2831 1FA6  
                                l2823 1F84                                  l2735 1E12  
                                l2743 271C                                  l2911 1262  
                                l2903 1220                                  l3199 2698  
                                l3543 2816                                  l3529 23B0  
                                l4177 1ACC                                  l2761 1A56  
                                l2753 19C6                                  l3385 22E4  
                                l3377 22C2                                  l3393 18A6  
                                l3289 16F2                                  l3481 1146  
                                l3473 1124                                  l3465 10E0  
                                l3457 1098                                  l2809 1F4A  
                                l2841 1FEC                                  l2833 1FB8  
                                l2825 1F8C                                  l2737 1E30  
                                l2729 1DE4                                  l2745 2728  
                                l2921 129C                                  l2913 1272  
                                l2905 1230                                  l4179 23CC  
                                l2755 19D8                                  l3387 22E6  
                                l3395 18AA                                  l3483 1162  
                                l3475 1136                                  l3491 1190  
                                l3459 10AA                                  l2851 2018  
                                l2843 1FF4                                  l2835 1FC0  
                                l2827 1F90                                  l2819 1F72  
                                l2739 1E66                                  l2747 273A  
                                l2931 12F0                                  l2923 12A8  
                                l2915 1278                                  l2907 1238  
                                l3539 2808                                  l2765 1AB8  
                                l2757 19F6                                  l3389 22F6  
                                l3397 18BC                                  l3493 11A2  
                                l3485 1176                                  l3477 1146  
                                l3469 10F0                                  l2781 1EC8  
                                l2845 1FFA                                  l2837 1FC8  
                                l2829 1F9E                                  l2749 273E  
                                l2861 2328                                  l2941 1358  
                                l2933 12F6                                  l2925 12B2  
                                l2917 1288                                  l2909 1246  
                                ?_pad 0011                                  l2759 19FA  
                                l2767 1AE2                                  l3399 18C4  
                                l2951 23EE                                  l3479 1146  
                                l2791 1EEE                                  l2783 1ECC  
                                l2775 1EAE                                  l2839 1FD6  
                                l2847 2000                                  l2871 277A  
                                l2863 233C                                  l2855 22FA  
                                l2943 1368                                  l2927 12B8  
                                l2935 1312                                  l2919 1294  
                                l2881 2276                                  l2873 21F2  
                                l2953 23EE                                  l2793 1F00  
                                l2785 1EDA                                  l2777 1EB2  
                                l2849 2010                                  l2865 2340  
                                l2857 2308                                  l2945 136E  
                                l2937 132C                                  l2929 12EA  
                                l3921 1C4A                                  l2891 255C  
                                l2875 21F6                                  l2971 24D6  
                                l2963 2464                                  l2955 2400  
                                l2795 1F08                                  l2787 1EE2  
                                l2779 1EC0                                  l2867 235E  
                                l2859 2314                                  l2947 137E  
                                l2939 133E                                  l3931 1CD0  
                                l3923 1C58                                  l2893 2570  
                                l2885 2542                                  l2877 2208  
                                l2965 2464                                  l2957 2408  
                                l2797 1F10                                  l2789 1EE6  
                                l2869 2760                                  l2981 17C2  
                                l3933 1CD4                                  l3925 1C86  
                                l3917 1C04                                  l2895 257E  
                                l2887 2542                                  l2879 2210  
                                l2967 2476                                  l2959 2460  
                                l2799 1F1E                                  l2991 1852  
                                l2983 17C6                                  l2975 1784  
                                l3927 1C9C                                  l3919 1C3C  
                                l2897 2594                                  l2889 2554  
                                l2969 247E                                  l2985 17D6  
                                l2977 17A8                                  l3929 1CB2  
                                l2995 186A                                  l2987 17F2  
                                l2979 17B6                                  l2989 180E  
                                l2999 187C                                  STR_1 1011  
                                STR_2 1011                                  STR_3 1011  
                                STR_4 1017                                  STR_5 101A  
                                u2000 1358                                  u2001 1354  
                                u2010 1368                                  u2011 1364  
                                u2100 2650                                  u2020 2400  
                                u2101 264C                                  u2021 23FC  
                                u2030 2476                                  u2110 2684  
                                u2031 2472                                  u2111 2680  
                                u2200 1B30                                  u2120 2034  
                                u2040 17A8                                  u2201 1B2C  
                                u2121 2030                                  u2041 17A4  
                                u2130 217E                                  u2050 17F2  
                                u2131 217A                                  u2051 17EE  
                                u2220 1BA8                                  u2140 21B0  
                                u2300 146E                                  u2060 180E  
                                u2221 1BA4                                  u2301 146A  
                                u2061 180A                                  _LATA 0F89  
                                u2214 1B4C                                  u2070 20E0  
                                u2150 21DE                                  u2310 14B4  
                                _LATB 0F8A                                  u2215 1B48  
                                u2071 20DC                                  u2311 14B0  
                                _LATC 0F8B                                  u2400 1618  
                                u2080 20FE                                  u2240 1D14  
                                u2160 21EE                                  u2320 1514  
                                _LATD 0F8C                                  u2401 1614  
                                u2081 20FA                                  u2241 1D10  
                                u2161 21EA                                  u2321 1510  
                                _LATE 0F8D                                  u2234 1BC4  
                                u2410 163C                                  u2250 1D8E  
                                u2330 26E6                                  u2170 2630  
                                u2235 1BC0                                  u2411 1638  
                                u2251 1D8A                                  u2147 21A6  
                                u2331 26E2                                  u2171 262C  
                                u2180 1AF8                                  u2340 24EC  
                                u2260 1DCE                                  u2420 1670  
                                u1700 275E                                  u2181 1AF4  
                                u2341 24E8                                  u2261 1DCA  
                                u2157 21D4                                  u2421 166C  
                                u1701 275A                                  u2190 1B16  
                                u1710 19D8                                  u2350 250A  
                                u2094 2150                                  u2270 1DE0  
                                u2430 16BA                                  u2191 1B12  
                                u1711 19D4                                  u2351 2506  
                                u2095 214C                                  u2271 1DDC  
                                u2431 16B6                                  u1720 19F6  
                                u2360 154A                                  u2440 16CC  
                                u2600 1098                                  u2280 13BA  
                                u1800 1F60                                  u1721 19F2  
                                u2361 1546                                  u2441 16C8  
                                u2601 1094                                  u2281 13B6  
                                u1801 1F5C                                  u2530 2294  
                                u2370 1566                                  u2450 16DE  
                                u2610 10AA                                  u2290 13FC  
                                u1810 1F84                                  u2531 2290  
                                u2371 1562                                  u2451 16DA  
                                u2611 10A6                                  u2291 13F8  
                                u1811 1F80                                  u2540 22C2  
                                u1900 2208                                  u2380 15CA  
                                u2460 16F0                                  u2620 10BC  
                                u1820 1F9E                                  u1660 1DF6  
                                u2541 22BE                                  u1901 2204  
                                u2381 15C6                                  u3317 1D4A  
                                u2461 16EC                                  u2621 10B8  
                                u1821 1F9A                                  u1661 1DF2  
                                u1734 1A16                                  u2550 22F6  
                                u1910 2554                                  u2390 15F0  
                                u2470 1704                                  u2630 1136  
                                u1750 1EC0                                  u1830 1FB8  
                                u1670 1E08                                  u1735 1A12  
                                u2551 22F2                                  u1911 2550  
                                u3327 1914                                  u2391 15EC  
                                u2471 1700                                  u2631 1132  
                                u1751 1EBC                                  u1831 1FB4  
                                u1671 1E04                                  u1744 1A72  
                                u2560 18BC                                  u2480 1738  
                                u2640 11A2                                  u1760 1EDA  
                                u1840 1FD6                                  u1680 1E30  
                                u1920 121C                                  u1745 1A6E  
                                u3337 1932                                  u2561 18B8  
                                u2481 1734                                  u2641 119E  
                                u1761 1ED6                                  u1841 1FD2  
                                u1681 1E2C                                  u1921 1216  
                                u2570 190E                                  u2490 1750  
                                u2650 11D8                                  u1770 1F00  
                                u1850 1FEC                                  u1690 1E66  
                                u1930 121E                                  u3347 194C  
                                u2571 190A                                  u2491 174C  
                                u2651 11D4                                  u1771 1EFC  
                                u1851 1FE8                                  u1691 1E62  
                                u2580 103E                                  u1780 1F1E  
                                u1860 2010                                  u1940 1230  
                                u3357 2576                                  u2581 103A  
                                u1781 1F1A                                  u1861 200C  
                                u1941 122C                                  u2590 1086  
                                u1790 1F3A                                  u1870 2308  
                                u1950 1246                                  u2591 1082  
                                u1791 1F36                                  u1871 2304  
                                u1951 1242                                  u1880 235E  
                                u1960 1272                                  u1881 235A  
                                u1961 126E                                  u1890 277A  
                                u1970 1288                                  u1891 2776  
                                u1971 1284                                  u1980 132C  
                                u1981 1328                                  u1990 133E  
                                u1991 133A                                  abs@a 0007  
                                _dbuf 00AC                                  _main 1C04  
                                _dtoa 120C                                  _prec 005F  
                                pad@i 0018                                  pad@p 0015  
                                fsr0h 0FEA                                  fsr1h 0FE2  
                                indf0 0FEF                                  fsr2h 0FDA  
                                fsr0l 0FE9                                  indf2 0FDF  
                                fsr1l 0FE1                                  pad@w 001A  
                                fsr2l 0FD9                      num_1_read@keypad 002D  
                                prodl 0FF3                                  start 0000  
                        ___param_bank 0000                  keypad_read_value@ret 0014  
                               ??_abs 0009                  _gpio_pin_write_logic 19C6  
                               ??_pad 0017                lcd_4bits_send_char@lcd 000F  
              lcd_4bits_send_char@ret 0012                                 ?_main 0001  
                               ?_dtoa 001C                       __end_of___awdiv 1F72  
                     __end_of___awmod 2022                       ___awdiv@divisor 0003  
                     ___awdiv@counter 0005                          vfpfcnvrt@fmt 002B  
              ?_lcd_4bits_send_string 0013                                 _PORTA 0F80  
                               _PORTB 0F81                                 _PORTC 0F82  
                               _PORTD 0F83                                 _PORTE 0F84  
                               _TRISA 0F92                                 _TRISB 0F93  
                               _TRISC 0F94                                 _TRISD 0F95  
                               _TRISE 0F96                                 _lcd_1 00A6  
                               _flags 0061                                 _fputc 1DE4  
                               _fputs 271C                                 pad@fp 0011  
                               _width 005D                                 _putch 2834  
                               dtoa@d 001E                                 dtoa@i 0026  
                               dtoa@p 0022                                 dtoa@s 0028  
                               dtoa@w 0024                                 tablat 0FF5  
       lcd_4bits_send_command@command 0011                                 status 0FD8  
                     __end_of_sprintf 26D4           keypad_read_value@temp_value 0015  
                    num_2_read@keypad 0022                       __initialization 2598  
         __end_of_lcd_4bits_initialze 19C6                          __end_of_main 1CF6  
                        __end_of_dtoa 13A0                 ?_gpio_pin_write_logic 0001  
         __end_of_lcd_4bits_send_char 2464                                ??_main 005D  
                              ??_dtoa 0020                         __activetblptr 0002  
                    led_turn_on@F3053 0068               lcd_4bits_send_char@data 0011  
             ?_lcd_4bits_send_command 000F                                ?_fputc 0001  
                              ?_fputs 000A                      ___awdiv@dividend 0001  
                              ?_putch 0001              keypad_read_value@key_pad 000E  
                        vfprintf@cfmt 003D                             ??___awdiv 0005  
                           ??___awmod 0005                                _memset 13A0  
                              clear_0 25D0                                clear_1 25DC  
                    ___awdiv@quotient 0007                       ___awmod@divisor 0003  
                              isa$std 0001                                _result 0076  
                     ___awmod@counter 0005                                pad@buf 0013  
                              _str__1 0072                                _str__2 006E  
                              dtoa@fp 001C            lcd_4bits_set_cursor@COLUMN 0016  
      __end_of_lcd_4bits_send_command 24DA                                fputc@c 0001  
                              fputs@c 000E                                fputs@i 000F  
                        __pdataCOMRAM 007A                                fputs@s 000A  
                        __mediumconst 0000                                tblptrh 0FF7  
                              tblptrl 0FF6                                tblptru 0FF8  
         detect_operation@operation_2 0001                                putch@c 0001  
                    __end_of_vfprintf 263A                             ??_sprintf 0047  
          ?_convert_string_to_numbers 0001                            __accesstop 0080  
             __end_of__initialization 25E2              number_8bit_to_string@str 0055  
                       ___rparam_used 0001                 _number_8bit_to_string 27A0  
                    _enable_pin_4bits 2542                ??_gpio_pin_write_logic 0004  
                      __pcstackCOMRAM 0001                          __pidataBANK0 27DC  
            __end_of_detect_operation 23EE                         __end_of_fputc 1EAE  
                       __end_of_fputs 2760                         __end_of_putch 2836  
                       send_4bits@lcd 000A                         send_4bits@ret 000E  
             turnoff_all_rows@key_pad 000A                keypad_read_value@value 0010  
                             ??_fputc 0005                               ??_fputs 000E  
                             ??_putch 0001                            __pbssBANK0 00AC  
   __end_of_lcd_4bits_send_string_pos 271C          __end_of_lcd_4bits_set_cursor 20CE  
                   led_turn_off@F3058 0067                       led_toggle@F3063 0066  
                             ?_memset 0001               ??_lcd_4bits_send_string 0017  
     convert_string_to_numbers@temp_1 0006       convert_string_to_numbers@temp_2 0007  
     convert_string_to_numbers@temp_3 0008                               _LAT_REG 0094  
           lcd_4bits_send_command@lcd 000F             lcd_4bits_send_command@ret 0012  
                          _btn_values 1001                         num_1_read@lcd 002B  
                       num_1_read@ret 003A                         num_1_read@str 002F  
              ?_number_8bit_to_string 0055                         num_2_read@lcd 0020  
                       num_2_read@ret 0029                         num_2_read@str 0024  
                             __Hparam 0000                               __Lparam 0000  
            keypad_initialize@key_pad 000E                   _gpio_pin_read_logic 20CE  
                             ___awdiv 1EAE                               ___awmod 1F72  
                           ?_vfprintf 0037      keypad_initialize@columns_counter 0014  
                        __psmallconst 1000            __end_of_gpio_pin_intialize 2542  
                             __pcinit 2598                               __ramtop 1000  
                       relay_on@F3047 0064                               __ptext0 1C04  
                             __ptext1 2808                               __ptext2 27A0  
                             __ptext3 2688                               __ptext4 25EC  
                             __ptext5 1784                               __ptext6 120C  
                             __ptext7 22FA                               __ptext8 271C  
                             __ptext9 1DE4                      ___awmod@dividend 0001  
                 num_1_read@counter_1 0038                   num_1_read@counter_2 0037  
                 num_1_read@counter_3 0039               lcd_4bits_set_cursor@ROW 0015  
                             _value_1 0078                               _value_2 0077  
             lcd_4bits_set_cursor@lcd 0013                            _send_4bits 21F2  
                ?_gpio_pin_read_logic 0001                               _sprintf 2688  
                end_of_initialization 25E2                            _num_1_read 101E  
                          _num_2_read 1650       lcd_4bits_send_string_pos@COLUMN 001E  
                             fputc@fp 0003                               memset@c 0003  
                             memset@k 0009                               memset@n 0005  
                             memset@s 000B                         __Lmediumconst 0000  
                             fputs@fp 000C                   turnoff_all_rows@ret 000C  
               gpio_pin_intialize@ret 000D                 gpio_pin_intialize@str 000A  
                 num_1_read@operation 0031                     __end_of_vfpfcnvrt 18A6  
                             postdec1 0FE5                               postdec2 0FDD  
                             postinc0 0FEE                               postinc1 0FE6  
                             postinc2 0FDE                      vfpfcnvrt@convarg 0031  
                          ??_vfprintf 003D                  _lcd_4bits_set_cursor 2022  
__end_of_gpio_pin_direction_intialize 1C04          _gpio_pin_direction_intialize 1AE6  
            __end_of_enable_pin_4bits 2598                 ??_gpio_pin_read_logic 0005  
                       ?_print_result 0058                 print_result@result_1_ 005A  
                    _turnoff_all_rows 263A           ??_convert_string_to_numbers 0005  
                     num_1_read@str_2 0033                     ?_detect_operation 0001  
                         vfpfcnvrt@ap 002D                           vfpfcnvrt@cp 0035  
                         vfpfcnvrt@fp 0029                         __pidataCOMRAM 2836  
                  ??_detect_operation 0007              lcd_4bits_send_string@lcd 0013  
            lcd_4bits_send_string@ret 0017                        __end_of_memset 1516  
               ?_lcd_4bits_set_cursor 0013                   enable_pin_4bits@lcd 000A  
                 enable_pin_4bits@ret 000D                   start_initialization 2598  
                      ??_print_result 005D                     send_4bits@command 000C  
                         __end_of_abs 27A0                           __end_of_pad 2374  
       ?_gpio_pin_direction_intialize 0001                     send_4bits@counter 000D  
                         ?_send_4bits 000A         lcd_4bits_send_string_pos@data 001B  
                         ?_num_1_read 002B                           ?_num_2_read 0020  
                         vfprintf@fmt 0039             _convert_string_to_numbers 1516  
                         __pdataBANK0 0080                              ??_memset 0007  
                     print_result@lcd 0058                            memset@dest 0001  
                     print_result@num 005C         __end_of_lcd_4bits_send_string 21F2  
                         __pbssCOMRAM 005D               ??_number_8bit_to_string 0057  
     gpio_pin_direction_intialize@str 0001            ?_lcd_4bits_send_string_pos 0019  
       keypad_initialize@rows_counter 0013                             _dtoa$1438 0020  
                            ?___awdiv 0001                              ?___awmod 0001  
            ??_lcd_4bits_send_command 0012                ??_lcd_4bits_set_cursor 0017  
                         __smallconst 1000             lcd_4bits_send_string@data 0015  
                            ?_sprintf 003F      convert_string_to_numbers@counter 0009  
                  _gpio_pin_intialize 24DA        ??_gpio_pin_direction_intialize 0003  
                 _lcd_4bits_initialze 18A6                   ?_gpio_pin_intialize 000A  
                __end_of_print_result 2834                   _lcd_4bits_send_char 23EE  
                            _PORT_REG 0080            lcd_4bits_initialze@counter 0016  
            __end_of_turnoff_all_rows 2688                             _vfpfcnvrt 1784  
                            _TRIS_REG 008A                  ?_lcd_4bits_initialze 0013  
                ??_gpio_pin_intialize 000C               gpio_pin_write_logic@LOG 0003  
                ?_lcd_4bits_send_char 000F                     ?_enable_pin_4bits 000A  
             gpio_pin_write_logic@str 0001                             copy_data0 25AC  
                   _keypad_initialize 227A                    ??_enable_pin_4bits 000C  
                   _keypad_read_value 1CF6                gpio_pin_read_logic@LOG 0003  
                  ?_keypad_initialize 000E                gpio_pin_read_logic@str 0001  
                  ?_keypad_read_value 000E                              __Hrparam 0000  
          number_8bit_to_string@value 0057                            vfprintf@ap 003B  
                            __Lrparam 0000                            vfprintf@fp 0037  
                 ??_keypad_initialize 0010                   ??_keypad_read_value 0012  
              lcd_4bits_initialze@lcd 0013                lcd_4bits_initialze@ret 0017  
                          ?_vfpfcnvrt 0029                 ??_lcd_4bits_initialze 0015  
                  __end_of_btn_values 1011           __end_of_gpio_pin_read_logic 2168  
                  led_intialize@F3048 0069                            sprintf@fmt 0041  
               ??_lcd_4bits_send_char 0012             __end_of_keypad_initialize 22FA  
                            __ptext10 2834                              __ptext11 2760  
                            __ptext20 23EE                              __ptext12 1F72  
                            __ptext21 1CF6                              __ptext13 1EAE  
                            __ptext30 24DA                              __ptext22 263A  
                            __ptext14 13A0                              __ptext31 19C6  
                            __ptext23 20CE                              __ptext15 101E  
                            __ptext32 1AE6                              __ptext24 1516  
                            __ptext16 1650                              __ptext33 2374  
                            __ptext25 18A6                              __ptext17 26D4  
                            __ptext26 2464                              __ptext18 2022  
                        ??_send_4bits 000D                              __ptext27 21F2  
                            __ptext19 2168                              __ptext28 2542  
                            __ptext29 227A              detect_operation@value__1 0003  
            detect_operation@value__2 0004             __end_of_keypad_read_value 1DE4  
            detect_operation@result__ 0005                          ??_num_1_read 0035  
                        ??_num_2_read 0026         keypad_read_value@rows_counter 0016  
                            _keypad_1 009E                        relay_off@F3052 0063  
                            _result_1 006A                              isa$xinst 0000  
                            _vfprintf 25EC                    __end_of_send_4bits 227A  
      convert_string_to_numbers@value 0003                    __end_of_num_1_read 120C  
                  __end_of_num_2_read 1784     __end_of_convert_string_to_numbers 1650  
        __end_of_gpio_pin_write_logic 1AE6                _lcd_4bits_send_command 2464  
                           sprintf@ap 0047         __end_of_number_8bit_to_string 27DC  
    keypad_read_value@columns_counter 0017           ??_lcd_4bits_send_string_pos 001F  
                         _operation_l 0079                  num_1_read@temp_value 003B  
                         ??_vfpfcnvrt 002F                              sprintf@f 0049  
                            sprintf@s 003F                 _lcd_4bits_send_string 2168  
        convert_string_to_numbers@ret 0005                          _print_result 2808  
                 num_2_read@counter_1 0027                   num_2_read@counter_2 0026  
                 num_2_read@counter_3 0028          convert_string_to_numbers@str 0001  
        lcd_4bits_send_string_pos@ROW 001D          lcd_4bits_send_string_pos@lcd 0019  
        lcd_4bits_send_string_pos@ret 001F  
