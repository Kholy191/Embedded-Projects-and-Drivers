

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Sep 29 20:26:18 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    40   000000                     
    41                           ; Generated 23/03/2023 GMT
    42                           ; 
    43                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F4620 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75   000000                     
    76                           	psect	idataCOMRAM
    77   0017A2                     __pidataCOMRAM:
    78                           	callstack 0
    79                           
    80                           ;initializer for _PORT_REG
    81   0017A2  80                 	db	128
    82   0017A3  0F                 	db	15
    83   0017A4  81                 	db	129
    84   0017A5  0F                 	db	15
    85   0017A6  82                 	db	130
    86   0017A7  0F                 	db	15
    87   0017A8  83                 	db	131
    88   0017A9  0F                 	db	15
    89   0017AA  84                 	db	132
    90   0017AB  0F                 	db	15
    91                           
    92                           ;initializer for _TRIS_REG
    93   0017AC  92                 	db	146
    94   0017AD  0F                 	db	15
    95   0017AE  93                 	db	147
    96   0017AF  0F                 	db	15
    97   0017B0  94                 	db	148
    98   0017B1  0F                 	db	15
    99   0017B2  95                 	db	149
   100   0017B3  0F                 	db	15
   101   0017B4  96                 	db	150
   102   0017B5  0F                 	db	15
   103                           
   104                           ;initializer for _LAT_REG
   105   0017B6  89                 	db	137
   106   0017B7  0F                 	db	15
   107   0017B8  8A                 	db	138
   108   0017B9  0F                 	db	15
   109   0017BA  8B                 	db	139
   110   0017BB  0F                 	db	15
   111   0017BC  8C                 	db	140
   112   0017BD  0F                 	db	15
   113   0017BE  8D                 	db	141
   114   0017BF  0F                 	db	15
   115                           
   116                           ;initializer for _lcd_1
   117   0017C0  1C                 	db	28
   118   0017C1  1D                 	db	29
   119   0017C2  1E                 	db	30
   120   0017C3  1F                 	db	31
   121   0017C4  18                 	db	24
   122   0017C5  19                 	db	25
   123                           
   124                           ;initializer for _RB7_Flag
   125   0017C6  01                 	db	1
   126                           
   127                           ;initializer for _RB6_Flag
   128   0017C7  01                 	db	1
   129                           
   130                           ;initializer for _RB5_Flag
   131   0017C8  01                 	db	1
   132                           
   133                           ;initializer for _RB4_Flag
   134   0017C9  01                 	db	1
   135                           
   136                           ;initializer for _TM1_Counter
   137   0017CA  EC                 	db	low _TMR1_Interrupt_Func
   138   0017CB  17                 	db	high _TMR1_Interrupt_Func
   139   0017CC  0000               	dw	0
   140   0017CE  04                 	db	4
   141                           
   142                           ;initializer for _led_1
   143   0017CF  02                 	db	2
   144                           
   145                           	psect	idataBANK0
   146   001806                     __pidataBANK0:
   147                           	callstack 0
   148                           
   149                           ;initializer for _keypad_1
   150   001806  10                 	db	16
   151   001807  11                 	db	17
   152   001808  12                 	db	18
   153   001809  13                 	db	19
   154   00180A  54                 	db	84
   155   00180B  55                 	db	85
   156   00180C  56                 	db	86
   157   00180D  57                 	db	87
   158                           
   159                           	psect	smallconst
   160   001000                     __psmallconst:
   161                           	callstack 0
   162   001000  00                 	db	0
   163   001001                     _btn_values:
   164                           	callstack 0
   165   001001  37                 	db	55
   166   001002  38                 	db	56
   167   001003  39                 	db	57
   168   001004  2F                 	db	47
   169   001005  34                 	db	52
   170   001006  35                 	db	53
   171   001007  36                 	db	54
   172   001008  2A                 	db	42
   173   001009  31                 	db	49
   174   00100A  32                 	db	50
   175   00100B  33                 	db	51
   176   00100C  2D                 	db	45
   177   00100D  23                 	db	35
   178   00100E  30                 	db	48
   179   00100F  3D                 	db	61
   180   001010  2B                 	db	43
   181   001011                     __end_of_btn_values:
   182                           	callstack 0
   183   000000                     _TMR1L	set	4046
   184   000000                     _TMR1H	set	4047
   185   000000                     _TMR0L	set	4054
   186   000000                     _TMR0H	set	4055
   187   000000                     _INTCON2bits	set	4081
   188   000000                     _EECON2	set	4007
   189   000000                     _ADRESL	set	4035
   190   000000                     _ADRESH	set	4036
   191   000000                     _TRISD	set	3989
   192   000000                     _TRISC	set	3988
   193   000000                     _TRISB	set	3987
   194   000000                     _TRISE	set	3990
   195   001011  25                 	db	37
   196   001012  64                 	db	100	;'d'
   197   001013  00                 	db	0
   198   001014                     STR_2:
   199   001014  25                 	db	37
   200   001015  69                 	db	105	;'i'
   201   001016  00                 	db	0
   202   001017  00                 	db	0	; dummy byte at the end
   203   000000                     
   204                           	psect	nvCOMRAM
   205   00006F                     __pnvCOMRAM:
   206                           	callstack 0
   207   00006F                     _ret:
   208                           	callstack 0
   209   00006F                     	ds	1
   210   000000                     _PORTBbits	set	3969
   211   000000                     _ADCON2bits	set	4032
   212   000000                     _ADCON1bits	set	4033
   213   000000                     _ADCON0bits	set	4034
   214   000000                     _PORTE	set	3972
   215   000000                     _PORTD	set	3971
   216   000000                     _PORTC	set	3970
   217   000000                     _PORTB	set	3969
   218   000000                     _PORTA	set	3968
   219   000000                     _LATA	set	3977
   220   000000                     _TRISA	set	3986
   221   000000                     _T1CONbits	set	4045
   222   000000                     _T0CONbits	set	4053
   223   000000                     _INTCON3bits	set	4080
   224   000000                     _INTCONbits	set	4082
   225   000000                     _PIE1bits	set	3997
   226   000000                     _PIR1bits	set	3998
   227   000000                     _EECON1bits	set	4006
   228   000000                     _EEDATA	set	4008
   229   000000                     _EEADR	set	4009
   230   000000                     _EEADRH	set	4010
   231   000000                     _LATE	set	3981
   232   000000                     _LATD	set	3980
   233   000000                     _LATC	set	3979
   234   000000                     _LATB	set	3978
   235                           
   236                           ; #config settings
   237                           
   238                           	psect	cinit
   239   001606                     __pcinit:
   240                           	callstack 0
   241   001606                     start_initialization:
   242                           	callstack 0
   243   001606                     __initialization:
   244                           	callstack 0
   245                           
   246                           ; Initialize objects allocated to BANK0 (8 bytes)
   247                           ; load TBLPTR registers with __pidataBANK0
   248   001606  0E06               	movlw	low __pidataBANK0
   249   001608  6EF6               	movwf	tblptrl,c
   250   00160A  0E18               	movlw	high __pidataBANK0
   251   00160C  6EF7               	movwf	tblptrh,c
   252   00160E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   253   001610  6EF8               	movwf	tblptru,c
   254   001612  EE00  F08B         	lfsr	0,__pdataBANK0
   255   001616  EE10 F008          	lfsr	1,8
   256   00161A                     copy_data0:
   257   00161A  0009               	tblrd		*+
   258   00161C  CFF5 FFEE          	movff	tablat,postinc0
   259   001620  50E5               	movf	postdec1,w,c
   260   001622  50E1               	movf	fsr1l,w,c
   261   001624  E1FA               	bnz	copy_data0
   262                           
   263                           ; Initialize objects allocated to COMRAM (46 bytes)
   264                           ; load TBLPTR registers with __pidataCOMRAM
   265   001626  0EA2               	movlw	low __pidataCOMRAM
   266   001628  6EF6               	movwf	tblptrl,c
   267   00162A  0E17               	movlw	high __pidataCOMRAM
   268   00162C  6EF7               	movwf	tblptrh,c
   269   00162E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   270   001630  6EF8               	movwf	tblptru,c
   271   001632  EE00  F030         	lfsr	0,__pdataCOMRAM
   272   001636  EE10 F02E          	lfsr	1,46
   273   00163A                     copy_data1:
   274   00163A  0009               	tblrd		*+
   275   00163C  CFF5 FFEE          	movff	tablat,postinc0
   276   001640  50E5               	movf	postdec1,w,c
   277   001642  50E1               	movf	fsr1l,w,c
   278   001644  E1FA               	bnz	copy_data1
   279                           
   280                           ; Clear objects allocated to COMRAM (47 bytes)
   281   001646  EE00  F001         	lfsr	0,__pbssCOMRAM
   282   00164A  0E2F               	movlw	47
   283   00164C                     clear_0:
   284   00164C  6AEE               	clrf	postinc0,c
   285   00164E  06E8               	decf	wreg,f,c
   286   001650  E1FD               	bnz	clear_0
   287   001652                     end_of_initialization:
   288                           	callstack 0
   289   001652                     __end_of__initialization:
   290                           	callstack 0
   291   001652  9070               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   292   001654  9270               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   293   001656  0100               	movlb	0
   294   001658  EFB9  F00B         	goto	_main	;jump to C main() function
   295                           
   296                           	psect	bssCOMRAM
   297   000001                     __pbssCOMRAM:
   298                           	callstack 0
   299   000001                     	ds	6
   300   000007                     _TMR1_preload:
   301                           	callstack 0
   302   000007                     	ds	2
   303   000009                     _Interrupt_Handler@Timer1$F2321:
   304                           	callstack 0
   305   000009                     	ds	2
   306   00000B                     _TMR0_preload:
   307                           	callstack 0
   308   00000B                     	ds	2
   309   00000D                     _Interrupt_Handler:
   310                           	callstack 0
   311   00000D                     	ds	2
   312   00000F                     _RB7_InterruptHandler_LOW:
   313                           	callstack 0
   314   00000F                     	ds	2
   315   000011                     _RB7_InterruptHandler_HIGH:
   316                           	callstack 0
   317   000011                     	ds	2
   318   000013                     _RB6_InterruptHandler_LOW:
   319                           	callstack 0
   320   000013                     	ds	2
   321   000015                     _RB6_InterruptHandler_HIGH:
   322                           	callstack 0
   323   000015                     	ds	2
   324   000017                     _RB5_InterruptHandler_LOW:
   325                           	callstack 0
   326   000017                     	ds	2
   327   000019                     _RB5_InterruptHandler_HIGH:
   328                           	callstack 0
   329   000019                     	ds	2
   330   00001B                     _RB4_InterruptHandler_LOW:
   331                           	callstack 0
   332   00001B                     	ds	2
   333   00001D                     _RB4_InterruptHandler_HIGH:
   334                           	callstack 0
   335   00001D                     	ds	2
   336   00001F                     _INT2_InterruptHandler:
   337                           	callstack 0
   338   00001F                     	ds	2
   339   000021                     _INT1_InterruptHandler:
   340                           	callstack 0
   341   000021                     	ds	2
   342   000023                     _INT0_InterruptHandler:
   343                           	callstack 0
   344   000023                     	ds	2
   345   000025                     _ADC_InterruptHandler:
   346                           	callstack 0
   347   000025                     	ds	2
   348   000027                     relay_off@F3052:
   349                           	callstack 0
   350   000027                     	ds	1
   351   000028                     relay_on@F3047:
   352                           	callstack 0
   353   000028                     	ds	1
   354   000029                     relay_initialize@F3042:
   355                           	callstack 0
   356   000029                     	ds	1
   357   00002A                     led_toggle@F3063:
   358                           	callstack 0
   359   00002A                     	ds	1
   360   00002B                     led_turn_off@F3058:
   361                           	callstack 0
   362   00002B                     	ds	1
   363   00002C                     led_turn_on@F3053:
   364                           	callstack 0
   365   00002C                     	ds	1
   366   00002D                     led_intialize@F3048:
   367                           	callstack 0
   368   00002D                     	ds	1
   369   00002E                     _TMR1_COUNTER:
   370                           	callstack 0
   371   00002E                     	ds	2
   372                           
   373                           	psect	dataCOMRAM
   374   000030                     __pdataCOMRAM:
   375                           	callstack 0
   376   000030                     _PORT_REG:
   377                           	callstack 0
   378   000030                     	ds	10
   379   00003A                     _TRIS_REG:
   380                           	callstack 0
   381   00003A                     	ds	10
   382   000044                     _LAT_REG:
   383                           	callstack 0
   384   000044                     	ds	10
   385   00004E                     _lcd_1:
   386                           	callstack 0
   387   00004E                     	ds	6
   388   000054                     _RB7_Flag:
   389                           	callstack 0
   390   000054                     	ds	1
   391   000055                     _RB6_Flag:
   392                           	callstack 0
   393   000055                     	ds	1
   394   000056                     _RB5_Flag:
   395                           	callstack 0
   396   000056                     	ds	1
   397   000057                     _RB4_Flag:
   398                           	callstack 0
   399   000057                     	ds	1
   400   000058                     _TM1_Counter:
   401                           	callstack 0
   402   000058                     	ds	5
   403   00005D                     _led_1:
   404                           	callstack 0
   405   00005D                     	ds	1
   406                           
   407                           	psect	dataBANK0
   408   00008B                     __pdataBANK0:
   409                           	callstack 0
   410   00008B                     _keypad_1:
   411                           	callstack 0
   412   00008B                     	ds	8
   413                           
   414                           	psect	cstackBANK0
   415   000080                     __pcstackBANK0:
   416                           	callstack 0
   417   000080                     Timer1_Read_Value@TMR1:
   418                           	callstack 0
   419   000080                     TMR1_Mode_Select@TMR1:
   420                           	callstack 0
   421   000080                     TMR1_Interrupt_Init@TMR1:
   422                           	callstack 0
   423                           
   424                           ; 2 bytes @ 0x0
   425   000080                     	ds	2
   426   000082                     Timer1_Initialize@TMR1:
   427                           	callstack 0
   428   000082                     Timer1_Read_Value@value:
   429                           	callstack 0
   430                           
   431                           ; 2 bytes @ 0x2
   432   000082                     	ds	2
   433   000084                     ??_Timer1_Initialize:
   434   000084                     ??_Timer1_Read_Value:
   435                           
   436                           ; 1 bytes @ 0x4
   437   000084                     	ds	4
   438   000088                     Timer1_Read_Value@TMHIGH:
   439                           	callstack 0
   440                           
   441                           ; 1 bytes @ 0x8
   442   000088                     	ds	1
   443   000089                     Timer1_Read_Value@TMLOW:
   444                           	callstack 0
   445                           
   446                           ; 1 bytes @ 0x9
   447   000089                     	ds	1
   448   00008A                     Timer1_Read_Value@ret:
   449                           	callstack 0
   450                           
   451                           ; 1 bytes @ 0xA
   452   00008A                     	ds	1
   453   00008B                     
   454                           ; 1 bytes @ 0xB
   455                           
   456                           	psect	cstackCOMRAM
   457   00005E                     __pcstackCOMRAM:
   458                           	callstack 0
   459   00005E                     ??_RB4_ISR:
   460   00005E                     ??_RB5_ISR:
   461   00005E                     ??_RB6_ISR:
   462   00005E                     ??_RB7_ISR:
   463   00005E                     gpio_pin_toggle@str:
   464                           	callstack 0
   465                           
   466                           ; 2 bytes @ 0x0
   467   00005E                     	ds	2
   468   000060                     ??_gpio_pin_toggle:
   469   000060                     RB4_ISR@FUNC_DETECTION:
   470                           	callstack 0
   471   000060                     RB5_ISR@FUNC_DETECTION:
   472                           	callstack 0
   473   000060                     RB6_ISR@FUNC_DETECTION:
   474                           	callstack 0
   475   000060                     RB7_ISR@FUNC_DETECTION:
   476                           	callstack 0
   477                           
   478                           ; 1 bytes @ 0x2
   479   000060                     	ds	5
   480   000065                     led_toggle@LED_CONFIG:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0x7
   484   000065                     	ds	2
   485   000067                     ??_led_toggle:
   486                           
   487                           ; 1 bytes @ 0x9
   488   000067                     	ds	1
   489   000068                     led_toggle@LED_IN:
   490                           	callstack 0
   491                           
   492                           ; 1 bytes @ 0xA
   493   000068                     	ds	1
   494   000069                     ??_Interrupts_Manager_PriorityOff:
   495                           
   496                           ; 1 bytes @ 0xB
   497   000069                     	ds	6
   498                           
   499 ;;
   500 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   501 ;;
   502 ;; *************** function _main *****************
   503 ;; Defined at:
   504 ;;		line 57 in file "Application.c"
   505 ;; Parameters:    Size  Location     Type
   506 ;;		None
   507 ;; Auto vars:     Size  Location     Type
   508 ;;		None
   509 ;; Return value:  Size  Location     Type
   510 ;;                  2  992[None  ] int 
   511 ;; Registers used:
   512 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   513 ;; Tracked objects:
   514 ;;		On entry : 0/0
   515 ;;		On exit  : 0/0
   516 ;;		Unchanged: 0/0
   517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   522 ;;Total ram usage:        0 bytes
   523 ;; Hardware stack levels required when called: 7
   524 ;; This function calls:
   525 ;;		_Timer1_Initialize
   526 ;;		_Timer1_Read_Value
   527 ;; This function is called by:
   528 ;;		Startup code after reset
   529 ;; This function uses a non-reentrant model
   530 ;;
   531                           
   532                           	psect	text0
   533   001772                     __ptext0:
   534                           	callstack 0
   535   001772                     _main:
   536                           	callstack 24
   537   001772                     
   538                           ;Application.c: 58:     ret = Timer1_Initialize(&TM1_Counter);
   539   001772  0E58               	movlw	low _TM1_Counter
   540   001774  0100               	movlb	0	; () banked
   541   001776  6F82               	movwf	Timer1_Initialize@TMR1& (0+255),b
   542   001778  0E00               	movlw	high _TM1_Counter
   543   00177A  6F83               	movwf	(Timer1_Initialize@TMR1+1)& (0+255),b
   544   00177C  EC97  F009         	call	_Timer1_Initialize	;wreg free
   545   001780  6E6F               	movwf	_ret^0,c
   546   001782                     l993:
   547                           
   548                           ;Application.c: 60:         ret = Timer1_Read_Value(&TM1_Counter , &TMR1_COUNTER);
   549   001782  0E58               	movlw	low _TM1_Counter
   550   001784  0100               	movlb	0	; () banked
   551   001786  6F80               	movwf	Timer1_Read_Value@TMR1& (0+255),b
   552   001788  0E00               	movlw	high _TM1_Counter
   553   00178A  6F81               	movwf	(Timer1_Read_Value@TMR1+1)& (0+255),b
   554   00178C  0E2E               	movlw	low _TMR1_COUNTER
   555   00178E  6F82               	movwf	Timer1_Read_Value@value& (0+255),b
   556   001790  0E00               	movlw	high _TMR1_COUNTER
   557   001792  6F83               	movwf	(Timer1_Read_Value@value+1)& (0+255),b
   558   001794  ECD3  F00A         	call	_Timer1_Read_Value	;wreg free
   559   001798  6E6F               	movwf	_ret^0,c
   560   00179A  EFC1  F00B         	goto	l993
   561   00179E  EF07  F000         	goto	start
   562   0017A2                     __end_of_main:
   563                           	callstack 0
   564                           
   565 ;; *************** function _Timer1_Read_Value *****************
   566 ;; Defined at:
   567 ;;		line 84 in file "MCAL_Layer/Timer1/Timer1.c"
   568 ;; Parameters:    Size  Location     Type
   569 ;;  TMR1            2    0[BANK0 ] PTR struct .
   570 ;;		 -> TM1_Counter(5), 
   571 ;;  value           2    2[BANK0 ] PTR unsigned short 
   572 ;;		 -> TMR1_COUNTER(2), 
   573 ;; Auto vars:     Size  Location     Type
   574 ;;  ret             1   10[BANK0 ] unsigned char 
   575 ;;  TMLOW           1    9[BANK0 ] unsigned char 
   576 ;;  TMHIGH          1    8[BANK0 ] unsigned char 
   577 ;; Return value:  Size  Location     Type
   578 ;;                  1    wreg      unsigned char 
   579 ;; Registers used:
   580 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   581 ;; Tracked objects:
   582 ;;		On entry : 0/0
   583 ;;		On exit  : 0/0
   584 ;;		Unchanged: 0/0
   585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   586 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   587 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   588 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   589 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   590 ;;Total ram usage:       11 bytes
   591 ;; Hardware stack levels used: 1
   592 ;; Hardware stack levels required when called: 5
   593 ;; This function calls:
   594 ;;		Nothing
   595 ;; This function is called by:
   596 ;;		_main
   597 ;; This function uses a non-reentrant model
   598 ;;
   599                           
   600                           	psect	text1
   601   0015A6                     __ptext1:
   602                           	callstack 0
   603   0015A6                     _Timer1_Read_Value:
   604                           	callstack 25
   605   0015A6  0E00               	movlw	0
   606   0015A8  0100               	movlb	0	; () banked
   607   0015AA  6F89               	movwf	Timer1_Read_Value@TMLOW& (0+255),b
   608                           
   609                           ;MCAL_Layer/Timer1/Timer1.c: 86:     Std_ReturnType ret = (Std_ReturnType)0x01;
   610   0015AC  0E01               	movlw	1
   611   0015AE  6F8A               	movwf	Timer1_Read_Value@ret& (0+255),b
   612   0015B0                     
   613                           ; BSR set to: 0
   614                           ;MCAL_Layer/Timer1/Timer1.c: 88:     if((TMR1 == ((void*)0)) || (value == ((void*)0))){
   615   0015B0  5180               	movf	Timer1_Read_Value@TMR1& (0+255),w,b
   616   0015B2  1181               	iorwf	(Timer1_Read_Value@TMR1+1)& (0+255),w,b
   617   0015B4  B4D8               	btfsc	status,2,c
   618   0015B6  EFDF  F00A         	goto	u2991
   619   0015BA  EFE1  F00A         	goto	u2990
   620   0015BE                     u2991:
   621   0015BE  EFEA  F00A         	goto	l3968
   622   0015C2                     u2990:
   623   0015C2                     
   624                           ; BSR set to: 0
   625   0015C2  5182               	movf	Timer1_Read_Value@value& (0+255),w,b
   626   0015C4  1183               	iorwf	(Timer1_Read_Value@value+1)& (0+255),w,b
   627   0015C6  A4D8               	btfss	status,2,c
   628   0015C8  EFE8  F00A         	goto	u3001
   629   0015CC  EFEA  F00A         	goto	u3000
   630   0015D0                     u3001:
   631   0015D0  EFEC  F00A         	goto	l1108
   632   0015D4                     u3000:
   633   0015D4                     l3968:
   634                           
   635                           ; BSR set to: 0
   636                           ;MCAL_Layer/Timer1/Timer1.c: 90:     }
   637   0015D4  EF01  F00B         	goto	l3972
   638   0015D8                     l1108:
   639                           
   640                           ; BSR set to: 0
   641                           ;MCAL_Layer/Timer1/Timer1.c: 92:             TMLOW = TMR1L;
   642   0015D8  CFCE F089          	movff	4046,Timer1_Read_Value@TMLOW	;volatile
   643                           
   644                           ;MCAL_Layer/Timer1/Timer1.c: 93:             TMHIGH = TMR1H;
   645   0015DC  CFCF F088          	movff	4047,Timer1_Read_Value@TMHIGH	;volatile
   646   0015E0                     
   647                           ; BSR set to: 0
   648                           ;MCAL_Layer/Timer1/Timer1.c: 94:             *value = (uint16)(TMLOW + (TMHIGH << 8));
   649   0015E0  5188               	movf	Timer1_Read_Value@TMHIGH& (0+255),w,b
   650   0015E2  6F85               	movwf	(??_Timer1_Read_Value+1)& (0+255),b
   651   0015E4  6B84               	clrf	??_Timer1_Read_Value& (0+255),b
   652   0015E6  5189               	movf	Timer1_Read_Value@TMLOW& (0+255),w,b
   653   0015E8  2584               	addwf	??_Timer1_Read_Value& (0+255),w,b
   654   0015EA  6F86               	movwf	(??_Timer1_Read_Value+2)& (0+255),b
   655   0015EC  0E00               	movlw	0
   656   0015EE  2185               	addwfc	(??_Timer1_Read_Value+1)& (0+255),w,b
   657   0015F0  6F87               	movwf	(??_Timer1_Read_Value+3)& (0+255),b
   658   0015F2  C082  FFD9         	movff	Timer1_Read_Value@value,fsr2l
   659   0015F6  C083  FFDA         	movff	Timer1_Read_Value@value+1,fsr2h
   660   0015FA  C086  FFDE         	movff	??_Timer1_Read_Value+2,postinc2
   661   0015FE  C087  FFDD         	movff	??_Timer1_Read_Value+3,postdec2
   662   001602                     l3972:
   663                           
   664                           ; BSR set to: 0
   665                           ;MCAL_Layer/Timer1/Timer1.c: 96:     return ret;
   666   001602  0E01               	movlw	1
   667   001604                     
   668                           ; BSR set to: 0
   669   001604  0012               	return		;funcret
   670   001606                     __end_of_Timer1_Read_Value:
   671                           	callstack 0
   672                           
   673 ;; *************** function _Timer1_Initialize *****************
   674 ;; Defined at:
   675 ;;		line 18 in file "MCAL_Layer/Timer1/Timer1.c"
   676 ;; Parameters:    Size  Location     Type
   677 ;;  TMR1            2    2[BANK0 ] PTR struct .
   678 ;;		 -> TM1_Counter(5), 
   679 ;; Auto vars:     Size  Location     Type
   680 ;;  ret             1    0        unsigned char 
   681 ;; Return value:  Size  Location     Type
   682 ;;                  1    wreg      unsigned char 
   683 ;; Registers used:
   684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   685 ;; Tracked objects:
   686 ;;		On entry : 0/0
   687 ;;		On exit  : 0/0
   688 ;;		Unchanged: 0/0
   689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   690 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   692 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   693 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   694 ;;Total ram usage:        4 bytes
   695 ;; Hardware stack levels used: 1
   696 ;; Hardware stack levels required when called: 6
   697 ;; This function calls:
   698 ;;		_TMR1_Interrupt_Init
   699 ;;		_TMR1_Mode_Select
   700 ;; This function is called by:
   701 ;;		_main
   702 ;; This function uses a non-reentrant model
   703 ;;
   704                           
   705                           	psect	text2
   706   00132E                     __ptext2:
   707                           	callstack 0
   708   00132E                     _Timer1_Initialize:
   709                           	callstack 24
   710   00132E                     
   711                           ;MCAL_Layer/Timer1/Timer1.c: 22:     if(TMR1 == ((void*)0)){
   712   00132E  0100               	movlb	0	; () banked
   713   001330  5182               	movf	Timer1_Initialize@TMR1& (0+255),w,b
   714   001332  1183               	iorwf	(Timer1_Initialize@TMR1+1)& (0+255),w,b
   715   001334  A4D8               	btfss	status,2,c
   716   001336  EF9F  F009         	goto	u2961
   717   00133A  EFA1  F009         	goto	u2960
   718   00133E                     u2961:
   719   00133E  EFA3  F009         	goto	l1089
   720   001342                     u2960:
   721   001342                     
   722                           ; BSR set to: 0
   723                           ;MCAL_Layer/Timer1/Timer1.c: 24:     }
   724   001342  EF01  F00A         	goto	l3958
   725   001346                     l1089:
   726                           
   727                           ; BSR set to: 0
   728                           ;MCAL_Layer/Timer1/Timer1.c: 27:         (T1CONbits.TMR1ON = 0);
   729   001346  90CD               	bcf	205,0,c	;volatile
   730   001348                     
   731                           ; BSR set to: 0
   732                           ;MCAL_Layer/Timer1/Timer1.c: 29:         TMR1_Mode_Select(TMR1);
   733   001348  C082  F080         	movff	Timer1_Initialize@TMR1,TMR1_Mode_Select@TMR1
   734   00134C  C083  F081         	movff	Timer1_Initialize@TMR1+1,TMR1_Mode_Select@TMR1+1
   735   001350  EC94  F00A         	call	_TMR1_Mode_Select	;wreg free
   736   001354                     
   737                           ;MCAL_Layer/Timer1/Timer1.c: 31:         if(1 == TMR1->TMR1_OSCILLATOR_MODE){
   738   001354  0100               	movlb	0	; () banked
   739   001356  EE20 F004          	lfsr	2,4
   740   00135A  5182               	movf	Timer1_Initialize@TMR1& (0+255),w,b
   741   00135C  26D9               	addwf	fsr2l,f,c
   742   00135E  5183               	movf	(Timer1_Initialize@TMR1+1)& (0+255),w,b
   743   001360  22DA               	addwfc	fsr2h,f,c
   744   001362  A8DF               	btfss	indf2,4,c
   745   001364  EFB6  F009         	goto	u2971
   746   001368  EFB8  F009         	goto	u2970
   747   00136C                     u2971:
   748   00136C  EFBB  F009         	goto	l3942
   749   001370                     u2970:
   750   001370                     
   751                           ; BSR set to: 0
   752                           ;MCAL_Layer/Timer1/Timer1.c: 32:             (T1CONbits.T1OSCEN = 1);
   753   001370  86CD               	bsf	205,3,c	;volatile
   754                           
   755                           ;MCAL_Layer/Timer1/Timer1.c: 33:         }
   756   001372  EFC9  F009         	goto	l3946
   757   001376                     l3942:
   758                           
   759                           ; BSR set to: 0
   760   001376  EE20 F004          	lfsr	2,4
   761   00137A  5182               	movf	Timer1_Initialize@TMR1& (0+255),w,b
   762   00137C  26D9               	addwf	fsr2l,f,c
   763   00137E  5183               	movf	(Timer1_Initialize@TMR1+1)& (0+255),w,b
   764   001380  22DA               	addwfc	fsr2h,f,c
   765   001382  B8DF               	btfsc	indf2,4,c
   766   001384  EFC6  F009         	goto	u2981
   767   001388  EFC8  F009         	goto	u2980
   768   00138C                     u2981:
   769   00138C  EFC9  F009         	goto	l3946
   770   001390                     u2980:
   771   001390                     
   772                           ; BSR set to: 0
   773                           ;MCAL_Layer/Timer1/Timer1.c: 35:             (T1CONbits.T1OSCEN = 0);
   774   001390  96CD               	bcf	205,3,c	;volatile
   775   001392                     l3946:
   776                           
   777                           ; BSR set to: 0
   778                           ;MCAL_Layer/Timer1/Timer1.c: 39:         (T1CONbits.T1CKPS = TMR1->TMR1_Prescaler_Select
      +                          ed);
   779   001392  EE20 F004          	lfsr	2,4
   780   001396  5182               	movf	Timer1_Initialize@TMR1& (0+255),w,b
   781   001398  26D9               	addwf	fsr2l,f,c
   782   00139A  5183               	movf	(Timer1_Initialize@TMR1+1)& (0+255),w,b
   783   00139C  22DA               	addwfc	fsr2h,f,c
   784   00139E  50DF               	movf	223,w,c
   785   0013A0  0B03               	andlw	3
   786   0013A2  6F84               	movwf	??_Timer1_Initialize& (0+255),b
   787   0013A4  3B84               	swapf	??_Timer1_Initialize& (0+255),f,b
   788   0013A6  50CD               	movf	205,w,c	;volatile
   789   0013A8  1984               	xorwf	??_Timer1_Initialize& (0+255),w,b
   790   0013AA  0BCF               	andlw	-49
   791   0013AC  1984               	xorwf	??_Timer1_Initialize& (0+255),w,b
   792   0013AE  6ECD               	movwf	205,c	;volatile
   793   0013B0                     
   794                           ; BSR set to: 0
   795                           ;MCAL_Layer/Timer1/Timer1.c: 42:         TMR1_Interrupt_Init(TMR1);
   796   0013B0  C082  F080         	movff	Timer1_Initialize@TMR1,TMR1_Interrupt_Init@TMR1
   797   0013B4  C083  F081         	movff	Timer1_Initialize@TMR1+1,TMR1_Interrupt_Init@TMR1+1
   798   0013B8  ECE8  F00B         	call	_TMR1_Interrupt_Init	;wreg free
   799   0013BC                     
   800                           ;MCAL_Layer/Timer1/Timer1.c: 45:         TMR1H = (TMR1->TMR1_Preload_Value >> 8);
   801   0013BC  0100               	movlb	0	; () banked
   802   0013BE  EE20 F002          	lfsr	2,2
   803   0013C2  5182               	movf	Timer1_Initialize@TMR1& (0+255),w,b
   804   0013C4  26D9               	addwf	fsr2l,f,c
   805   0013C6  5183               	movf	(Timer1_Initialize@TMR1+1)& (0+255),w,b
   806   0013C8  22DA               	addwfc	fsr2h,f,c
   807   0013CA  CFDE F084          	movff	postinc2,??_Timer1_Initialize
   808   0013CE  CFDD F085          	movff	postdec2,??_Timer1_Initialize+1
   809   0013D2  C085  F084         	movff	??_Timer1_Initialize+1,??_Timer1_Initialize
   810   0013D6  6B85               	clrf	(??_Timer1_Initialize+1)& (0+255),b
   811   0013D8  5184               	movf	??_Timer1_Initialize& (0+255),w,b
   812   0013DA  6ECF               	movwf	207,c	;volatile
   813   0013DC                     
   814                           ; BSR set to: 0
   815                           ;MCAL_Layer/Timer1/Timer1.c: 46:         TMR1L = (uint8)(TMR1->TMR1_Preload_Value);
   816   0013DC  EE20 F002          	lfsr	2,2
   817   0013E0  5182               	movf	Timer1_Initialize@TMR1& (0+255),w,b
   818   0013E2  26D9               	addwf	fsr2l,f,c
   819   0013E4  5183               	movf	(Timer1_Initialize@TMR1+1)& (0+255),w,b
   820   0013E6  22DA               	addwfc	fsr2h,f,c
   821   0013E8  50DF               	movf	indf2,w,c
   822   0013EA  6ECE               	movwf	206,c	;volatile
   823   0013EC                     
   824                           ; BSR set to: 0
   825                           ;MCAL_Layer/Timer1/Timer1.c: 47:         TMR1_preload = TMR1->TMR1_Preload_Value;
   826   0013EC  EE20 F002          	lfsr	2,2
   827   0013F0  5182               	movf	Timer1_Initialize@TMR1& (0+255),w,b
   828   0013F2  26D9               	addwf	fsr2l,f,c
   829   0013F4  5183               	movf	(Timer1_Initialize@TMR1+1)& (0+255),w,b
   830   0013F6  22DA               	addwfc	fsr2h,f,c
   831   0013F8  CFDE F007          	movff	postinc2,_TMR1_preload
   832   0013FC  CFDD F008          	movff	postdec2,_TMR1_preload+1
   833   001400                     
   834                           ; BSR set to: 0
   835                           ;MCAL_Layer/Timer1/Timer1.c: 49:         (T1CONbits.TMR1ON = 1);
   836   001400  80CD               	bsf	205,0,c	;volatile
   837   001402                     l3958:
   838                           
   839                           ; BSR set to: 0
   840                           ;MCAL_Layer/Timer1/Timer1.c: 51:     return ret;
   841   001402  0E01               	movlw	1
   842   001404                     
   843                           ; BSR set to: 0
   844   001404  0012               	return		;funcret
   845   001406                     __end_of_Timer1_Initialize:
   846                           	callstack 0
   847                           
   848 ;; *************** function _TMR1_Mode_Select *****************
   849 ;; Defined at:
   850 ;;		line 101 in file "MCAL_Layer/Timer1/Timer1.c"
   851 ;; Parameters:    Size  Location     Type
   852 ;;  TMR1            2    0[BANK0 ] PTR struct .
   853 ;;		 -> TM1_Counter(5), 
   854 ;; Auto vars:     Size  Location     Type
   855 ;;		None
   856 ;; Return value:  Size  Location     Type
   857 ;;                  1    wreg      void 
   858 ;; Registers used:
   859 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   860 ;; Tracked objects:
   861 ;;		On entry : 0/0
   862 ;;		On exit  : 0/0
   863 ;;		Unchanged: 0/0
   864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   865 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   868 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   869 ;;Total ram usage:        2 bytes
   870 ;; Hardware stack levels used: 1
   871 ;; Hardware stack levels required when called: 5
   872 ;; This function calls:
   873 ;;		Nothing
   874 ;; This function is called by:
   875 ;;		_Timer1_Initialize
   876 ;; This function uses a non-reentrant model
   877 ;;
   878                           
   879                           	psect	text3
   880   001528                     __ptext3:
   881                           	callstack 0
   882   001528                     _TMR1_Mode_Select:
   883                           	callstack 24
   884   001528                     
   885                           ;MCAL_Layer/Timer1/Timer1.c: 102:     if(0 == TMR1->TMR1_Mode_Selected){
   886   001528  0100               	movlb	0	; () banked
   887   00152A  EE20 F004          	lfsr	2,4
   888   00152E  5180               	movf	TMR1_Mode_Select@TMR1& (0+255),w,b
   889   001530  26D9               	addwf	fsr2l,f,c
   890   001532  5181               	movf	(TMR1_Mode_Select@TMR1+1)& (0+255),w,b
   891   001534  22DA               	addwfc	fsr2h,f,c
   892   001536  B4DF               	btfsc	indf2,2,c
   893   001538  EFA0  F00A         	goto	u2921
   894   00153C  EFA2  F00A         	goto	u2920
   895   001540                     u2921:
   896   001540  EFA5  F00A         	goto	l3910
   897   001544                     u2920:
   898   001544                     
   899                           ; BSR set to: 0
   900                           ;MCAL_Layer/Timer1/Timer1.c: 103:         (T1CONbits.TMR1CS = 0);
   901   001544  92CD               	bcf	205,1,c	;volatile
   902                           
   903                           ;MCAL_Layer/Timer1/Timer1.c: 104:     }
   904   001546  EFD2  F00A         	goto	l1123
   905   00154A                     l3910:
   906                           
   907                           ; BSR set to: 0
   908   00154A  EE20 F004          	lfsr	2,4
   909   00154E  5180               	movf	TMR1_Mode_Select@TMR1& (0+255),w,b
   910   001550  26D9               	addwf	fsr2l,f,c
   911   001552  5181               	movf	(TMR1_Mode_Select@TMR1+1)& (0+255),w,b
   912   001554  22DA               	addwfc	fsr2h,f,c
   913   001556  A4DF               	btfss	indf2,2,c
   914   001558  EFB0  F00A         	goto	u2931
   915   00155C  EFB2  F00A         	goto	u2930
   916   001560                     u2931:
   917   001560  EFD2  F00A         	goto	l1123
   918   001564                     u2930:
   919   001564                     
   920                           ; BSR set to: 0
   921                           ;MCAL_Layer/Timer1/Timer1.c: 106:         (T1CONbits.TMR1CS = 1);
   922   001564  82CD               	bsf	205,1,c	;volatile
   923   001566                     
   924                           ; BSR set to: 0
   925                           ;MCAL_Layer/Timer1/Timer1.c: 107:         if(1 == TMR1->TMR1_COUNTER_SYNCHRONIZATION_MOD
      +                          E){
   926   001566  EE20 F004          	lfsr	2,4
   927   00156A  5180               	movf	TMR1_Mode_Select@TMR1& (0+255),w,b
   928   00156C  26D9               	addwf	fsr2l,f,c
   929   00156E  5181               	movf	(TMR1_Mode_Select@TMR1+1)& (0+255),w,b
   930   001570  22DA               	addwfc	fsr2h,f,c
   931   001572  A6DF               	btfss	indf2,3,c
   932   001574  EFBE  F00A         	goto	u2941
   933   001578  EFC0  F00A         	goto	u2940
   934   00157C                     u2941:
   935   00157C  EFC3  F00A         	goto	l3918
   936   001580                     u2940:
   937   001580                     
   938                           ; BSR set to: 0
   939                           ;MCAL_Layer/Timer1/Timer1.c: 108:             (T1CONbits.T1SYNC = 1);
   940   001580  84CD               	bsf	205,2,c	;volatile
   941                           
   942                           ;MCAL_Layer/Timer1/Timer1.c: 109:         }
   943   001582  EFD1  F00A         	goto	l3922
   944   001586                     l3918:
   945                           
   946                           ; BSR set to: 0
   947   001586  EE20 F004          	lfsr	2,4
   948   00158A  5180               	movf	TMR1_Mode_Select@TMR1& (0+255),w,b
   949   00158C  26D9               	addwf	fsr2l,f,c
   950   00158E  5181               	movf	(TMR1_Mode_Select@TMR1+1)& (0+255),w,b
   951   001590  22DA               	addwfc	fsr2h,f,c
   952   001592  B6DF               	btfsc	indf2,3,c
   953   001594  EFCE  F00A         	goto	u2951
   954   001598  EFD0  F00A         	goto	u2950
   955   00159C                     u2951:
   956   00159C  EFD1  F00A         	goto	l3922
   957   0015A0                     u2950:
   958   0015A0                     
   959                           ; BSR set to: 0
   960                           ;MCAL_Layer/Timer1/Timer1.c: 111:             (T1CONbits.T1SYNC = 0);
   961   0015A0  94CD               	bcf	205,2,c	;volatile
   962   0015A2                     l3922:
   963                           
   964                           ; BSR set to: 0
   965                           ;MCAL_Layer/Timer1/Timer1.c: 115:         (TRISC |= (0x01 << 0x0));
   966   0015A2  8094               	bsf	148,0,c	;volatile
   967   0015A4                     l1123:
   968                           
   969                           ; BSR set to: 0
   970   0015A4  0012               	return		;funcret
   971   0015A6                     __end_of_TMR1_Mode_Select:
   972                           	callstack 0
   973                           
   974 ;; *************** function _TMR1_Interrupt_Init *****************
   975 ;; Defined at:
   976 ;;		line 121 in file "MCAL_Layer/Timer1/Timer1.c"
   977 ;; Parameters:    Size  Location     Type
   978 ;;  TMR1            2    0[BANK0 ] PTR struct .
   979 ;;		 -> TM1_Counter(5), 
   980 ;; Auto vars:     Size  Location     Type
   981 ;;		None
   982 ;; Return value:  Size  Location     Type
   983 ;;                  1    wreg      void 
   984 ;; Registers used:
   985 ;;		fsr2l, fsr2h
   986 ;; Tracked objects:
   987 ;;		On entry : 0/0
   988 ;;		On exit  : 0/0
   989 ;;		Unchanged: 0/0
   990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   991 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   994 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   995 ;;Total ram usage:        2 bytes
   996 ;; Hardware stack levels used: 1
   997 ;; Hardware stack levels required when called: 5
   998 ;; This function calls:
   999 ;;		Nothing
  1000 ;; This function is called by:
  1001 ;;		_Timer1_Initialize
  1002 ;; This function uses a non-reentrant model
  1003 ;;
  1004                           
  1005                           	psect	text4
  1006   0017D0                     __ptext4:
  1007                           	callstack 0
  1008   0017D0                     _TMR1_Interrupt_Init:
  1009                           	callstack 24
  1010   0017D0                     
  1011                           ;MCAL_Layer/Timer1/Timer1.c: 122:     (PIR1bits.TMR1IF = 0);
  1012   0017D0  909E               	bcf	158,0,c	;volatile
  1013                           
  1014                           ;MCAL_Layer/Timer1/Timer1.c: 123:     (PIE1bits.TMR1IE = 0);
  1015   0017D2  909D               	bcf	157,0,c	;volatile
  1016                           
  1017                           ;MCAL_Layer/Timer1/Timer1.c: 136:     (INTCONbits.GIE = 1);
  1018   0017D4  8EF2               	bsf	242,7,c	;volatile
  1019                           
  1020                           ;MCAL_Layer/Timer1/Timer1.c: 137:     (INTCONbits.PEIE = 1);
  1021   0017D6  8CF2               	bsf	242,6,c	;volatile
  1022   0017D8                     
  1023                           ;MCAL_Layer/Timer1/Timer1.c: 139:     Interrupt_Handler = TMR1->TMR1_Interrupt_Handler;
  1024   0017D8  C080  FFD9         	movff	TMR1_Interrupt_Init@TMR1,fsr2l
  1025   0017DC  C081  FFDA         	movff	TMR1_Interrupt_Init@TMR1+1,fsr2h
  1026   0017E0  CFDE F009          	movff	postinc2,_Interrupt_Handler@Timer1$F2321
  1027   0017E4  CFDD F00A          	movff	postdec2,_Interrupt_Handler@Timer1$F2321+1
  1028   0017E8                     
  1029                           ;MCAL_Layer/Timer1/Timer1.c: 140:     (PIE1bits.TMR1IE = 1);
  1030   0017E8  809D               	bsf	157,0,c	;volatile
  1031   0017EA  0012               	return		;funcret
  1032   0017EC                     __end_of_TMR1_Interrupt_Init:
  1033                           	callstack 0
  1034                           
  1035 ;; *************** function _Interrupts_Manager_PriorityOff *****************
  1036 ;; Defined at:
  1037 ;;		line 134 in file "MCAL_Layer/Interupt/mcal_interrupt_manager.c"
  1038 ;; Parameters:    Size  Location     Type
  1039 ;;		None
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;		None
  1042 ;; Return value:  Size  Location     Type
  1043 ;;                  1    wreg      void 
  1044 ;; Registers used:
  1045 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  1046 ;; Tracked objects:
  1047 ;;		On entry : 0/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1053 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1054 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1055 ;;Total ram usage:        6 bytes
  1056 ;; Hardware stack levels used: 1
  1057 ;; Hardware stack levels required when called: 4
  1058 ;; This function calls:
  1059 ;;		_ADC_ISR
  1060 ;;		_INT0_ISR
  1061 ;;		_INT1_ISR
  1062 ;;		_INT2_ISR
  1063 ;;		_RB4_ISR
  1064 ;;		_RB5_ISR
  1065 ;;		_RB6_ISR
  1066 ;;		_RB7_ISR
  1067 ;;		_TMR0_ISR
  1068 ;;		_TMR1_ISR
  1069 ;; This function is called by:
  1070 ;;		Interrupt level 2
  1071 ;; This function uses a non-reentrant model
  1072 ;;
  1073                           
  1074                           	psect	intcode
  1075   000008                     __pintcode:
  1076                           	callstack 0
  1077   000008                     _Interrupts_Manager_PriorityOff:
  1078                           	callstack 24
  1079                           
  1080                           ;incstack = 0
  1081   000008  8270               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1082   00000A  ED0C  F008         	call	int_func,f	;refresh shadow registers
  1083                           
  1084                           	psect	intcode_body
  1085   001018                     __pintcode_body:
  1086                           	callstack 24
  1087   001018                     int_func:
  1088                           	callstack 24
  1089   001018  0006               	pop		; remove dummy address from shadow register refresh
  1090   00101A  CFFA F069          	movff	pclath,??_Interrupts_Manager_PriorityOff
  1091   00101E  CFFB F06A          	movff	pclatu,??_Interrupts_Manager_PriorityOff+1
  1092   001022  CFD9 F06B          	movff	fsr2l,??_Interrupts_Manager_PriorityOff+2
  1093   001026  CFDA F06C          	movff	fsr2h,??_Interrupts_Manager_PriorityOff+3
  1094   00102A  CFF3 F06D          	movff	prodl,??_Interrupts_Manager_PriorityOff+4
  1095   00102E  CFF4 F06E          	movff	prodh,??_Interrupts_Manager_PriorityOff+5
  1096   001032                     
  1097                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 138:     if((1 == INTCONbits.INT0IE) && (
      +                          1 == INTCONbits.INT0IF)){
  1098   001032  A8F2               	btfss	242,4,c	;volatile
  1099   001034  EF1E  F008         	goto	i2u248_41
  1100   001038  EF20  F008         	goto	i2u248_40
  1101   00103C                     i2u248_41:
  1102   00103C  EF29  F008         	goto	i2l945
  1103   001040                     i2u248_40:
  1104   001040  A2F2               	btfss	242,1,c	;volatile
  1105   001042  EF25  F008         	goto	i2u249_41
  1106   001046  EF27  F008         	goto	i2u249_40
  1107   00104A                     i2u249_41:
  1108   00104A  EF29  F008         	goto	i2l945
  1109   00104E                     i2u249_40:
  1110   00104E                     
  1111                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 139:         INT0_ISR();
  1112   00104E  EC0B  F00C         	call	_INT0_ISR	;wreg free
  1113   001052                     i2l945:
  1114                           
  1115                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 143:     if((1 == INTCON3bits.INT1IE) && 
      +                          (1 == INTCON3bits.INT1IF)){
  1116   001052  A6F0               	btfss	240,3,c	;volatile
  1117   001054  EF2E  F008         	goto	i2u250_41
  1118   001058  EF30  F008         	goto	i2u250_40
  1119   00105C                     i2u250_41:
  1120   00105C  EF39  F008         	goto	i2l947
  1121   001060                     i2u250_40:
  1122   001060  A0F0               	btfss	240,0,c	;volatile
  1123   001062  EF35  F008         	goto	i2u251_41
  1124   001066  EF37  F008         	goto	i2u251_40
  1125   00106A                     i2u251_41:
  1126   00106A  EF39  F008         	goto	i2l947
  1127   00106E                     i2u251_40:
  1128   00106E                     
  1129                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 144:         INT1_ISR();
  1130   00106E  EC09  F00C         	call	_INT1_ISR	;wreg free
  1131   001072                     i2l947:
  1132                           
  1133                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 148:     if((1 == INTCON3bits.INT2IE) && 
      +                          (1 == INTCON3bits.INT2IF)){
  1134   001072  A8F0               	btfss	240,4,c	;volatile
  1135   001074  EF3E  F008         	goto	i2u252_41
  1136   001078  EF40  F008         	goto	i2u252_40
  1137   00107C                     i2u252_41:
  1138   00107C  EF49  F008         	goto	i2l949
  1139   001080                     i2u252_40:
  1140   001080  A2F0               	btfss	240,1,c	;volatile
  1141   001082  EF45  F008         	goto	i2u253_41
  1142   001086  EF47  F008         	goto	i2u253_40
  1143   00108A                     i2u253_41:
  1144   00108A  EF49  F008         	goto	i2l949
  1145   00108E                     i2u253_40:
  1146   00108E                     
  1147                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 149:         INT2_ISR();
  1148   00108E  EC07  F00C         	call	_INT2_ISR	;wreg free
  1149   001092                     i2l949:
  1150                           
  1151                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 156:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  1152   001092  A6F2               	btfss	242,3,c	;volatile
  1153   001094  EF4E  F008         	goto	i2u254_41
  1154   001098  EF50  F008         	goto	i2u254_40
  1155   00109C                     i2u254_41:
  1156   00109C  EF6B  F008         	goto	i2l951
  1157   0010A0                     i2u254_40:
  1158   0010A0  A0F2               	btfss	242,0,c	;volatile
  1159   0010A2  EF55  F008         	goto	i2u255_41
  1160   0010A6  EF57  F008         	goto	i2u255_40
  1161   0010AA                     i2u255_41:
  1162   0010AA  EF6B  F008         	goto	i2l951
  1163   0010AE                     i2u255_40:
  1164   0010AE  A881               	btfss	129,4,c	;volatile
  1165   0010B0  EF5C  F008         	goto	i2u256_41
  1166   0010B4  EF5E  F008         	goto	i2u256_40
  1167   0010B8                     i2u256_41:
  1168   0010B8  EF6B  F008         	goto	i2l951
  1169   0010BC                     i2u256_40:
  1170   0010BC  0457               	decf	_RB4_Flag^0,w,c	;volatile
  1171   0010BE  A4D8               	btfss	status,2,c
  1172   0010C0  EF64  F008         	goto	i2u257_41
  1173   0010C4  EF66  F008         	goto	i2u257_40
  1174   0010C8                     i2u257_41:
  1175   0010C8  EF6B  F008         	goto	i2l951
  1176   0010CC                     i2u257_40:
  1177   0010CC                     
  1178                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 157:        (PORTBbits.RB4 == GPIO_HIGH) 
      +                          && (RB4_Flag == 1)){;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 158:         RB4_Flag
      +                           = 0;
  1179   0010CC  0E00               	movlw	0
  1180   0010CE  6E57               	movwf	_RB4_Flag^0,c	;volatile
  1181   0010D0                     
  1182                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 159:         RB4_ISR(0);
  1183   0010D0  0E00               	movlw	0
  1184   0010D2  EC82  F00B         	call	_RB4_ISR
  1185   0010D6                     i2l951:
  1186                           
  1187                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 163:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  1188   0010D6  A6F2               	btfss	242,3,c	;volatile
  1189   0010D8  EF70  F008         	goto	i2u258_41
  1190   0010DC  EF72  F008         	goto	i2u258_40
  1191   0010E0                     i2u258_41:
  1192   0010E0  EF8D  F008         	goto	i2l953
  1193   0010E4                     i2u258_40:
  1194   0010E4  A0F2               	btfss	242,0,c	;volatile
  1195   0010E6  EF77  F008         	goto	i2u259_41
  1196   0010EA  EF79  F008         	goto	i2u259_40
  1197   0010EE                     i2u259_41:
  1198   0010EE  EF8D  F008         	goto	i2l953
  1199   0010F2                     i2u259_40:
  1200   0010F2  B881               	btfsc	129,4,c	;volatile
  1201   0010F4  EF7E  F008         	goto	i2u260_41
  1202   0010F8  EF80  F008         	goto	i2u260_40
  1203   0010FC                     i2u260_41:
  1204   0010FC  EF8D  F008         	goto	i2l953
  1205   001100                     i2u260_40:
  1206   001100  5057               	movf	_RB4_Flag^0,w,c	;volatile
  1207   001102  A4D8               	btfss	status,2,c
  1208   001104  EF86  F008         	goto	i2u261_41
  1209   001108  EF88  F008         	goto	i2u261_40
  1210   00110C                     i2u261_41:
  1211   00110C  EF8D  F008         	goto	i2l953
  1212   001110                     i2u261_40:
  1213   001110                     
  1214                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 164:        (PORTBbits.RB4 == GPIO_LOW) &
      +                          & (RB4_Flag == 0)){;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 165:         RB4_Flag 
      +                          = 1;
  1215   001110  0E01               	movlw	1
  1216   001112  6E57               	movwf	_RB4_Flag^0,c	;volatile
  1217   001114                     
  1218                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 166:         RB4_ISR(1);
  1219   001114  0E01               	movlw	1
  1220   001116  EC82  F00B         	call	_RB4_ISR
  1221   00111A                     i2l953:
  1222                           
  1223                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 170:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  1224   00111A  A6F2               	btfss	242,3,c	;volatile
  1225   00111C  EF92  F008         	goto	i2u262_41
  1226   001120  EF94  F008         	goto	i2u262_40
  1227   001124                     i2u262_41:
  1228   001124  EFAF  F008         	goto	i2l955
  1229   001128                     i2u262_40:
  1230   001128  A0F2               	btfss	242,0,c	;volatile
  1231   00112A  EF99  F008         	goto	i2u263_41
  1232   00112E  EF9B  F008         	goto	i2u263_40
  1233   001132                     i2u263_41:
  1234   001132  EFAF  F008         	goto	i2l955
  1235   001136                     i2u263_40:
  1236   001136  AA81               	btfss	129,5,c	;volatile
  1237   001138  EFA0  F008         	goto	i2u264_41
  1238   00113C  EFA2  F008         	goto	i2u264_40
  1239   001140                     i2u264_41:
  1240   001140  EFAF  F008         	goto	i2l955
  1241   001144                     i2u264_40:
  1242   001144  0456               	decf	_RB5_Flag^0,w,c	;volatile
  1243   001146  A4D8               	btfss	status,2,c
  1244   001148  EFA8  F008         	goto	i2u265_41
  1245   00114C  EFAA  F008         	goto	i2u265_40
  1246   001150                     i2u265_41:
  1247   001150  EFAF  F008         	goto	i2l955
  1248   001154                     i2u265_40:
  1249   001154                     
  1250                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 171:        (PORTBbits.RB5 == GPIO_HIGH) 
      +                          && (RB5_Flag == 1)){;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 172:         RB5_Flag
      +                           = 0;
  1251   001154  0E00               	movlw	0
  1252   001156  6E56               	movwf	_RB5_Flag^0,c	;volatile
  1253   001158                     
  1254                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 173:         RB5_ISR(0);
  1255   001158  0E00               	movlw	0
  1256   00115A  EC66  F00B         	call	_RB5_ISR
  1257   00115E                     i2l955:
  1258                           
  1259                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 177:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  1260   00115E  A6F2               	btfss	242,3,c	;volatile
  1261   001160  EFB4  F008         	goto	i2u266_41
  1262   001164  EFB6  F008         	goto	i2u266_40
  1263   001168                     i2u266_41:
  1264   001168  EFD1  F008         	goto	i2l957
  1265   00116C                     i2u266_40:
  1266   00116C  A0F2               	btfss	242,0,c	;volatile
  1267   00116E  EFBB  F008         	goto	i2u267_41
  1268   001172  EFBD  F008         	goto	i2u267_40
  1269   001176                     i2u267_41:
  1270   001176  EFD1  F008         	goto	i2l957
  1271   00117A                     i2u267_40:
  1272   00117A  BA81               	btfsc	129,5,c	;volatile
  1273   00117C  EFC2  F008         	goto	i2u268_41
  1274   001180  EFC4  F008         	goto	i2u268_40
  1275   001184                     i2u268_41:
  1276   001184  EFD1  F008         	goto	i2l957
  1277   001188                     i2u268_40:
  1278   001188  5056               	movf	_RB5_Flag^0,w,c	;volatile
  1279   00118A  A4D8               	btfss	status,2,c
  1280   00118C  EFCA  F008         	goto	i2u269_41
  1281   001190  EFCC  F008         	goto	i2u269_40
  1282   001194                     i2u269_41:
  1283   001194  EFD1  F008         	goto	i2l957
  1284   001198                     i2u269_40:
  1285   001198                     
  1286                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 178:        (PORTBbits.RB5 == GPIO_LOW) &
      +                          & (RB5_Flag == 0)){;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 179:         RB5_Flag 
      +                          = 1;
  1287   001198  0E01               	movlw	1
  1288   00119A  6E56               	movwf	_RB5_Flag^0,c	;volatile
  1289   00119C                     
  1290                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 180:         RB5_ISR(1);
  1291   00119C  0E01               	movlw	1
  1292   00119E  EC66  F00B         	call	_RB5_ISR
  1293   0011A2                     i2l957:
  1294                           
  1295                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 184:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  1296   0011A2  A6F2               	btfss	242,3,c	;volatile
  1297   0011A4  EFD6  F008         	goto	i2u270_41
  1298   0011A8  EFD8  F008         	goto	i2u270_40
  1299   0011AC                     i2u270_41:
  1300   0011AC  EFF3  F008         	goto	i2l959
  1301   0011B0                     i2u270_40:
  1302   0011B0  A0F2               	btfss	242,0,c	;volatile
  1303   0011B2  EFDD  F008         	goto	i2u271_41
  1304   0011B6  EFDF  F008         	goto	i2u271_40
  1305   0011BA                     i2u271_41:
  1306   0011BA  EFF3  F008         	goto	i2l959
  1307   0011BE                     i2u271_40:
  1308   0011BE  AC81               	btfss	129,6,c	;volatile
  1309   0011C0  EFE4  F008         	goto	i2u272_41
  1310   0011C4  EFE6  F008         	goto	i2u272_40
  1311   0011C8                     i2u272_41:
  1312   0011C8  EFF3  F008         	goto	i2l959
  1313   0011CC                     i2u272_40:
  1314   0011CC  0455               	decf	_RB6_Flag^0,w,c	;volatile
  1315   0011CE  A4D8               	btfss	status,2,c
  1316   0011D0  EFEC  F008         	goto	i2u273_41
  1317   0011D4  EFEE  F008         	goto	i2u273_40
  1318   0011D8                     i2u273_41:
  1319   0011D8  EFF3  F008         	goto	i2l959
  1320   0011DC                     i2u273_40:
  1321   0011DC                     
  1322                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 185:        (PORTBbits.RB6 == GPIO_HIGH) 
      +                          && (RB6_Flag == 1)){;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 186:         RB6_Flag
      +                           = 0;
  1323   0011DC  0E00               	movlw	0
  1324   0011DE  6E55               	movwf	_RB6_Flag^0,c	;volatile
  1325   0011E0                     
  1326                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 187:         RB6_ISR(0);
  1327   0011E0  0E00               	movlw	0
  1328   0011E2  EC4A  F00B         	call	_RB6_ISR
  1329   0011E6                     i2l959:
  1330                           
  1331                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 191:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  1332   0011E6  A6F2               	btfss	242,3,c	;volatile
  1333   0011E8  EFF8  F008         	goto	i2u274_41
  1334   0011EC  EFFA  F008         	goto	i2u274_40
  1335   0011F0                     i2u274_41:
  1336   0011F0  EF15  F009         	goto	i2l961
  1337   0011F4                     i2u274_40:
  1338   0011F4  A0F2               	btfss	242,0,c	;volatile
  1339   0011F6  EFFF  F008         	goto	i2u275_41
  1340   0011FA  EF01  F009         	goto	i2u275_40
  1341   0011FE                     i2u275_41:
  1342   0011FE  EF15  F009         	goto	i2l961
  1343   001202                     i2u275_40:
  1344   001202  BC81               	btfsc	129,6,c	;volatile
  1345   001204  EF06  F009         	goto	i2u276_41
  1346   001208  EF08  F009         	goto	i2u276_40
  1347   00120C                     i2u276_41:
  1348   00120C  EF15  F009         	goto	i2l961
  1349   001210                     i2u276_40:
  1350   001210  5055               	movf	_RB6_Flag^0,w,c	;volatile
  1351   001212  A4D8               	btfss	status,2,c
  1352   001214  EF0E  F009         	goto	i2u277_41
  1353   001218  EF10  F009         	goto	i2u277_40
  1354   00121C                     i2u277_41:
  1355   00121C  EF15  F009         	goto	i2l961
  1356   001220                     i2u277_40:
  1357   001220                     
  1358                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 192:        (PORTBbits.RB6 == GPIO_LOW) &
      +                          & (RB6_Flag == 0)){;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 193:         RB6_Flag 
      +                          = 1;
  1359   001220  0E01               	movlw	1
  1360   001222  6E55               	movwf	_RB6_Flag^0,c	;volatile
  1361   001224                     
  1362                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 194:         RB6_ISR(1);
  1363   001224  0E01               	movlw	1
  1364   001226  EC4A  F00B         	call	_RB6_ISR
  1365   00122A                     i2l961:
  1366                           
  1367                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 198:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  1368   00122A  A6F2               	btfss	242,3,c	;volatile
  1369   00122C  EF1A  F009         	goto	i2u278_41
  1370   001230  EF1C  F009         	goto	i2u278_40
  1371   001234                     i2u278_41:
  1372   001234  EF37  F009         	goto	i2l963
  1373   001238                     i2u278_40:
  1374   001238  A0F2               	btfss	242,0,c	;volatile
  1375   00123A  EF21  F009         	goto	i2u279_41
  1376   00123E  EF23  F009         	goto	i2u279_40
  1377   001242                     i2u279_41:
  1378   001242  EF37  F009         	goto	i2l963
  1379   001246                     i2u279_40:
  1380   001246  AE81               	btfss	129,7,c	;volatile
  1381   001248  EF28  F009         	goto	i2u280_41
  1382   00124C  EF2A  F009         	goto	i2u280_40
  1383   001250                     i2u280_41:
  1384   001250  EF37  F009         	goto	i2l963
  1385   001254                     i2u280_40:
  1386   001254  0454               	decf	_RB7_Flag^0,w,c	;volatile
  1387   001256  A4D8               	btfss	status,2,c
  1388   001258  EF30  F009         	goto	i2u281_41
  1389   00125C  EF32  F009         	goto	i2u281_40
  1390   001260                     i2u281_41:
  1391   001260  EF37  F009         	goto	i2l963
  1392   001264                     i2u281_40:
  1393   001264                     
  1394                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 199:        (PORTBbits.RB7 == GPIO_HIGH) 
      +                          && (RB7_Flag == 1)){;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 200:         RB7_Flag
      +                           = 0;
  1395   001264  0E00               	movlw	0
  1396   001266  6E54               	movwf	_RB7_Flag^0,c	;volatile
  1397   001268                     
  1398                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 201:         RB7_ISR(0);
  1399   001268  0E00               	movlw	0
  1400   00126A  EC2E  F00B         	call	_RB7_ISR
  1401   00126E                     i2l963:
  1402                           
  1403                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 205:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  1404   00126E  A6F2               	btfss	242,3,c	;volatile
  1405   001270  EF3C  F009         	goto	i2u282_41
  1406   001274  EF3E  F009         	goto	i2u282_40
  1407   001278                     i2u282_41:
  1408   001278  EF59  F009         	goto	i2l965
  1409   00127C                     i2u282_40:
  1410   00127C  A0F2               	btfss	242,0,c	;volatile
  1411   00127E  EF43  F009         	goto	i2u283_41
  1412   001282  EF45  F009         	goto	i2u283_40
  1413   001286                     i2u283_41:
  1414   001286  EF59  F009         	goto	i2l965
  1415   00128A                     i2u283_40:
  1416   00128A  BE81               	btfsc	129,7,c	;volatile
  1417   00128C  EF4A  F009         	goto	i2u284_41
  1418   001290  EF4C  F009         	goto	i2u284_40
  1419   001294                     i2u284_41:
  1420   001294  EF59  F009         	goto	i2l965
  1421   001298                     i2u284_40:
  1422   001298  5054               	movf	_RB7_Flag^0,w,c	;volatile
  1423   00129A  A4D8               	btfss	status,2,c
  1424   00129C  EF52  F009         	goto	i2u285_41
  1425   0012A0  EF54  F009         	goto	i2u285_40
  1426   0012A4                     i2u285_41:
  1427   0012A4  EF59  F009         	goto	i2l965
  1428   0012A8                     i2u285_40:
  1429   0012A8                     
  1430                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 206:        (PORTBbits.RB7 == GPIO_LOW) &
      +                          & (RB7_Flag == 0)){;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 207:         RB7_Flag 
      +                          = 1;
  1431   0012A8  0E01               	movlw	1
  1432   0012AA  6E54               	movwf	_RB7_Flag^0,c	;volatile
  1433   0012AC                     
  1434                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 208:         RB7_ISR(1);
  1435   0012AC  0E01               	movlw	1
  1436   0012AE  EC2E  F00B         	call	_RB7_ISR
  1437   0012B2                     i2l965:
  1438                           
  1439                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 218:     if((1 == PIE1bits.ADIE) && (1 ==
      +                           PIR1bits.ADIF)){
  1440   0012B2  AC9D               	btfss	157,6,c	;volatile
  1441   0012B4  EF5E  F009         	goto	i2u286_41
  1442   0012B8  EF60  F009         	goto	i2u286_40
  1443   0012BC                     i2u286_41:
  1444   0012BC  EF69  F009         	goto	i2l967
  1445   0012C0                     i2u286_40:
  1446   0012C0  AC9E               	btfss	158,6,c	;volatile
  1447   0012C2  EF65  F009         	goto	i2u287_41
  1448   0012C6  EF67  F009         	goto	i2u287_40
  1449   0012CA                     i2u287_41:
  1450   0012CA  EF69  F009         	goto	i2l967
  1451   0012CE                     i2u287_40:
  1452   0012CE                     
  1453                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 219:         ADC_ISR();
  1454   0012CE  EC0D  F00C         	call	_ADC_ISR	;wreg free
  1455   0012D2                     i2l967:
  1456                           
  1457                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 226:     if((1 == INTCONbits.TMR0IE) && (
      +                          1 == INTCONbits.TMR0IF)){
  1458   0012D2  AAF2               	btfss	242,5,c	;volatile
  1459   0012D4  EF6E  F009         	goto	i2u288_41
  1460   0012D8  EF70  F009         	goto	i2u288_40
  1461   0012DC                     i2u288_41:
  1462   0012DC  EF79  F009         	goto	i2l969
  1463   0012E0                     i2u288_40:
  1464   0012E0  A4F2               	btfss	242,2,c	;volatile
  1465   0012E2  EF75  F009         	goto	i2u289_41
  1466   0012E6  EF77  F009         	goto	i2u289_40
  1467   0012EA                     i2u289_41:
  1468   0012EA  EF79  F009         	goto	i2l969
  1469   0012EE                     i2u289_40:
  1470   0012EE                     
  1471                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 227:         TMR0_ISR();
  1472   0012EE  ECFD  F00B         	call	_TMR0_ISR	;wreg free
  1473   0012F2                     i2l969:
  1474                           
  1475                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 235:     if((1 == PIE1bits.TMR1IE) && (1 
      +                          == PIR1bits.TMR1IF)){
  1476   0012F2  A09D               	btfss	157,0,c	;volatile
  1477   0012F4  EF7E  F009         	goto	i2u290_41
  1478   0012F8  EF80  F009         	goto	i2u290_40
  1479   0012FC                     i2u290_41:
  1480   0012FC  EF89  F009         	goto	i2l972
  1481   001300                     i2u290_40:
  1482   001300  A09E               	btfss	158,0,c	;volatile
  1483   001302  EF85  F009         	goto	i2u291_41
  1484   001306  EF87  F009         	goto	i2u291_40
  1485   00130A                     i2u291_41:
  1486   00130A  EF89  F009         	goto	i2l972
  1487   00130E                     i2u291_40:
  1488   00130E                     
  1489                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 236:         TMR1_ISR();
  1490   00130E  EC9E  F00B         	call	_TMR1_ISR	;wreg free
  1491   001312                     i2l972:
  1492   001312  C06E  FFF4         	movff	??_Interrupts_Manager_PriorityOff+5,prodh
  1493   001316  C06D  FFF3         	movff	??_Interrupts_Manager_PriorityOff+4,prodl
  1494   00131A  C06C  FFDA         	movff	??_Interrupts_Manager_PriorityOff+3,fsr2h
  1495   00131E  C06B  FFD9         	movff	??_Interrupts_Manager_PriorityOff+2,fsr2l
  1496   001322  C06A  FFFB         	movff	??_Interrupts_Manager_PriorityOff+1,pclatu
  1497   001326  C069  FFFA         	movff	??_Interrupts_Manager_PriorityOff,pclath
  1498   00132A  9270               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1499   00132C  0011               	retfie		f
  1500   00132E                     __end_of_Interrupts_Manager_PriorityOff:
  1501                           	callstack 0
  1502                           
  1503 ;; *************** function _TMR1_ISR *****************
  1504 ;; Defined at:
  1505 ;;		line 146 in file "MCAL_Layer/Timer1/Timer1.c"
  1506 ;; Parameters:    Size  Location     Type
  1507 ;;		None
  1508 ;; Auto vars:     Size  Location     Type
  1509 ;;		None
  1510 ;; Return value:  Size  Location     Type
  1511 ;;                  1    wreg      void 
  1512 ;; Registers used:
  1513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  1514 ;; Tracked objects:
  1515 ;;		On entry : 0/0
  1516 ;;		On exit  : 0/0
  1517 ;;		Unchanged: 0/0
  1518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1523 ;;Total ram usage:        0 bytes
  1524 ;; Hardware stack levels used: 1
  1525 ;; Hardware stack levels required when called: 3
  1526 ;; This function calls:
  1527 ;;		NULL
  1528 ;;		_TMR1_Interrupt_Func
  1529 ;; This function is called by:
  1530 ;;		_Interrupts_Manager_PriorityOff
  1531 ;; This function uses a non-reentrant model
  1532 ;;
  1533                           
  1534                           	psect	text6
  1535   00173C                     __ptext6:
  1536                           	callstack 0
  1537   00173C                     _TMR1_ISR:
  1538                           	callstack 24
  1539   00173C                     
  1540                           ;MCAL_Layer/Timer1/Timer1.c: 147:     (PIR1bits.TMR1IF = 0);
  1541   00173C  909E               	bcf	158,0,c	;volatile
  1542   00173E                     
  1543                           ;MCAL_Layer/Timer1/Timer1.c: 148:     TMR1H = (TMR1_preload >> 8);
  1544   00173E  5008               	movf	(_TMR1_preload+1)^0,w,c
  1545   001740  6ECF               	movwf	207,c	;volatile
  1546   001742                     
  1547                           ;MCAL_Layer/Timer1/Timer1.c: 149:     TMR1L = (uint8)(TMR1_preload);
  1548   001742  C007  FFCE         	movff	_TMR1_preload,4046	;volatile
  1549   001746                     
  1550                           ;MCAL_Layer/Timer1/Timer1.c: 150:     if(Interrupt_Handler){
  1551   001746  5009               	movf	_Interrupt_Handler@Timer1$F2321^0,w,c
  1552   001748  100A               	iorwf	(_Interrupt_Handler@Timer1$F2321+1)^0,w,c
  1553   00174A  B4D8               	btfsc	status,2,c
  1554   00174C  EFAA  F00B         	goto	i2u241_41
  1555   001750  EFAC  F00B         	goto	i2u241_40
  1556   001754                     i2u241_41:
  1557   001754  EFB8  F00B         	goto	i2l1131
  1558   001758                     i2u241_40:
  1559   001758                     
  1560                           ;MCAL_Layer/Timer1/Timer1.c: 151:         Interrupt_Handler();
  1561   001758  D802               	call	i2u242_48
  1562   00175A  EFB8  F00B         	goto	i2u242_49
  1563   00175E                     i2u242_48:
  1564   00175E  0005               	push	
  1565   001760  6EFA               	movwf	pclath,c
  1566   001762  5009               	movf	_Interrupt_Handler@Timer1$F2321^0,w,c
  1567   001764  6EFD               	movwf	tosl,c
  1568   001766  500A               	movf	(_Interrupt_Handler@Timer1$F2321+1)^0,w,c
  1569   001768  6EFE               	movwf	tosh,c
  1570   00176A  6AFF               	clrf	tosu,c
  1571   00176C  50FA               	movf	pclath,w,c
  1572   00176E  0012               	return		;indir
  1573   001770                     i2u242_49:
  1574   001770                     i2l1131:
  1575   001770  0012               	return		;funcret
  1576   001772                     __end_of_TMR1_ISR:
  1577                           	callstack 0
  1578                           
  1579 ;; *************** function _TMR1_Interrupt_Func *****************
  1580 ;; Defined at:
  1581 ;;		line 65 in file "Application.c"
  1582 ;; Parameters:    Size  Location     Type
  1583 ;;		None
  1584 ;; Auto vars:     Size  Location     Type
  1585 ;;		None
  1586 ;; Return value:  Size  Location     Type
  1587 ;;                  1    wreg      void 
  1588 ;; Registers used:
  1589 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1590 ;; Tracked objects:
  1591 ;;		On entry : 0/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1599 ;;Total ram usage:        0 bytes
  1600 ;; Hardware stack levels used: 1
  1601 ;; Hardware stack levels required when called: 2
  1602 ;; This function calls:
  1603 ;;		_led_toggle
  1604 ;; This function is called by:
  1605 ;;		_TMR1_ISR
  1606 ;; This function uses a non-reentrant model
  1607 ;;
  1608                           
  1609                           	psect	text7
  1610   0017EC                     __ptext7:
  1611                           	callstack 0
  1612   0017EC                     _TMR1_Interrupt_Func:
  1613                           	callstack 24
  1614   0017EC                     
  1615                           ;Application.c: 66:     led_toggle(&led_1);
  1616   0017EC  0E5D               	movlw	low _led_1
  1617   0017EE  6E65               	movwf	led_toggle@LED_CONFIG^0,c
  1618   0017F0  0E00               	movlw	high _led_1
  1619   0017F2  6E66               	movwf	(led_toggle@LED_CONFIG+1)^0,c
  1620   0017F4  EC03  F00A         	call	_led_toggle	;wreg free
  1621   0017F8  0012               	return		;funcret
  1622   0017FA                     __end_of_TMR1_Interrupt_Func:
  1623                           	callstack 0
  1624                           
  1625 ;; *************** function _led_toggle *****************
  1626 ;; Defined at:
  1627 ;;		line 71 in file "ECU_Layer/LED/ecu_led.c"
  1628 ;; Parameters:    Size  Location     Type
  1629 ;;  LED_CONFIG      2    7[COMRAM] PTR struct .
  1630 ;;		 -> led_1(1), 
  1631 ;; Auto vars:     Size  Location     Type
  1632 ;;  LED_IN          1   10[COMRAM] struct .
  1633 ;;  ret             1    0        unsigned char 
  1634 ;; Return value:  Size  Location     Type
  1635 ;;                  1    wreg      unsigned char 
  1636 ;; Registers used:
  1637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1638 ;; Tracked objects:
  1639 ;;		On entry : 0/0
  1640 ;;		On exit  : 0/0
  1641 ;;		Unchanged: 0/0
  1642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1643 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1644 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1645 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1646 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1647 ;;Total ram usage:        4 bytes
  1648 ;; Hardware stack levels used: 1
  1649 ;; Hardware stack levels required when called: 1
  1650 ;; This function calls:
  1651 ;;		_gpio_pin_toggle
  1652 ;; This function is called by:
  1653 ;;		_TMR1_Interrupt_Func
  1654 ;; This function uses a non-reentrant model
  1655 ;;
  1656                           
  1657                           	psect	text8
  1658   001406                     __ptext8:
  1659                           	callstack 0
  1660   001406                     _led_toggle:
  1661                           	callstack 24
  1662   001406                     
  1663                           ;ECU_Layer/LED/ecu_led.c: 73:     if(LED_CONFIG == ((void*)0) || (LED_CONFIG->PIN_L > 7)
      +                          ){
  1664   001406  5065               	movf	led_toggle@LED_CONFIG^0,w,c
  1665   001408  1066               	iorwf	(led_toggle@LED_CONFIG+1)^0,w,c
  1666   00140A  B4D8               	btfsc	status,2,c
  1667   00140C  EF0A  F00A         	goto	i2u234_41
  1668   001410  EF0C  F00A         	goto	i2u234_40
  1669   001414                     i2u234_41:
  1670   001414  EF1C  F00A         	goto	i2l3688
  1671   001418                     i2u234_40:
  1672   001418  C065  FFD9         	movff	led_toggle@LED_CONFIG,fsr2l
  1673   00141C  C066  FFDA         	movff	led_toggle@LED_CONFIG+1,fsr2h
  1674   001420  38DF               	swapf	223,w,c
  1675   001422  32E8               	rrcf	wreg,f,c
  1676   001424  0B07               	andlw	7
  1677   001426  6E67               	movwf	??_led_toggle^0,c
  1678   001428  0E07               	movlw	7
  1679   00142A  6467               	cpfsgt	??_led_toggle^0,c
  1680   00142C  EF1A  F00A         	goto	i2u235_41
  1681   001430  EF1C  F00A         	goto	i2u235_40
  1682   001434                     i2u235_41:
  1683   001434  EF1E  F00A         	goto	i2l264
  1684   001438                     i2u235_40:
  1685   001438                     i2l3688:
  1686                           
  1687                           ;ECU_Layer/LED/ecu_led.c: 75:     }
  1688   001438  EF4C  F00A         	goto	i2l270
  1689   00143C                     i2l264:
  1690                           
  1691                           ;ECU_Layer/LED/ecu_led.c: 78:         PIN_CONFIG LED_IN = {
  1692   00143C  C02A  F068         	movff	led_toggle@F3063,led_toggle@LED_IN
  1693   001440  C065  FFD9         	movff	led_toggle@LED_CONFIG,fsr2l
  1694   001444  C066  FFDA         	movff	led_toggle@LED_CONFIG+1,fsr2h
  1695   001448  38DF               	swapf	223,w,c
  1696   00144A  32E8               	rrcf	wreg,f,c
  1697   00144C  0B07               	andlw	7
  1698   00144E  6E67               	movwf	??_led_toggle^0,c
  1699   001450  5068               	movf	led_toggle@LED_IN^0,w,c
  1700   001452  1867               	xorwf	??_led_toggle^0,w,c
  1701   001454  0BF8               	andlw	-8
  1702   001456  1867               	xorwf	??_led_toggle^0,w,c
  1703   001458  6E68               	movwf	led_toggle@LED_IN^0,c
  1704   00145A  C065  FFD9         	movff	led_toggle@LED_CONFIG,fsr2l
  1705   00145E  C066  FFDA         	movff	led_toggle@LED_CONFIG+1,fsr2h
  1706   001462  50DF               	movf	223,w,c
  1707   001464  0B0F               	andlw	15
  1708   001466  6E67               	movwf	??_led_toggle^0,c
  1709   001468  4667               	rlncf	??_led_toggle^0,f,c
  1710   00146A  4667               	rlncf	??_led_toggle^0,f,c
  1711   00146C  4667               	rlncf	??_led_toggle^0,f,c
  1712   00146E  5068               	movf	led_toggle@LED_IN^0,w,c
  1713   001470  1867               	xorwf	??_led_toggle^0,w,c
  1714   001472  0BC7               	andlw	-57
  1715   001474  1867               	xorwf	??_led_toggle^0,w,c
  1716   001476  6E68               	movwf	led_toggle@LED_IN^0,c
  1717   001478  9C68               	bcf	led_toggle@LED_IN^0,6,c
  1718   00147A  C065  FFD9         	movff	led_toggle@LED_CONFIG,fsr2l
  1719   00147E  C066  FFDA         	movff	led_toggle@LED_CONFIG+1,fsr2h
  1720   001482  A8DF               	btfss	indf2,4,c
  1721   001484  D002               	bra	i2u236_45
  1722   001486  8E68               	bsf	led_toggle@LED_IN^0,7,c
  1723   001488  D001               	bra	i2u236_47
  1724   00148A                     i2u236_45:
  1725   00148A  9E68               	bcf	led_toggle@LED_IN^0,7,c
  1726   00148C                     i2u236_47:
  1727   00148C                     
  1728                           ;ECU_Layer/LED/ecu_led.c: 84:         gpio_pin_toggle(&LED_IN);
  1729   00148C  0E68               	movlw	low led_toggle@LED_IN
  1730   00148E  6E5E               	movwf	gpio_pin_toggle@str^0,c
  1731   001490  0E00               	movlw	high led_toggle@LED_IN
  1732   001492  6E5F               	movwf	(gpio_pin_toggle@str+1)^0,c
  1733   001494  EC4D  F00A         	call	_gpio_pin_toggle	;wreg free
  1734   001498                     i2l270:
  1735   001498  0012               	return		;funcret
  1736   00149A                     __end_of_led_toggle:
  1737                           	callstack 0
  1738                           
  1739 ;; *************** function _gpio_pin_toggle *****************
  1740 ;; Defined at:
  1741 ;;		line 93 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1742 ;; Parameters:    Size  Location     Type
  1743 ;;  str             2    0[COMRAM] PTR const struct .
  1744 ;;		 -> led_toggle@LED_IN(1), 
  1745 ;; Auto vars:     Size  Location     Type
  1746 ;;  ret             1    0        unsigned char 
  1747 ;; Return value:  Size  Location     Type
  1748 ;;                  1    wreg      unsigned char 
  1749 ;; Registers used:
  1750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1751 ;; Tracked objects:
  1752 ;;		On entry : 0/0
  1753 ;;		On exit  : 0/0
  1754 ;;		Unchanged: 0/0
  1755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1756 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1758 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1759 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1760 ;;Total ram usage:        7 bytes
  1761 ;; Hardware stack levels used: 1
  1762 ;; This function calls:
  1763 ;;		Nothing
  1764 ;; This function is called by:
  1765 ;;		_led_toggle
  1766 ;; This function uses a non-reentrant model
  1767 ;;
  1768                           
  1769                           	psect	text9
  1770   00149A                     __ptext9:
  1771                           	callstack 0
  1772   00149A                     _gpio_pin_toggle:
  1773                           	callstack 24
  1774   00149A                     
  1775                           ;MCAL_Layer/GPIO/hal_gpio.c: 96:     if(str == ((void*)0) || (str->PIN > 7)){
  1776   00149A  505E               	movf	gpio_pin_toggle@str^0,w,c
  1777   00149C  105F               	iorwf	(gpio_pin_toggle@str+1)^0,w,c
  1778   00149E  B4D8               	btfsc	status,2,c
  1779   0014A0  EF54  F00A         	goto	i2u231_41
  1780   0014A4  EF56  F00A         	goto	i2u231_40
  1781   0014A8                     i2u231_41:
  1782   0014A8  EF65  F00A         	goto	i2l3676
  1783   0014AC                     i2u231_40:
  1784   0014AC  C05E  FFD9         	movff	gpio_pin_toggle@str,fsr2l
  1785   0014B0  C05F  FFDA         	movff	gpio_pin_toggle@str+1,fsr2h
  1786   0014B4  50DF               	movf	223,w,c
  1787   0014B6  0B07               	andlw	7
  1788   0014B8  6E60               	movwf	??_gpio_pin_toggle^0,c
  1789   0014BA  0E07               	movlw	7
  1790   0014BC  6460               	cpfsgt	??_gpio_pin_toggle^0,c
  1791   0014BE  EF63  F00A         	goto	i2u232_41
  1792   0014C2  EF65  F00A         	goto	i2u232_40
  1793   0014C6                     i2u232_41:
  1794   0014C6  EF67  F00A         	goto	i2l3678
  1795   0014CA                     i2u232_40:
  1796   0014CA                     i2l3676:
  1797                           
  1798                           ;MCAL_Layer/GPIO/hal_gpio.c: 98:     }
  1799   0014CA  EF93  F00A         	goto	i2l566
  1800   0014CE                     i2l3678:
  1801                           
  1802                           ;MCAL_Layer/GPIO/hal_gpio.c: 101:         (*LAT_REG[str->PORT] ^= (0x01 << str->PIN));
  1803   0014CE  C05E  FFD9         	movff	gpio_pin_toggle@str,fsr2l
  1804   0014D2  C05F  FFDA         	movff	gpio_pin_toggle@str+1,fsr2h
  1805   0014D6  50DF               	movf	223,w,c
  1806   0014D8  0B07               	andlw	7
  1807   0014DA  6E60               	movwf	??_gpio_pin_toggle^0,c
  1808   0014DC  0E01               	movlw	1
  1809   0014DE  6E61               	movwf	(??_gpio_pin_toggle+1)^0,c
  1810   0014E0  2A60               	incf	??_gpio_pin_toggle^0,f,c
  1811   0014E2  EF75  F00A         	goto	i2u233_44
  1812   0014E6                     i2u233_45:
  1813   0014E6  90D8               	bcf	status,0,c
  1814   0014E8  3661               	rlcf	(??_gpio_pin_toggle+1)^0,f,c
  1815   0014EA                     i2u233_44:
  1816   0014EA  2E60               	decfsz	??_gpio_pin_toggle^0,f,c
  1817   0014EC  EF73  F00A         	goto	i2u233_45
  1818   0014F0  C05E  FFD9         	movff	gpio_pin_toggle@str,fsr2l
  1819   0014F4  C05F  FFDA         	movff	gpio_pin_toggle@str+1,fsr2h
  1820   0014F8  30DF               	rrcf	223,w,c
  1821   0014FA  32E8               	rrcf	wreg,f,c
  1822   0014FC  32E8               	rrcf	wreg,f,c
  1823   0014FE  0B07               	andlw	7
  1824   001500  6E62               	movwf	(??_gpio_pin_toggle+2)^0,c
  1825   001502  5062               	movf	(??_gpio_pin_toggle+2)^0,w,c
  1826   001504  0D02               	mullw	2
  1827   001506  0E44               	movlw	low _LAT_REG
  1828   001508  24F3               	addwf	243,w,c
  1829   00150A  6ED9               	movwf	fsr2l,c
  1830   00150C  0E00               	movlw	high _LAT_REG
  1831   00150E  20F4               	addwfc	prodh,w,c
  1832   001510  6EDA               	movwf	fsr2h,c
  1833   001512  CFDE F063          	movff	postinc2,??_gpio_pin_toggle+3
  1834   001516  CFDD F064          	movff	postdec2,??_gpio_pin_toggle+4
  1835   00151A  C063  FFD9         	movff	??_gpio_pin_toggle+3,fsr2l
  1836   00151E  C064  FFDA         	movff	??_gpio_pin_toggle+4,fsr2h
  1837   001522  5061               	movf	(??_gpio_pin_toggle+1)^0,w,c
  1838   001524  1ADF               	xorwf	indf2,f,c
  1839   001526                     i2l566:
  1840   001526  0012               	return		;funcret
  1841   001528                     __end_of_gpio_pin_toggle:
  1842                           	callstack 0
  1843                           
  1844 ;; *************** function _TMR0_ISR *****************
  1845 ;; Defined at:
  1846 ;;		line 154 in file "MCAL_Layer/Timer0/Timer0.c"
  1847 ;; Parameters:    Size  Location     Type
  1848 ;;		None
  1849 ;; Auto vars:     Size  Location     Type
  1850 ;;		None
  1851 ;; Return value:  Size  Location     Type
  1852 ;;                  1    wreg      void 
  1853 ;; Registers used:
  1854 ;;		wreg, status,2
  1855 ;; Tracked objects:
  1856 ;;		On entry : 0/0
  1857 ;;		On exit  : 0/0
  1858 ;;		Unchanged: 0/0
  1859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1864 ;;Total ram usage:        0 bytes
  1865 ;; Hardware stack levels used: 1
  1866 ;; This function calls:
  1867 ;;		Nothing
  1868 ;; This function is called by:
  1869 ;;		_Interrupts_Manager_PriorityOff
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           
  1873                           	psect	text10
  1874   0017FA                     __ptext10:
  1875                           	callstack 0
  1876   0017FA                     _TMR0_ISR:
  1877                           	callstack 27
  1878   0017FA                     
  1879                           ;MCAL_Layer/Timer0/Timer0.c: 155:     (INTCONbits.TMR0IF = 0);
  1880   0017FA  94F2               	bcf	242,2,c	;volatile
  1881   0017FC                     
  1882                           ;MCAL_Layer/Timer0/Timer0.c: 156:     TMR0H = (TMR0_preload >> 8);
  1883   0017FC  500C               	movf	(_TMR0_preload+1)^0,w,c
  1884   0017FE  6ED7               	movwf	215,c	;volatile
  1885   001800                     
  1886                           ;MCAL_Layer/Timer0/Timer0.c: 157:     TMR0L = (uint8)(TMR0_preload);
  1887   001800  C00B  FFD6         	movff	_TMR0_preload,4054	;volatile
  1888   001804  0012               	return		;funcret
  1889   001806                     __end_of_TMR0_ISR:
  1890                           	callstack 0
  1891                           
  1892 ;; *************** function _RB7_ISR *****************
  1893 ;; Defined at:
  1894 ;;		line 550 in file "MCAL_Layer/Interupt/mcal_external_interrupt.c"
  1895 ;; Parameters:    Size  Location     Type
  1896 ;;  FUNC_DETECTI    1    wreg     unsigned char 
  1897 ;; Auto vars:     Size  Location     Type
  1898 ;;  FUNC_DETECTI    1    2[COMRAM] unsigned char 
  1899 ;; Return value:  Size  Location     Type
  1900 ;;                  1    wreg      void 
  1901 ;; Registers used:
  1902 ;;		wreg, status,2, status,0
  1903 ;; Tracked objects:
  1904 ;;		On entry : 0/0
  1905 ;;		On exit  : 0/0
  1906 ;;		Unchanged: 0/0
  1907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1909 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1910 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1911 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1912 ;;Total ram usage:        3 bytes
  1913 ;; Hardware stack levels used: 1
  1914 ;; This function calls:
  1915 ;;		Nothing
  1916 ;; This function is called by:
  1917 ;;		_Interrupts_Manager_PriorityOff
  1918 ;; This function uses a non-reentrant model
  1919 ;;
  1920                           
  1921                           	psect	text11
  1922   00165C                     __ptext11:
  1923                           	callstack 0
  1924   00165C                     _RB7_ISR:
  1925                           	callstack 27
  1926                           
  1927                           ;incstack = 0
  1928                           ;RB7_ISR@FUNC_DETECTION stored from wreg
  1929   00165C  6E60               	movwf	RB7_ISR@FUNC_DETECTION^0,c
  1930   00165E                     
  1931                           ;MCAL_Layer/Interupt/mcal_external_interrupt.c: 551:     (INTCONbits.RBIF = 0);
  1932   00165E  90F2               	bcf	242,0,c	;volatile
  1933                           
  1934                           ;MCAL_Layer/Interupt/mcal_external_interrupt.c: 552:     switch(FUNC_DETECTION){
  1935   001660  EF34  F00B         	goto	i2l2192
  1936   001664                     i2l2184:
  1937   001664  EF49  F00B         	goto	i2l842
  1938   001668                     i2l2192:
  1939   001668  5060               	movf	RB7_ISR@FUNC_DETECTION^0,w,c
  1940   00166A  6E5E               	movwf	??_RB7_ISR^0,c
  1941   00166C  6A5F               	clrf	(??_RB7_ISR+1)^0,c
  1942                           
  1943                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1944                           ; Switch size 1, requested type "simple"
  1945                           ; Number of cases is 1, Range of values is 0 to 0
  1946                           ; switch strategies available:
  1947                           ; Name         Instructions Cycles
  1948                           ; simple_byte            4     3 (average)
  1949                           ;	Chosen strategy is simple_byte
  1950   00166E  505F               	movf	(??_RB7_ISR+1)^0,w,c
  1951   001670  0A00               	xorlw	0	; case 0
  1952   001672  B4D8               	btfsc	status,2,c
  1953   001674  EF3E  F00B         	goto	i2l4058
  1954   001678  EF49  F00B         	goto	i2l842
  1955   00167C                     i2l4058:
  1956                           
  1957                           ; Switch size 1, requested type "simple"
  1958                           ; Number of cases is 2, Range of values is 0 to 1
  1959                           ; switch strategies available:
  1960                           ; Name         Instructions Cycles
  1961                           ; simple_byte            7     4 (average)
  1962                           ;	Chosen strategy is simple_byte
  1963   00167C  505E               	movf	??_RB7_ISR^0,w,c
  1964   00167E  0A00               	xorlw	0	; case 0
  1965   001680  B4D8               	btfsc	status,2,c
  1966   001682  EF32  F00B         	goto	i2l2184
  1967   001686  0A01               	xorlw	1	; case 1
  1968   001688  B4D8               	btfsc	status,2,c
  1969   00168A  EF32  F00B         	goto	i2l2184
  1970   00168E  EF49  F00B         	goto	i2l842
  1971   001692                     i2l842:
  1972   001692  0012               	return		;funcret
  1973   001694                     __end_of_RB7_ISR:
  1974                           	callstack 0
  1975                           
  1976 ;; *************** function _RB6_ISR *****************
  1977 ;; Defined at:
  1978 ;;		line 527 in file "MCAL_Layer/Interupt/mcal_external_interrupt.c"
  1979 ;; Parameters:    Size  Location     Type
  1980 ;;  FUNC_DETECTI    1    wreg     unsigned char 
  1981 ;; Auto vars:     Size  Location     Type
  1982 ;;  FUNC_DETECTI    1    2[COMRAM] unsigned char 
  1983 ;; Return value:  Size  Location     Type
  1984 ;;                  1    wreg      void 
  1985 ;; Registers used:
  1986 ;;		wreg, status,2, status,0
  1987 ;; Tracked objects:
  1988 ;;		On entry : 0/0
  1989 ;;		On exit  : 0/0
  1990 ;;		Unchanged: 0/0
  1991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1993 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1994 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1995 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1996 ;;Total ram usage:        3 bytes
  1997 ;; Hardware stack levels used: 1
  1998 ;; This function calls:
  1999 ;;		Nothing
  2000 ;; This function is called by:
  2001 ;;		_Interrupts_Manager_PriorityOff
  2002 ;; This function uses a non-reentrant model
  2003 ;;
  2004                           
  2005                           	psect	text12
  2006   001694                     __ptext12:
  2007                           	callstack 0
  2008   001694                     _RB6_ISR:
  2009                           	callstack 27
  2010                           
  2011                           ;incstack = 0
  2012                           ;RB6_ISR@FUNC_DETECTION stored from wreg
  2013   001694  6E60               	movwf	RB6_ISR@FUNC_DETECTION^0,c
  2014   001696                     
  2015                           ;MCAL_Layer/Interupt/mcal_external_interrupt.c: 528:     (INTCONbits.RBIF = 0);
  2016   001696  90F2               	bcf	242,0,c	;volatile
  2017                           
  2018                           ;MCAL_Layer/Interupt/mcal_external_interrupt.c: 529:     switch(FUNC_DETECTION){
  2019   001698  EF50  F00B         	goto	i2l2176
  2020   00169C                     i2l2168:
  2021   00169C  EF65  F00B         	goto	i2l830
  2022   0016A0                     i2l2176:
  2023   0016A0  5060               	movf	RB6_ISR@FUNC_DETECTION^0,w,c
  2024   0016A2  6E5E               	movwf	??_RB6_ISR^0,c
  2025   0016A4  6A5F               	clrf	(??_RB6_ISR+1)^0,c
  2026                           
  2027                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2028                           ; Switch size 1, requested type "simple"
  2029                           ; Number of cases is 1, Range of values is 0 to 0
  2030                           ; switch strategies available:
  2031                           ; Name         Instructions Cycles
  2032                           ; simple_byte            4     3 (average)
  2033                           ;	Chosen strategy is simple_byte
  2034   0016A6  505F               	movf	(??_RB6_ISR+1)^0,w,c
  2035   0016A8  0A00               	xorlw	0	; case 0
  2036   0016AA  B4D8               	btfsc	status,2,c
  2037   0016AC  EF5A  F00B         	goto	i2l4060
  2038   0016B0  EF65  F00B         	goto	i2l830
  2039   0016B4                     i2l4060:
  2040                           
  2041                           ; Switch size 1, requested type "simple"
  2042                           ; Number of cases is 2, Range of values is 0 to 1
  2043                           ; switch strategies available:
  2044                           ; Name         Instructions Cycles
  2045                           ; simple_byte            7     4 (average)
  2046                           ;	Chosen strategy is simple_byte
  2047   0016B4  505E               	movf	??_RB6_ISR^0,w,c
  2048   0016B6  0A00               	xorlw	0	; case 0
  2049   0016B8  B4D8               	btfsc	status,2,c
  2050   0016BA  EF4E  F00B         	goto	i2l2168
  2051   0016BE  0A01               	xorlw	1	; case 1
  2052   0016C0  B4D8               	btfsc	status,2,c
  2053   0016C2  EF4E  F00B         	goto	i2l2168
  2054   0016C6  EF65  F00B         	goto	i2l830
  2055   0016CA                     i2l830:
  2056   0016CA  0012               	return		;funcret
  2057   0016CC                     __end_of_RB6_ISR:
  2058                           	callstack 0
  2059                           
  2060 ;; *************** function _RB5_ISR *****************
  2061 ;; Defined at:
  2062 ;;		line 504 in file "MCAL_Layer/Interupt/mcal_external_interrupt.c"
  2063 ;; Parameters:    Size  Location     Type
  2064 ;;  FUNC_DETECTI    1    wreg     unsigned char 
  2065 ;; Auto vars:     Size  Location     Type
  2066 ;;  FUNC_DETECTI    1    2[COMRAM] unsigned char 
  2067 ;; Return value:  Size  Location     Type
  2068 ;;                  1    wreg      void 
  2069 ;; Registers used:
  2070 ;;		wreg, status,2, status,0
  2071 ;; Tracked objects:
  2072 ;;		On entry : 0/0
  2073 ;;		On exit  : 0/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2077 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2078 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2079 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2080 ;;Total ram usage:        3 bytes
  2081 ;; Hardware stack levels used: 1
  2082 ;; This function calls:
  2083 ;;		Nothing
  2084 ;; This function is called by:
  2085 ;;		_Interrupts_Manager_PriorityOff
  2086 ;; This function uses a non-reentrant model
  2087 ;;
  2088                           
  2089                           	psect	text13
  2090   0016CC                     __ptext13:
  2091                           	callstack 0
  2092   0016CC                     _RB5_ISR:
  2093                           	callstack 27
  2094                           
  2095                           ;incstack = 0
  2096                           ;RB5_ISR@FUNC_DETECTION stored from wreg
  2097   0016CC  6E60               	movwf	RB5_ISR@FUNC_DETECTION^0,c
  2098   0016CE                     
  2099                           ;MCAL_Layer/Interupt/mcal_external_interrupt.c: 505:     (INTCONbits.RBIF = 0);
  2100   0016CE  90F2               	bcf	242,0,c	;volatile
  2101                           
  2102                           ;MCAL_Layer/Interupt/mcal_external_interrupt.c: 506:     switch(FUNC_DETECTION){
  2103   0016D0  EF6C  F00B         	goto	i2l2160
  2104   0016D4                     i2l2152:
  2105   0016D4  EF81  F00B         	goto	i2l818
  2106   0016D8                     i2l2160:
  2107   0016D8  5060               	movf	RB5_ISR@FUNC_DETECTION^0,w,c
  2108   0016DA  6E5E               	movwf	??_RB5_ISR^0,c
  2109   0016DC  6A5F               	clrf	(??_RB5_ISR+1)^0,c
  2110                           
  2111                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2112                           ; Switch size 1, requested type "simple"
  2113                           ; Number of cases is 1, Range of values is 0 to 0
  2114                           ; switch strategies available:
  2115                           ; Name         Instructions Cycles
  2116                           ; simple_byte            4     3 (average)
  2117                           ;	Chosen strategy is simple_byte
  2118   0016DE  505F               	movf	(??_RB5_ISR+1)^0,w,c
  2119   0016E0  0A00               	xorlw	0	; case 0
  2120   0016E2  B4D8               	btfsc	status,2,c
  2121   0016E4  EF76  F00B         	goto	i2l4062
  2122   0016E8  EF81  F00B         	goto	i2l818
  2123   0016EC                     i2l4062:
  2124                           
  2125                           ; Switch size 1, requested type "simple"
  2126                           ; Number of cases is 2, Range of values is 0 to 1
  2127                           ; switch strategies available:
  2128                           ; Name         Instructions Cycles
  2129                           ; simple_byte            7     4 (average)
  2130                           ;	Chosen strategy is simple_byte
  2131   0016EC  505E               	movf	??_RB5_ISR^0,w,c
  2132   0016EE  0A00               	xorlw	0	; case 0
  2133   0016F0  B4D8               	btfsc	status,2,c
  2134   0016F2  EF6A  F00B         	goto	i2l2152
  2135   0016F6  0A01               	xorlw	1	; case 1
  2136   0016F8  B4D8               	btfsc	status,2,c
  2137   0016FA  EF6A  F00B         	goto	i2l2152
  2138   0016FE  EF81  F00B         	goto	i2l818
  2139   001702                     i2l818:
  2140   001702  0012               	return		;funcret
  2141   001704                     __end_of_RB5_ISR:
  2142                           	callstack 0
  2143                           
  2144 ;; *************** function _RB4_ISR *****************
  2145 ;; Defined at:
  2146 ;;		line 481 in file "MCAL_Layer/Interupt/mcal_external_interrupt.c"
  2147 ;; Parameters:    Size  Location     Type
  2148 ;;  FUNC_DETECTI    1    wreg     unsigned char 
  2149 ;; Auto vars:     Size  Location     Type
  2150 ;;  FUNC_DETECTI    1    2[COMRAM] unsigned char 
  2151 ;; Return value:  Size  Location     Type
  2152 ;;                  1    wreg      void 
  2153 ;; Registers used:
  2154 ;;		wreg, status,2, status,0
  2155 ;; Tracked objects:
  2156 ;;		On entry : 0/0
  2157 ;;		On exit  : 0/0
  2158 ;;		Unchanged: 0/0
  2159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2161 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2162 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2163 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2164 ;;Total ram usage:        3 bytes
  2165 ;; Hardware stack levels used: 1
  2166 ;; This function calls:
  2167 ;;		Nothing
  2168 ;; This function is called by:
  2169 ;;		_Interrupts_Manager_PriorityOff
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173                           	psect	text14
  2174   001704                     __ptext14:
  2175                           	callstack 0
  2176   001704                     _RB4_ISR:
  2177                           	callstack 27
  2178                           
  2179                           ;incstack = 0
  2180                           ;RB4_ISR@FUNC_DETECTION stored from wreg
  2181   001704  6E60               	movwf	RB4_ISR@FUNC_DETECTION^0,c
  2182   001706                     
  2183                           ;MCAL_Layer/Interupt/mcal_external_interrupt.c: 482:     (INTCONbits.RBIF = 0);
  2184   001706  90F2               	bcf	242,0,c	;volatile
  2185                           
  2186                           ;MCAL_Layer/Interupt/mcal_external_interrupt.c: 483:     switch(FUNC_DETECTION){
  2187   001708  EF88  F00B         	goto	i2l2144
  2188   00170C                     i2l2136:
  2189   00170C  EF9D  F00B         	goto	i2l806
  2190   001710                     i2l2144:
  2191   001710  5060               	movf	RB4_ISR@FUNC_DETECTION^0,w,c
  2192   001712  6E5E               	movwf	??_RB4_ISR^0,c
  2193   001714  6A5F               	clrf	(??_RB4_ISR+1)^0,c
  2194                           
  2195                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2196                           ; Switch size 1, requested type "simple"
  2197                           ; Number of cases is 1, Range of values is 0 to 0
  2198                           ; switch strategies available:
  2199                           ; Name         Instructions Cycles
  2200                           ; simple_byte            4     3 (average)
  2201                           ;	Chosen strategy is simple_byte
  2202   001716  505F               	movf	(??_RB4_ISR+1)^0,w,c
  2203   001718  0A00               	xorlw	0	; case 0
  2204   00171A  B4D8               	btfsc	status,2,c
  2205   00171C  EF92  F00B         	goto	i2l4064
  2206   001720  EF9D  F00B         	goto	i2l806
  2207   001724                     i2l4064:
  2208                           
  2209                           ; Switch size 1, requested type "simple"
  2210                           ; Number of cases is 2, Range of values is 0 to 1
  2211                           ; switch strategies available:
  2212                           ; Name         Instructions Cycles
  2213                           ; simple_byte            7     4 (average)
  2214                           ;	Chosen strategy is simple_byte
  2215   001724  505E               	movf	??_RB4_ISR^0,w,c
  2216   001726  0A00               	xorlw	0	; case 0
  2217   001728  B4D8               	btfsc	status,2,c
  2218   00172A  EF86  F00B         	goto	i2l2136
  2219   00172E  0A01               	xorlw	1	; case 1
  2220   001730  B4D8               	btfsc	status,2,c
  2221   001732  EF86  F00B         	goto	i2l2136
  2222   001736  EF9D  F00B         	goto	i2l806
  2223   00173A                     i2l806:
  2224   00173A  0012               	return		;funcret
  2225   00173C                     __end_of_RB4_ISR:
  2226                           	callstack 0
  2227                           
  2228 ;; *************** function _INT2_ISR *****************
  2229 ;; Defined at:
  2230 ;;		line 136 in file "MCAL_Layer/Interupt/mcal_external_interrupt.c"
  2231 ;; Parameters:    Size  Location     Type
  2232 ;;		None
  2233 ;; Auto vars:     Size  Location     Type
  2234 ;;		None
  2235 ;; Return value:  Size  Location     Type
  2236 ;;                  1    wreg      void 
  2237 ;; Registers used:
  2238 ;;		None
  2239 ;; Tracked objects:
  2240 ;;		On entry : 0/0
  2241 ;;		On exit  : 0/0
  2242 ;;		Unchanged: 0/0
  2243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2248 ;;Total ram usage:        0 bytes
  2249 ;; Hardware stack levels used: 1
  2250 ;; This function calls:
  2251 ;;		Nothing
  2252 ;; This function is called by:
  2253 ;;		_Interrupts_Manager_PriorityOff
  2254 ;; This function uses a non-reentrant model
  2255 ;;
  2256                           
  2257                           	psect	text15
  2258   00180E                     __ptext15:
  2259                           	callstack 0
  2260   00180E                     _INT2_ISR:
  2261                           	callstack 27
  2262   00180E                     
  2263                           ;MCAL_Layer/Interupt/mcal_external_interrupt.c: 137:     (INTCON3bits.INT2IF = 0);
  2264   00180E  92F0               	bcf	240,1,c	;volatile
  2265   001810  0012               	return		;funcret
  2266   001812                     __end_of_INT2_ISR:
  2267                           	callstack 0
  2268                           
  2269 ;; *************** function _INT1_ISR *****************
  2270 ;; Defined at:
  2271 ;;		line 126 in file "MCAL_Layer/Interupt/mcal_external_interrupt.c"
  2272 ;; Parameters:    Size  Location     Type
  2273 ;;		None
  2274 ;; Auto vars:     Size  Location     Type
  2275 ;;		None
  2276 ;; Return value:  Size  Location     Type
  2277 ;;                  1    wreg      void 
  2278 ;; Registers used:
  2279 ;;		None
  2280 ;; Tracked objects:
  2281 ;;		On entry : 0/0
  2282 ;;		On exit  : 0/0
  2283 ;;		Unchanged: 0/0
  2284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2289 ;;Total ram usage:        0 bytes
  2290 ;; Hardware stack levels used: 1
  2291 ;; This function calls:
  2292 ;;		Nothing
  2293 ;; This function is called by:
  2294 ;;		_Interrupts_Manager_PriorityOff
  2295 ;; This function uses a non-reentrant model
  2296 ;;
  2297                           
  2298                           	psect	text16
  2299   001812                     __ptext16:
  2300                           	callstack 0
  2301   001812                     _INT1_ISR:
  2302                           	callstack 27
  2303   001812                     
  2304                           ;MCAL_Layer/Interupt/mcal_external_interrupt.c: 127:     (INTCON3bits.INT1IF = 0);
  2305   001812  90F0               	bcf	240,0,c	;volatile
  2306   001814  0012               	return		;funcret
  2307   001816                     __end_of_INT1_ISR:
  2308                           	callstack 0
  2309                           
  2310 ;; *************** function _INT0_ISR *****************
  2311 ;; Defined at:
  2312 ;;		line 116 in file "MCAL_Layer/Interupt/mcal_external_interrupt.c"
  2313 ;; Parameters:    Size  Location     Type
  2314 ;;		None
  2315 ;; Auto vars:     Size  Location     Type
  2316 ;;		None
  2317 ;; Return value:  Size  Location     Type
  2318 ;;                  1    wreg      void 
  2319 ;; Registers used:
  2320 ;;		None
  2321 ;; Tracked objects:
  2322 ;;		On entry : 0/0
  2323 ;;		On exit  : 0/0
  2324 ;;		Unchanged: 0/0
  2325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2330 ;;Total ram usage:        0 bytes
  2331 ;; Hardware stack levels used: 1
  2332 ;; This function calls:
  2333 ;;		Nothing
  2334 ;; This function is called by:
  2335 ;;		_Interrupts_Manager_PriorityOff
  2336 ;; This function uses a non-reentrant model
  2337 ;;
  2338                           
  2339                           	psect	text17
  2340   001816                     __ptext17:
  2341                           	callstack 0
  2342   001816                     _INT0_ISR:
  2343                           	callstack 27
  2344   001816                     
  2345                           ;MCAL_Layer/Interupt/mcal_external_interrupt.c: 117:     (INTCONbits.INT0IF = 0);
  2346   001816  92F2               	bcf	242,1,c	;volatile
  2347   001818  0012               	return		;funcret
  2348   00181A                     __end_of_INT0_ISR:
  2349                           	callstack 0
  2350                           
  2351 ;; *************** function _ADC_ISR *****************
  2352 ;; Defined at:
  2353 ;;		line 227 in file "MCAL_Layer/ADC/ADC.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;		None
  2356 ;; Auto vars:     Size  Location     Type
  2357 ;;		None
  2358 ;; Return value:  Size  Location     Type
  2359 ;;                  1    wreg      void 
  2360 ;; Registers used:
  2361 ;;		None
  2362 ;; Tracked objects:
  2363 ;;		On entry : 0/0
  2364 ;;		On exit  : 0/0
  2365 ;;		Unchanged: 0/0
  2366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2371 ;;Total ram usage:        0 bytes
  2372 ;; Hardware stack levels used: 1
  2373 ;; This function calls:
  2374 ;;		Nothing
  2375 ;; This function is called by:
  2376 ;;		_Interrupts_Manager_PriorityOff
  2377 ;; This function uses a non-reentrant model
  2378 ;;
  2379                           
  2380                           	psect	text18
  2381   00181A                     __ptext18:
  2382                           	callstack 0
  2383   00181A                     _ADC_ISR:
  2384                           	callstack 27
  2385   00181A                     
  2386                           ;MCAL_Layer/ADC/ADC.c: 228:     (PIR1bits.ADIF = 0);
  2387   00181A  9C9E               	bcf	158,6,c	;volatile
  2388   00181C  0012               	return		;funcret
  2389   00181E                     __end_of_ADC_ISR:
  2390                           	callstack 0
  2391                           
  2392                           	psect	text19
  2393   000000                     __ptext19:
  2394                           	callstack 0
  2395   000000                     
  2396                           	psect	rparam
  2397   000000                     
  2398                           	psect	temp
  2399   000070                     btemp:
  2400                           	callstack 0
  2401   000070                     	ds	1
  2402   000000                     int$flags	set	btemp
  2403   000000                     wtemp8	set	btemp+1
  2404   000000                     ttemp5	set	btemp+1
  2405   000000                     ttemp6	set	btemp+4
  2406   000000                     ttemp7	set	btemp+8
  2407                           
  2408                           	psect	config
  2409                           
  2410                           ; Padding undefined space
  2411   300000                     	org	3145728
  2412   300000  FF                 	db	255
  2413                           
  2414                           ;Config register CONFIG1H @ 0x300001
  2415                           ;	Oscillator Selection bits
  2416                           ;	OSC = HS, HS oscillator
  2417                           ;	Fail-Safe Clock Monitor Enable bit
  2418                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2419                           ;	Internal/External Oscillator Switchover bit
  2420                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2421   300001                     	org	3145729
  2422   300001  02                 	db	2
  2423                           
  2424                           ;Config register CONFIG2L @ 0x300002
  2425                           ;	Power-up Timer Enable bit
  2426                           ;	PWRT = OFF, PWRT disabled
  2427                           ;	Brown-out Reset Enable bits
  2428                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2429                           ;	Brown Out Reset Voltage bits
  2430                           ;	BORV = 1, 
  2431   300002                     	org	3145730
  2432   300002  09                 	db	9
  2433                           
  2434                           ;Config register CONFIG2H @ 0x300003
  2435                           ;	Watchdog Timer Enable bit
  2436                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2437                           ;	Watchdog Timer Postscale Select bits
  2438                           ;	WDTPS = 512, 1:512
  2439   300003                     	org	3145731
  2440   300003  12                 	db	18
  2441                           
  2442                           ; Padding undefined space
  2443   300004                     	org	3145732
  2444   300004  FF                 	db	255
  2445                           
  2446                           ;Config register CONFIG3H @ 0x300005
  2447                           ;	CCP2 MUX bit
  2448                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2449                           ;	PORTB A/D Enable bit
  2450                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2451                           ;	Low-Power Timer1 Oscillator Enable bit
  2452                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2453                           ;	MCLR Pin Enable bit
  2454                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2455   300005                     	org	3145733
  2456   300005  81                 	db	129
  2457                           
  2458                           ;Config register CONFIG4L @ 0x300006
  2459                           ;	Stack Full/Underflow Reset Enable bit
  2460                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2461                           ;	Single-Supply ICSP Enable bit
  2462                           ;	LVP = OFF, Single-Supply ICSP disabled
  2463                           ;	Extended Instruction Set Enable bit
  2464                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2465                           ;	Background Debugger Enable bit
  2466                           ;	DEBUG = 0x1, unprogrammed default
  2467   300006                     	org	3145734
  2468   300006  81                 	db	129
  2469                           
  2470                           ; Padding undefined space
  2471   300007                     	org	3145735
  2472   300007  FF                 	db	255
  2473                           
  2474                           ;Config register CONFIG5L @ 0x300008
  2475                           ;	Code Protection bit
  2476                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2477                           ;	Code Protection bit
  2478                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2479                           ;	Code Protection bit
  2480                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2481                           ;	Code Protection bit
  2482                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2483   300008                     	org	3145736
  2484   300008  0F                 	db	15
  2485                           
  2486                           ;Config register CONFIG5H @ 0x300009
  2487                           ;	Boot Block Code Protection bit
  2488                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2489                           ;	Data EEPROM Code Protection bit
  2490                           ;	CPD = OFF, Data EEPROM not code-protected
  2491   300009                     	org	3145737
  2492   300009  C0                 	db	192
  2493                           
  2494                           ;Config register CONFIG6L @ 0x30000A
  2495                           ;	Write Protection bit
  2496                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2497                           ;	Write Protection bit
  2498                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2499                           ;	Write Protection bit
  2500                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2501                           ;	Write Protection bit
  2502                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2503   30000A                     	org	3145738
  2504   30000A  0F                 	db	15
  2505                           
  2506                           ;Config register CONFIG6H @ 0x30000B
  2507                           ;	Configuration Register Write Protection bit
  2508                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2509                           ;	Boot Block Write Protection bit
  2510                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2511                           ;	Data EEPROM Write Protection bit
  2512                           ;	WRTD = OFF, Data EEPROM not write-protected
  2513   30000B                     	org	3145739
  2514   30000B  E0                 	db	224
  2515                           
  2516                           ;Config register CONFIG7L @ 0x30000C
  2517                           ;	Table Read Protection bit
  2518                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2519                           ;	Table Read Protection bit
  2520                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2521                           ;	Table Read Protection bit
  2522                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2523                           ;	Table Read Protection bit
  2524                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2525   30000C                     	org	3145740
  2526   30000C  0F                 	db	15
  2527                           
  2528                           ;Config register CONFIG7H @ 0x30000D
  2529                           ;	Boot Block Table Read Protection bit
  2530                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2531   30000D                     	org	3145741
  2532   30000D  40                 	db	64
  2533                           tosu	equ	0xFFF
  2534                           tosh	equ	0xFFE
  2535                           tosl	equ	0xFFD
  2536                           stkptr	equ	0xFFC
  2537                           pclatu	equ	0xFFB
  2538                           pclath	equ	0xFFA
  2539                           pcl	equ	0xFF9
  2540                           tblptru	equ	0xFF8
  2541                           tblptrh	equ	0xFF7
  2542                           tblptrl	equ	0xFF6
  2543                           tablat	equ	0xFF5
  2544                           prodh	equ	0xFF4
  2545                           prodl	equ	0xFF3
  2546                           indf0	equ	0xFEF
  2547                           postinc0	equ	0xFEE
  2548                           postdec0	equ	0xFED
  2549                           preinc0	equ	0xFEC
  2550                           plusw0	equ	0xFEB
  2551                           fsr0h	equ	0xFEA
  2552                           fsr0l	equ	0xFE9
  2553                           wreg	equ	0xFE8
  2554                           indf1	equ	0xFE7
  2555                           postinc1	equ	0xFE6
  2556                           postdec1	equ	0xFE5
  2557                           preinc1	equ	0xFE4
  2558                           plusw1	equ	0xFE3
  2559                           fsr1h	equ	0xFE2
  2560                           fsr1l	equ	0xFE1
  2561                           bsr	equ	0xFE0
  2562                           indf2	equ	0xFDF
  2563                           postinc2	equ	0xFDE
  2564                           postdec2	equ	0xFDD
  2565                           preinc2	equ	0xFDC
  2566                           plusw2	equ	0xFDB
  2567                           fsr2h	equ	0xFDA
  2568                           fsr2l	equ	0xFD9
  2569                           status	equ	0xFD8

Data Sizes:
    Strings     6
    Constant    16
    Data        54
    BSS         47
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     17     111
    BANK0           128     11      19
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    S2825$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2825$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    TMR1_Interrupt_Init@TMR1.TMR1_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Interrupt_Func(), 

    TMR1_Interrupt_Init@TMR1	PTR struct . size(2) Largest target is 5
		 -> TM1_Counter(COMRAM[5]), 

    Interrupt_Handler@Timer1$F2321	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Interrupt_Func(), NULL(), 

    TMR1_Mode_Select@TMR1.TMR1_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Interrupt_Func(), 

    TMR1_Mode_Select@TMR1	PTR struct . size(2) Largest target is 5
		 -> TM1_Counter(COMRAM[5]), 

    Timer1_Read_Value@value	PTR unsigned short  size(2) Largest target is 2
		 -> TMR1_COUNTER(COMRAM[2]), 

    Timer1_Read_Value@TMR1	PTR struct . size(2) Largest target is 5
		 -> TM1_Counter(COMRAM[5]), 

    Timer1_Initialize@TMR1.TMR1_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Interrupt_Func(), 

    Timer1_Initialize@TMR1	PTR struct . size(2) Largest target is 5
		 -> TM1_Counter(COMRAM[5]), 

    TMR0_Interrupt_Init@TMR0.TMR0_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    TMR0_Mode_Select@TMR0.TMR0_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    S2050$TMR0_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Initialize@TMR0.TMR0_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 0

    S1969$TMR1_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Interrupt_Func(), 

    TM1_Counter.TMR1_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Interrupt_Func(), 

    EXT_RBX_Function_Initialize@RB_X.EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    EXT_RBX_Function_Initialize@RB_X.EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    S1475$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    EXT_RBX_Pin_Initialize@RB_X.EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    S1475$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    EXT_RBX_Pin_Initialize@RB_X.EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    RB7_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EXT_INTX_Function_Initialize@INT_X.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EXT_INTX_Pin_Initialize@INT_X.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EXT_INTX_Edge_Set@INT_X.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EXT_INTX_Clear_Flag@INT_X.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EXT_INTX_Disable_Helper@INT_X.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1304$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EXT_INTX_Enable@INT_X.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    gpio_pin_toggle@str	PTR const struct . size(2) Largest target is 1
		 -> led_toggle@LED_IN(COMRAM[1]), 

    PORT_REG	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRlll[1]), PORTD(BITBIGSFRlll[1]), PORTC(BITBIGSFRlll[1]), PORTB(BITBIGSFRlll[1]), 
		 -> PORTA(BITBIGSFRlll[1]), 

    TRIS_REG	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISD(ABS[1]), TRISC(ABS[1]), TRISB(ABS[1]), TRISE(ABS[1]), 
		 -> TRISA(BITBIGSFRlll[1]), 

    LAT_REG	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRllh[1]), LATD(BITBIGSFRllh[1]), LATC(BITBIGSFRllh[1]), LATB(BITBIGSFRllh[1]), 
		 -> LATA(BITBIGSFRlll[1]), 

    Interrupt_Init@Adc_.ADC_INTERRUPT	PTR FTN()void  size(2) Largest target is 0

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_GetConversionResult@Adc_.ADC_INTERRUPT	PTR FTN()void  size(2) Largest target is 0

    S716$ADC_INTERRUPT	PTR FTN()void  size(2) Largest target is 0

    ADC_Initialize@Adc_.ADC_INTERRUPT	PTR FTN()void  size(2) Largest target is 0

    led_toggle@LED_CONFIG	PTR struct . size(2) Largest target is 1
		 -> led_1(COMRAM[1]), 

    sp__memset	PTR void  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Interrupts_Manager_PriorityOff in COMRAM

    _TMR1_Interrupt_Func->_led_toggle
    _led_toggle->_gpio_pin_toggle

Critical Paths under _main in BANK0

    _main->_Timer1_Read_Value
    _Timer1_Initialize->_TMR1_Interrupt_Init
    _Timer1_Initialize->_TMR1_Mode_Select

Critical Paths under _Interrupts_Manager_PriorityOff in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrupts_Manager_PriorityOff in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupts_Manager_PriorityOff in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupts_Manager_PriorityOff in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrupts_Manager_PriorityOff in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrupts_Manager_PriorityOff in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Interrupts_Manager_PriorityOff in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Interrupts_Manager_PriorityOff in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Interrupts_Manager_PriorityOff in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Interrupts_Manager_PriorityOff in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Interrupts_Manager_PriorityOff in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Interrupts_Manager_PriorityOff in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Interrupts_Manager_PriorityOff in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Interrupts_Manager_PriorityOff in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Interrupts_Manager_PriorityOff in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Interrupts_Manager_PriorityOff in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1125
                  _Timer1_Initialize
                  _Timer1_Read_Value
 ---------------------------------------------------------------------------------
 (1) _Timer1_Read_Value                                   11     7      4     384
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (1) _Timer1_Initialize                                    5     3      2     741
                                              2 BANK0      4     2      2
                _TMR1_Interrupt_Init
                   _TMR1_Mode_Select
 ---------------------------------------------------------------------------------
 (2) _TMR1_Mode_Select                                     2     0      2     214
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Interrupt_Init                                  2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Interrupts_Manager_PriorityOff                       6     6      0     456
                                             11 COMRAM     6     6      0
                            _ADC_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (4) _TMR1_ISR                                             0     0      0     396
                                NULL *
                _TMR1_Interrupt_Func *
 ---------------------------------------------------------------------------------
 (5) _TMR1_Interrupt_Func                                  0     0      0     396
                         _led_toggle
 ---------------------------------------------------------------------------------
 (6) _led_toggle                                           5     3      2     396
                                              7 COMRAM     4     2      2
                    _gpio_pin_toggle
 ---------------------------------------------------------------------------------
 (7) _gpio_pin_toggle                                      8     6      2     172
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TMR0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _RB7_ISR                                              3     3      0      15
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _RB6_ISR                                              3     3      0      15
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _RB5_ISR                                              3     3      0      15
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _RB4_ISR                                              3     3      0      15
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer1_Initialize
     _TMR1_Interrupt_Init
     _TMR1_Mode_Select
   _Timer1_Read_Value

 _Interrupts_Manager_PriorityOff (ROOT)
   _ADC_ISR
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR
   _TMR0_ISR
   _TMR1_ISR
     NULL(Fake) *
     _TMR1_Interrupt_Func *
       _led_toggle
         _gpio_pin_toggle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      46        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      B      13       5       14.8%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     11      6F       1       88.1%
BITBIGSFRhhllhh     18      0       0      38        0.0%
BITBIGSFRlhhhh      15      0       0      41        0.0%
BITBIGSFRhhh         D      0       0      37        0.0%
BITBIGSFRhhllll      8      0       0      40        0.0%
BITBIGSFRlhhhll      7      0       0      42        0.0%
BITBIGSFRlhhl        6      0       0      43        0.0%
BITBIGSFRhhlllh      5      0       0      39        0.0%
BITBIGSFRllh         4      0       0      44        0.0%
BITBIGSFRlll         4      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      82      20        0.0%
DATA                 0      0      82       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Sep 29 20:26:18 2023

                                   l993 1782               _RB5_InterruptHandler_HIGH 0019  
                       __end_of_ADC_ISR 181E                                     _ret 006F  
                                   prod 0FF3                   relay_initialize@F3042 0029  
                                   tosl 0FFD                                     wreg 0FE8  
                       __end_of_RB4_ISR 173C                         __end_of_RB5_ISR 1704  
                       __end_of_RB6_ISR 16CC                         __end_of_RB7_ISR 1694  
                                  l1112 1604                                    l1123 15A4  
                                  l1108 15D8                                    l1126 17EA  
                                  l1095 1404                                    l1089 1346  
                                  l3910 154A                                    l3920 15A0  
                                  l3912 1564                                    l3922 15A2  
                                  l3914 1566                                    l3906 1528  
                                  l3930 132E                                    l3924 17D0  
                                  l3916 1580                                    l3908 1544  
                                  l3940 1370                                    l3932 132E  
                                  l3926 17D8                                    l3918 1586  
                                  l3950 13BC                                    l3942 1376  
                                  l3934 1342                                    l3928 17E8  
                                  l3952 13DC                                    l3944 1390  
                                  l3936 1348                                    l3954 13EC  
                                  l3946 1392                                    l3938 1354  
                                  l3970 15E0                                    l3962 15A6  
                                  l3956 1400                                    l3948 13B0  
                                  l3972 1602                                    l3964 15B0  
                                  l3958 1402                                    l3966 15C2  
                                  l3968 15D4                                    l3976 1772  
                                  STR_1 1011                                    STR_2 1014  
                                  u3000 15D4                                    u3001 15D0  
                                  _LATA 0F89                                    _LATB 0F8A  
                                  _LATC 0F8B                                    _LATD 0F8C  
                                  _LATE 0F8D                                    u2920 1544  
                                  u2921 1540                                    u2930 1564  
                                  u2931 1560                                    u2940 1580  
                                  u2941 157C                                    u2950 15A0  
                                  u2951 159C                                    u2960 1342  
                                  u2961 133E                                    u2970 1370  
                                  u2971 136C                                    u2980 1390  
                                  u2981 138C                                    u2990 15C2  
                                  u2991 15BE                _RB4_InterruptHandler_LOW 001B  
                                  _main 1772                _RB7_InterruptHandler_LOW 000F  
                                  fsr2h 0FDA                                    indf2 0FDF  
                                  fsr1l 0FE1                                    fsr2l 0FD9  
                                  btemp 0070                                    prodh 0FF4  
                                  prodl 0FF3                                    start 000E  
                 RB5_ISR@FUNC_DETECTION 0060                            ___param_bank 0000  
                      __end_of_INT0_ISR 181A                        __end_of_INT1_ISR 1816  
                      __end_of_INT2_ISR 1812                                   ?_main 005E  
                                 _EEADR 0FA9                                   i2l270 1498  
                                 i2l264 143C                                   i2l461 181C  
                                 i2l806 173A                                   i2l830 16CA  
                                 i2l566 1526                                   i2l818 1702  
                                 i2l842 1692                                   i2l692 1814  
                                 i2l687 1818                                   i2l951 10D6  
                                 i2l697 1810                                   i2l961 122A  
                                 i2l953 111A                                   i2l945 1052  
                                 i2l963 126E                                   i2l955 115E  
                                 i2l947 1072                                   i2l972 1312  
                                 i2l965 12B2                                   i2l957 11A2  
                                 i2l949 1092                                   i2l967 12D2  
                                 i2l959 11E6                                   i2l969 12F2  
                                 i2l999 17F8                                   _TMR0H 0FD7  
                                 _TMR1H 0FCF                                   _TMR0L 0FD6  
                                 _TMR1L 0FCE                                   _PORTA 0F80  
                                 _PORTB 0F81                                   _PORTC 0F82  
                                 _PORTD 0F83                                   _PORTE 0F84  
                                 _TRISA 0F92                                   _TRISB 0F93  
                                 _TRISC 0F94                                   _TRISD 0F95  
                                 _TRISE 0F96                   Timer1_Read_Value@TMR1 0080  
                      ?_gpio_pin_toggle 005E                        __end_of_TMR0_ISR 1806  
                      __end_of_TMR1_ISR 1772        ??_Interrupts_Manager_PriorityOff 0069  
       ?_Interrupts_Manager_PriorityOff 005E                                   _lcd_1 004E  
                                 _led_1 005D                                   pclath 0FFA  
                                 pclatu 0FFB                                   tablat 0FF5  
                                 ttemp5 0071                                   ttemp6 0074  
                                 ttemp7 0078                                   status 0FD8  
                                 wtemp8 0071                      gpio_pin_toggle@str 005E  
                       __initialization 1606                            __end_of_main 17A2  
                             ??_ADC_ISR 005E                                  ??_main 008B  
                         __activetblptr 0003                        led_turn_on@F3053 002C  
                             ??_RB4_ISR 005E                               ??_RB5_ISR 005E  
                             ??_RB6_ISR 005E                               ??_RB7_ISR 005E  
                                _ADRESH 0FC4                                  _EEADRH 0FAA  
                                _ADRESL 0FC3                                  _EEDATA 0FA8  
                                _EECON2 0FA7                                  i2l1131 1770  
                                i2l2110 181A                                  i2l1064 1804  
                                i2l2200 17FC                                  i2l2122 1812  
                                i2l2202 1800                                  i2l2116 1816  
                                i2l2134 1706                                  i2l2150 16CE  
                                i2l2128 180E                                  i2l2136 170C  
                                i2l2144 1710                                  i2l2152 16D4  
                                i2l2160 16D8                                  i2l2166 1696  
                                i2l2182 165E                                  i2l2168 169C  
                                i2l2176 16A0                                  i2l2184 1664  
                                i2l2192 1668                                  i2l4060 16B4  
                                i2l4062 16EC                                  i2l2198 17FA  
                                i2l4064 1724                                  i2l4058 167C  
                                i2l3700 17EC                                  i2l3800 10BC  
                                i2l3730 1742                                  i2l3810 1100  
                                i2l3802 10CC                                  i2l3732 1746  
                                i2l3820 1144                                  i2l3812 1110  
                                i2l3804 10D0                                  i2l3670 149A  
                                i2l3734 1758                                  i2l3726 173C  
                                i2l3830 1188                                  i2l3822 1154  
                                i2l3814 1114                                  i2l3806 10E4  
                                i2l3672 149A                                  i2l3728 173E  
                                i2l3840 11CC                                  i2l3832 1198  
                                i2l3824 1158                                  i2l3816 1128  
                                i2l3808 10F2                                  i2l3674 14AC  
                                i2l3690 1440                                  i2l3682 1406  
                                i2l3850 1210                                  i2l3842 11DC  
                                i2l3834 119C                                  i2l3826 116C  
                                i2l3818 1136                                  i2l3676 14CA  
                                i2l3692 1478                                  i2l3684 1406  
                                i2l3860 1254                                  i2l3852 1220  
                                i2l3844 11E0                                  i2l3836 11B0  
                                i2l3828 117A                                  i2l3678 14CE  
                                i2l3694 147A                                  i2l3686 1418  
                                i2l3870 1298                                  i2l3862 1264  
                                i2l3854 1224                                  i2l3846 11F4  
                                i2l3838 11BE                                  i2l3790 106E  
                                i2l3782 1032                                  i2l3696 148C  
                                i2l3688 1438                                  i2l3880 12E0  
                                i2l3872 12A8                                  i2l3864 1268  
                                i2l3856 1238                                  i2l3848 1202  
                                i2l3792 1080                                  i2l3784 1040  
                                i2l3882 12EE                                  i2l3874 12AC  
                                i2l3866 127C                                  i2l3858 1246  
                                i2l3794 108E                                  i2l3786 104E  
                                i2l3884 1300                                  i2l3876 12C0  
                                i2l3868 128A                                  i2l3796 10A0  
                                i2l3788 1060                                  i2l3886 130E  
                                i2l3878 12CE                                  i2l3798 10AE  
                Timer1_Read_Value@TMLOW 0089                  Timer1_Read_Value@value 0082  
                   _TMR1_Interrupt_Func 17EC                     _TMR1_Interrupt_Init 17D0  
                                clear_0 164C                                  isa$std 0001  
                          __pdataCOMRAM 0030                __end_of_TMR1_Mode_Select 15A6  
                          __mediumconst 0000                                  tblptrh 0FF7  
                                tblptrl 0FF6                                  tblptru 0FF8  
               TMR1_Interrupt_Init@TMR1 0080                    ?_TMR1_Interrupt_Func 005E  
                  ?_TMR1_Interrupt_Init 0080                              __accesstop 0080  
               __end_of__initialization 1652                               ?_INT0_ISR 005E  
                             ?_INT1_ISR 005E                               ?_INT2_ISR 005E  
                         ___rparam_used 0001                   Timer1_Initialize@TMR1 0082  
                        __pcstackCOMRAM 005E                            __pidataBANK0 1806  
                             ?_TMR0_ISR 005E                               ?_TMR1_ISR 005E  
                 ??_TMR1_Interrupt_Func 0069                   ??_TMR1_Interrupt_Init 0082  
                  led_toggle@LED_CONFIG 0065                   _INT0_InterruptHandler 0023  
                            ??_INT0_ISR 005E                              ??_INT1_ISR 005E  
                            ??_INT2_ISR 005E                              __pnvCOMRAM 006F  
                  TMR1_Mode_Select@TMR1 0080                              ??_TMR0_ISR 005E  
                            ??_TMR1_ISR 0069                       led_turn_off@F3058 002B  
                               _ADC_ISR 181A                         led_toggle@F3063 002A  
           number_16bit_to_string@F3219 0001                                 _RB4_ISR 1704  
                               _RB5_ISR 16CC                                 _RB6_ISR 1694  
                               _RB7_ISR 165C                                 _LAT_REG 0044  
             _RB6_InterruptHandler_HIGH 0015                 Timer1_Read_Value@TMHIGH 0088  
                            _btn_values 1001                              _led_toggle 1406  
              _RB6_InterruptHandler_LOW 0013                    _ADC_InterruptHandler 0025  
                               __Hparam 0000                   RB4_ISR@FUNC_DETECTION 0060  
                 RB7_ISR@FUNC_DETECTION 0060                                 __Lparam 0000  
                          __psmallconst 1000                                 __pcinit 1606  
                               __ramtop 1000                           relay_on@F3047 0028  
                               __ptext0 1772                                 __ptext1 15A6  
                               __ptext2 132E                                 __ptext3 1528  
                               __ptext4 17D0                                 __ptext6 173C  
                               __ptext7 17EC                                 __ptext8 1406  
                               __ptext9 149A                               _T0CONbits 0FD5  
                             _T1CONbits 0FCD                       _Timer1_Read_Value 15A6  
                     _Timer1_Initialize 132E                          __pintcode_body 1018  
                  end_of_initialization 1652                      ?_Timer1_Read_Value 0080  
                    ?_Timer1_Initialize 0082          _Interrupt_Handler@Timer1$F2321 0009  
                               int_func 1018                     ??_Timer1_Read_Value 0084  
                   ??_Timer1_Initialize 0084                                 postdec1 0FE5  
                               postdec2 0FDD                                 postinc0 0FEE  
                               postinc2 0FDE                   _INT1_InterruptHandler 0021  
                             _PORTBbits 0F81               __end_of_Timer1_Read_Value 1606  
                     ?_TMR1_Mode_Select 0080               __end_of_Timer1_Initialize 1406  
                    ??_TMR1_Mode_Select 0082                             ?_led_toggle 0065  
                         __pidataCOMRAM 17A2                    Timer1_Read_Value@ret 008A  
                   start_initialization 1606                       ??_gpio_pin_toggle 0060  
                           __pdataBANK0 008B                                ?_ADC_ISR 005E  
           __end_of_TMR1_Interrupt_Func 17FA             __end_of_TMR1_Interrupt_Init 17EC  
                              ?_RB4_ISR 005E                                ?_RB5_ISR 005E  
                              ?_RB6_ISR 005E                                ?_RB7_ISR 005E  
                           __pbssCOMRAM 0001                           __pcstackBANK0 0080  
                 _INT2_InterruptHandler 001F                               __pintcode 0008  
                           __smallconst 1000               _RB4_InterruptHandler_HIGH 001D  
             _RB7_InterruptHandler_HIGH 0011                        led_toggle@LED_IN 0068  
              _RB5_InterruptHandler_LOW 0017                                _INT0_ISR 1816  
                              _INT1_ISR 1812                                _INT2_ISR 180E  
                              _RB4_Flag 0057                                _RB5_Flag 0056  
                              _RB6_Flag 0055                                _RB7_Flag 0054  
                              _PIE1bits 0F9D                   RB6_ISR@FUNC_DETECTION 0060  
                              i2u231_40 14AC                                i2u231_41 14A8  
                              i2u232_40 14CA                                i2u232_41 14C6  
                              i2u241_40 1758                                i2u241_41 1754  
                              i2u233_44 14EA                                i2u233_45 14E6  
                              i2u234_40 1418                                i2u250_40 1060  
                              i2u234_41 1414                                i2u250_41 105C  
                              i2u235_40 1438                                i2u242_48 175E  
                              i2u251_40 106E                                i2u235_41 1434  
                              i2u242_49 1770                                i2u251_41 106A  
                              i2u260_40 1100                                i2u252_40 1080  
                              i2u260_41 10FC                                i2u252_41 107C  
                              i2u236_45 148A                                i2u236_47 148C  
                              i2u261_40 1110                                i2u253_40 108E  
                              i2u261_41 110C                                i2u253_41 108A  
                              i2u270_40 11B0                                i2u262_40 1128  
                              i2u254_40 10A0                                i2u270_41 11AC  
                              i2u262_41 1124                                i2u254_41 109C  
                              i2u271_40 11BE                                i2u263_40 1136  
                              i2u255_40 10AE                                i2u271_41 11BA  
                              i2u263_41 1132                                i2u255_41 10AA  
                              i2u280_40 1254                                i2u272_40 11CC  
                              i2u264_40 1144                                i2u256_40 10BC  
                              i2u248_40 1040                                i2u280_41 1250  
                              i2u272_41 11C8                                i2u264_41 1140  
                              i2u256_41 10B8                                i2u248_41 103C  
                              i2u281_40 1264                                i2u273_40 11DC  
                              i2u265_40 1154                                i2u257_40 10CC  
                              i2u249_40 104E                                i2u281_41 1260  
                              i2u273_41 11D8                                i2u265_41 1150  
                              i2u257_41 10C8                                i2u249_41 104A  
                              _PIR1bits 0F9E                                i2u290_40 1300  
                              i2u282_40 127C                                i2u274_40 11F4  
                              i2u266_40 116C                                i2u258_40 10E4  
                              i2u290_41 12FC                                i2u282_41 1278  
                              i2u274_41 11F0                                i2u266_41 1168  
                              i2u258_41 10E0                                i2u291_40 130E  
                              i2u283_40 128A                                i2u275_40 1202  
                              i2u267_40 117A                                i2u259_40 10F2  
                              i2u291_41 130A                                i2u283_41 1286  
                              i2u275_41 11FE                                i2u267_41 1176  
                              i2u259_41 10EE                                i2u284_40 1298  
                              i2u276_40 1210                                i2u268_40 1188  
                              i2u284_41 1294                                i2u276_41 120C  
                              i2u268_41 1184                                i2u285_40 12A8  
                              i2u277_40 1220                                i2u269_40 1198  
                              i2u285_41 12A4                                i2u277_41 121C  
                              i2u269_41 1194                                i2u286_40 12C0  
                              i2u278_40 1238                                i2u286_41 12BC  
                              i2u278_41 1234                                i2u287_40 12CE  
                              i2u279_40 1246                                i2u287_41 12CA  
                              i2u279_41 1242                                i2u288_40 12E0  
                              i2u288_41 12DC                                i2u289_40 12EE  
                              i2u289_41 12EA                                _TMR0_ISR 17FA  
                              _TMR1_ISR 173C                                _PORT_REG 0030  
                              _TRIS_REG 003A                              _ADCON0bits 0FC2  
                            _ADCON1bits 0FC1                              _ADCON2bits 0FC0  
                           _INTCON2bits 0FF1                             _INTCON3bits 0FF0  
                             copy_data0 161A                               copy_data1 163A  
                          ??_led_toggle 0067                              _EECON1bits 0FA6  
                              __Hrparam 0000                                __Lrparam 0000  
__end_of_Interrupts_Manager_PriorityOff 132E          _Interrupts_Manager_PriorityOff 0008  
                    __end_of_btn_values 1011                      __end_of_led_toggle 149A  
                    led_intialize@F3048 002D                                __ptext10 17FA  
                              __ptext11 165C                                __ptext12 1694  
                              __ptext13 16CC                                __ptext14 1704  
                              __ptext15 180E                                __ptext16 1812  
                              __ptext17 1816                                __ptext18 181A  
                              __ptext19 0000                            _TMR1_COUNTER 002E  
                       _gpio_pin_toggle 149A                                _keypad_1 008B  
                        relay_off@F3052 0027                                isa$xinst 0000  
                              int$flags 0070                             _TM1_Counter 0058  
                            _INTCONbits 0FF2                  fp__TMR1_Interrupt_Func 0000  
                          _TMR0_preload 000B                                intlevel2 0000  
                          _TMR1_preload 0007                 __end_of_gpio_pin_toggle 1528  
                     _Interrupt_Handler 000D                        _TMR1_Mode_Select 1528  
