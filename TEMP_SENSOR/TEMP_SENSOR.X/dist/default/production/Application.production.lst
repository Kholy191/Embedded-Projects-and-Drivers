

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Sep 26 02:39:17 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,inline
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    72                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    73                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    74   000000                     
    75                           ; Generated 23/03/2023 GMT
    76                           ; 
    77                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution. Publication is not required when
    91                           ;        this file is used in an embedded application.
    92                           ; 
    93                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    94                           ;        software without specific prior written permission.
    95                           ; 
    96                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    97                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    98                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    99                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   100                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   101                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   102                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   103                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   104                           ; 
   105                           ; 
   106                           ; Code-generator required, PIC18F4620 Definitions
   107                           ; 
   108                           ; SFR Addresses
   109   000000                     
   110                           	psect	idataCOMRAM
   111   003396                     __pidataCOMRAM:
   112                           	callstack 0
   113                           
   114                           ;initializer for _RB7_Flag
   115   003396  01                 	db	1
   116                           
   117                           ;initializer for _RB6_Flag
   118   003397  01                 	db	1
   119                           
   120                           ;initializer for _RB5_Flag
   121   003398  01                 	db	1
   122                           
   123                           ;initializer for _RB4_Flag
   124   003399  01                 	db	1
   125                           
   126                           	psect	idataBANK0
   127   0032E0                     __pidataBANK0:
   128                           	callstack 0
   129                           
   130                           ;initializer for _PORT_REG
   131   0032E0  80                 	db	128
   132   0032E1  0F                 	db	15
   133   0032E2  81                 	db	129
   134   0032E3  0F                 	db	15
   135   0032E4  82                 	db	130
   136   0032E5  0F                 	db	15
   137   0032E6  83                 	db	131
   138   0032E7  0F                 	db	15
   139   0032E8  84                 	db	132
   140   0032E9  0F                 	db	15
   141                           
   142                           ;initializer for _TRIS_REG
   143   0032EA  92                 	db	146
   144   0032EB  0F                 	db	15
   145   0032EC  93                 	db	147
   146   0032ED  0F                 	db	15
   147   0032EE  94                 	db	148
   148   0032EF  0F                 	db	15
   149   0032F0  95                 	db	149
   150   0032F1  0F                 	db	15
   151   0032F2  96                 	db	150
   152   0032F3  0F                 	db	15
   153                           
   154                           ;initializer for _LAT_REG
   155   0032F4  89                 	db	137
   156   0032F5  0F                 	db	15
   157   0032F6  8A                 	db	138
   158   0032F7  0F                 	db	15
   159   0032F8  8B                 	db	139
   160   0032F9  0F                 	db	15
   161   0032FA  8C                 	db	140
   162   0032FB  0F                 	db	15
   163   0032FC  8D                 	db	141
   164   0032FD  0F                 	db	15
   165                           
   166                           ;initializer for _keypad_1
   167   0032FE  10                 	db	16
   168   0032FF  11                 	db	17
   169   003300  12                 	db	18
   170   003301  13                 	db	19
   171   003302  54                 	db	84
   172   003303  55                 	db	85
   173   003304  56                 	db	86
   174   003305  57                 	db	87
   175                           
   176                           ;initializer for _ADC_1
   177   003306  A0                 	db	low _Adc_interr
   178   003307  2E                 	db	high _Adc_interr
   179   003308  01                 	db	1
   180   003309  03                 	db	3
   181   00330A  05                 	db	5
   182   00330B  00                 	db	0
   183   00330C  02                 	db	2
   184                           
   185                           ;initializer for _lcd_1
   186   00330D  10                 	db	16
   187   00330E  11                 	db	17
   188   00330F  12                 	db	18
   189   003310  13                 	db	19
   190   003311  17                 	db	23
   191   003312  16                 	db	22
   192                           
   193                           ;initializer for _moto_2
   194   003313  1A                 	db	26
   195   003314  1B                 	db	27
   196                           
   197                           ;initializer for _moto_1
   198   003315  18                 	db	24
   199   003316  19                 	db	25
   200                           
   201                           	psect	smallconst
   202   001000                     __psmallconst:
   203                           	callstack 0
   204   001000  00                 	db	0
   205   001001                     _btn_values:
   206                           	callstack 0
   207   001001  37                 	db	55
   208   001002  38                 	db	56
   209   001003  39                 	db	57
   210   001004  2F                 	db	47
   211   001005  34                 	db	52
   212   001006  35                 	db	53
   213   001007  36                 	db	54
   214   001008  2A                 	db	42
   215   001009  31                 	db	49
   216   00100A  32                 	db	50
   217   00100B  33                 	db	51
   218   00100C  2D                 	db	45
   219   00100D  23                 	db	35
   220   00100E  30                 	db	48
   221   00100F  3D                 	db	61
   222   001010  2B                 	db	43
   223   001011                     __end_of_btn_values:
   224                           	callstack 0
   225   000000                     _ADRESL	set	4035
   226   000000                     _ADRESH	set	4036
   227   000000                     _INTCON2bits	set	4081
   228   000000                     _EECON2	set	4007
   229   001011                     STR_4:
   230   001011  41                 	db	65	;'A'
   231   001012  44                 	db	68	;'D'
   232   001013  43                 	db	67	;'C'
   233   001014  5F                 	db	95	;'_'
   234   001015  54                 	db	84	;'T'
   235   001016  45                 	db	69	;'E'
   236   001017  53                 	db	83	;'S'
   237   001018  54                 	db	84	;'T'
   238   001019  00                 	db	0
   239   00101A                     STR_5:
   240   00101A  54                 	db	84	;'T'
   241   00101B  45                 	db	69	;'E'
   242   00101C  4D                 	db	77	;'M'
   243   00101D  50                 	db	80	;'P'
   244   00101E  5F                 	db	95	;'_'
   245   00101F  31                 	db	49	;'1'
   246   001020  00                 	db	0
   247   001021                     STR_6:
   248   001021  54                 	db	84	;'T'
   249   001022  45                 	db	69	;'E'
   250   001023  4D                 	db	77	;'M'
   251   001024  50                 	db	80	;'P'
   252   001025  5F                 	db	95	;'_'
   253   001026  32                 	db	50	;'2'
   254   001027  00                 	db	0
   255   001028  25                 	db	37
   256   001029  64                 	db	100	;'d'
   257   00102A  00                 	db	0
   258   00102B                     STR_2:
   259   00102B  25                 	db	37
   260   00102C  69                 	db	105	;'i'
   261   00102D  00                 	db	0
   262   00102E  00                 	db	0	; dummy byte at the end
   263   000000                     
   264                           	psect	nvBANK0
   265   0000FF                     __pnvBANK0:
   266                           	callstack 0
   267   0000FF                     _ret:
   268                           	callstack 0
   269   0000FF                     	ds	1
   270   000000                     _PORTBbits	set	3969
   271   000000                     _EECON1bits	set	4006
   272   000000                     _EEDATA	set	4008
   273   000000                     _EEADR	set	4009
   274   000000                     _INTCONbits	set	4082
   275   000000                     _PORTE	set	3972
   276   000000                     _PORTD	set	3971
   277   000000                     _PORTC	set	3970
   278   000000                     _PORTB	set	3969
   279   000000                     _PORTA	set	3968
   280   000000                     _LATA	set	3977
   281   000000                     _ADCON2bits	set	4032
   282   000000                     _ADCON1bits	set	4033
   283   000000                     _ADCON0bits	set	4034
   284   000000                     _RCONbits	set	4048
   285   000000                     _INTCON3bits	set	4080
   286   000000                     _EEADRH	set	4010
   287   000000                     _TRISA	set	3986
   288   000000                     _LATE	set	3981
   289   000000                     _LATD	set	3980
   290   000000                     _LATC	set	3979
   291   000000                     _LATB	set	3978
   292   000000                     _PIE1bits	set	3997
   293   000000                     _TRISE	set	3990
   294   000000                     _TRISD	set	3989
   295   000000                     _TRISC	set	3988
   296   000000                     _TRISB	set	3987
   297   000000                     _IPR1bits	set	3999
   298   000000                     _PIR1bits	set	3998
   299                           
   300                           ; #config settings
   301                           
   302                           	psect	cinit
   303   002D6A                     __pcinit:
   304                           	callstack 0
   305   002D6A                     start_initialization:
   306                           	callstack 0
   307   002D6A                     __initialization:
   308                           	callstack 0
   309                           
   310                           ; Initialize objects allocated to BANK0 (55 bytes)
   311                           ; load TBLPTR registers with __pidataBANK0
   312   002D6A  0EE0               	movlw	low __pidataBANK0
   313   002D6C  6EF6               	movwf	tblptrl,c
   314   002D6E  0E32               	movlw	high __pidataBANK0
   315   002D70  6EF7               	movwf	tblptrh,c
   316   002D72  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   317   002D74  6EF8               	movwf	tblptru,c
   318   002D76  EE00  F080         	lfsr	0,__pdataBANK0
   319   002D7A  EE10 F037          	lfsr	1,55
   320   002D7E                     copy_data0:
   321   002D7E  0009               	tblrd		*+
   322   002D80  CFF5 FFEE          	movff	tablat,postinc0
   323   002D84  50E5               	movf	postdec1,w,c
   324   002D86  50E1               	movf	fsr1l,w,c
   325   002D88  E1FA               	bnz	copy_data0
   326                           
   327                           ; Initialize objects allocated to COMRAM (4 bytes)
   328                           ; load TBLPTR registers with __pidataCOMRAM
   329   002D8A  0E96               	movlw	low __pidataCOMRAM
   330   002D8C  6EF6               	movwf	tblptrl,c
   331   002D8E  0E33               	movlw	high __pidataCOMRAM
   332   002D90  6EF7               	movwf	tblptrh,c
   333   002D92  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   334   002D94  6EF8               	movwf	tblptru,c
   335   002D96  EE00  F069         	lfsr	0,__pdataCOMRAM
   336   002D9A  EE10 F004          	lfsr	1,4
   337   002D9E                     copy_data1:
   338   002D9E  0009               	tblrd		*+
   339   002DA0  CFF5 FFEE          	movff	tablat,postinc0
   340   002DA4  50E5               	movf	postdec1,w,c
   341   002DA6  50E1               	movf	fsr1l,w,c
   342   002DA8  E1FA               	bnz	copy_data1
   343                           
   344                           ; Clear objects allocated to BANK1 (32 bytes)
   345   002DAA  EE01  F000         	lfsr	0,__pbssBANK1
   346   002DAE  0E20               	movlw	32
   347   002DB0                     clear_0:
   348   002DB0  6AEE               	clrf	postinc0,c
   349   002DB2  06E8               	decf	wreg,f,c
   350   002DB4  E1FD               	bnz	clear_0
   351                           
   352                           ; Clear objects allocated to BANK0 (46 bytes)
   353   002DB6  EE00  F0B7         	lfsr	0,__pbssBANK0
   354   002DBA  0E2E               	movlw	46
   355   002DBC                     clear_1:
   356   002DBC  6AEE               	clrf	postinc0,c
   357   002DBE  06E8               	decf	wreg,f,c
   358   002DC0  E1FD               	bnz	clear_1
   359                           
   360                           ; Clear objects allocated to COMRAM (17 bytes)
   361   002DC2  EE00  F058         	lfsr	0,__pbssCOMRAM
   362   002DC6  0E11               	movlw	17
   363   002DC8                     clear_2:
   364   002DC8  6AEE               	clrf	postinc0,c
   365   002DCA  06E8               	decf	wreg,f,c
   366   002DCC  E1FD               	bnz	clear_2
   367   002DCE                     end_of_initialization:
   368                           	callstack 0
   369   002DCE                     __end_of__initialization:
   370                           	callstack 0
   371   002DCE  906D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   372   002DD0  926D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   373   002DD2  0100               	movlb	0
   374   002DD4  EF90  F00B         	goto	_main	;jump to C main() function
   375                           
   376                           	psect	bssCOMRAM
   377   000058                     __pbssCOMRAM:
   378                           	callstack 0
   379   000058                     _TEMP_2:
   380                           	callstack 0
   381   000058                     	ds	2
   382   00005A                     _TEMP_1:
   383                           	callstack 0
   384   00005A                     	ds	2
   385   00005C                     _flags:
   386                           	callstack 0
   387   00005C                     	ds	1
   388   00005D                     _Prog_counter:
   389                           	callstack 0
   390   00005D                     	ds	1
   391   00005E                     relay_off@F3052:
   392                           	callstack 0
   393   00005E                     	ds	1
   394   00005F                     relay_on@F3047:
   395                           	callstack 0
   396   00005F                     	ds	1
   397   000060                     relay_initialize@F3042:
   398                           	callstack 0
   399   000060                     	ds	1
   400   000061                     led_toggle@F3063:
   401                           	callstack 0
   402   000061                     	ds	1
   403   000062                     led_turn_off@F3058:
   404                           	callstack 0
   405   000062                     	ds	1
   406   000063                     led_turn_on@F3053:
   407                           	callstack 0
   408   000063                     	ds	1
   409   000064                     led_intialize@F3048:
   410                           	callstack 0
   411   000064                     	ds	1
   412   000065                     _ADC_2_Result:
   413                           	callstack 0
   414   000065                     	ds	2
   415   000067                     _ADC_1_Result:
   416                           	callstack 0
   417   000067                     	ds	2
   418                           
   419                           	psect	dataCOMRAM
   420   000069                     __pdataCOMRAM:
   421                           	callstack 0
   422   000069                     _RB7_Flag:
   423                           	callstack 0
   424   000069                     	ds	1
   425   00006A                     _RB6_Flag:
   426                           	callstack 0
   427   00006A                     	ds	1
   428   00006B                     _RB5_Flag:
   429                           	callstack 0
   430   00006B                     	ds	1
   431   00006C                     _RB4_Flag:
   432                           	callstack 0
   433   00006C                     	ds	1
   434                           
   435                           	psect	bssBANK0
   436   0000B7                     __pbssBANK0:
   437                           	callstack 0
   438   0000B7                     	ds	6
   439   0000BD                     _width:
   440                           	callstack 0
   441   0000BD                     	ds	2
   442   0000BF                     _prec:
   443                           	callstack 0
   444   0000BF                     	ds	2
   445   0000C1                     _ADC_InterruptHandler:
   446                           	callstack 0
   447   0000C1                     	ds	2
   448   0000C3                     _RB7_InterruptHandler_LOW:
   449                           	callstack 0
   450   0000C3                     	ds	2
   451   0000C5                     _RB7_InterruptHandler_HIGH:
   452                           	callstack 0
   453   0000C5                     	ds	2
   454   0000C7                     _RB6_InterruptHandler_LOW:
   455                           	callstack 0
   456   0000C7                     	ds	2
   457   0000C9                     _RB6_InterruptHandler_HIGH:
   458                           	callstack 0
   459   0000C9                     	ds	2
   460   0000CB                     _RB5_InterruptHandler_LOW:
   461                           	callstack 0
   462   0000CB                     	ds	2
   463   0000CD                     _RB5_InterruptHandler_HIGH:
   464                           	callstack 0
   465   0000CD                     	ds	2
   466   0000CF                     _RB4_InterruptHandler_LOW:
   467                           	callstack 0
   468   0000CF                     	ds	2
   469   0000D1                     _RB4_InterruptHandler_HIGH:
   470                           	callstack 0
   471   0000D1                     	ds	2
   472   0000D3                     _INT2_InterruptHandler:
   473                           	callstack 0
   474   0000D3                     	ds	2
   475   0000D5                     _INT1_InterruptHandler:
   476                           	callstack 0
   477   0000D5                     	ds	2
   478   0000D7                     _INT0_InterruptHandler:
   479                           	callstack 0
   480   0000D7                     	ds	2
   481   0000D9                     _TEMP_2_txt:
   482                           	callstack 0
   483   0000D9                     	ds	6
   484   0000DF                     _TEMP_1_txt:
   485                           	callstack 0
   486   0000DF                     	ds	6
   487                           
   488                           	psect	dataBANK0
   489   000080                     __pdataBANK0:
   490                           	callstack 0
   491   000080                     _PORT_REG:
   492                           	callstack 0
   493   000080                     	ds	10
   494   00008A                     _TRIS_REG:
   495                           	callstack 0
   496   00008A                     	ds	10
   497   000094                     _LAT_REG:
   498                           	callstack 0
   499   000094                     	ds	10
   500   00009E                     _keypad_1:
   501                           	callstack 0
   502   00009E                     	ds	8
   503   0000A6                     _ADC_1:
   504                           	callstack 0
   505   0000A6                     	ds	7
   506   0000AD                     _lcd_1:
   507                           	callstack 0
   508   0000AD                     	ds	6
   509   0000B3                     _moto_2:
   510                           	callstack 0
   511   0000B3                     	ds	2
   512   0000B5                     _moto_1:
   513                           	callstack 0
   514   0000B5                     	ds	2
   515                           
   516                           	psect	bssBANK1
   517   000100                     __pbssBANK1:
   518                           	callstack 0
   519   000100                     _dbuf:
   520                           	callstack 0
   521   000100                     	ds	32
   522                           
   523                           	psect	cstackBANK0
   524   0000E5                     __pcstackBANK0:
   525                           	callstack 0
   526   0000E5                     sprintf@ap:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0x0
   530   0000E5                     	ds	2
   531   0000E7                     sprintf@f:
   532                           	callstack 0
   533                           
   534                           ; 12 bytes @ 0x2
   535   0000E7                     	ds	12
   536   0000F3                     number_16bit_to_string@value:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0xE
   540   0000F3                     	ds	2
   541   0000F5                     number_16bit_to_string@str:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0x10
   545   0000F5                     	ds	2
   546   0000F7                     number_16bit_to_string@Temp_String:
   547                           	callstack 0
   548                           
   549                           ; 6 bytes @ 0x12
   550   0000F7                     	ds	6
   551   0000FD                     number_16bit_to_string@ret:
   552                           	callstack 0
   553                           
   554                           ; 1 bytes @ 0x18
   555   0000FD                     	ds	1
   556   0000FE                     number_16bit_to_string@DataCounter:
   557                           	callstack 0
   558                           
   559                           ; 1 bytes @ 0x19
   560   0000FE                     	ds	1
   561                           
   562                           	psect	cstackCOMRAM
   563   000001                     __pcstackCOMRAM:
   564                           	callstack 0
   565   000001                     ??_RB4_ISR:
   566   000001                     ??_RB5_ISR:
   567   000001                     ??_RB6_ISR:
   568   000001                     ??i2_RB7_ISR:
   569   000001                     ADC_GetConversionResult@Adc_:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x0
   573   000001                     	ds	2
   574   000003                     RB4_ISR@FUNC_DETECTION:
   575                           	callstack 0
   576   000003                     RB5_ISR@FUNC_DETECTION:
   577                           	callstack 0
   578   000003                     RB6_ISR@FUNC_DETECTION:
   579                           	callstack 0
   580   000003                     i2RB7_ISR@FUNC_DETECTION:
   581                           	callstack 0
   582   000003                     ADC_GetConversionResult@Result:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0x2
   586   000003                     	ds	2
   587   000005                     ??_ADC_GetConversionResult:
   588                           
   589                           ; 1 bytes @ 0x4
   590   000005                     	ds	3
   591   000008                     ??_InterruptManagerHigh:
   592                           
   593                           ; 1 bytes @ 0x7
   594   000008                     	ds	4
   595   00000C                     ??_RB7_ISR:
   596                           
   597                           ; 1 bytes @ 0xB
   598   00000C                     	ds	2
   599   00000E                     RB7_ISR@FUNC_DETECTION:
   600                           	callstack 0
   601                           
   602                           ; 1 bytes @ 0xD
   603   00000E                     	ds	1
   604   00000F                     ??_LOW_PRIORITY_INTERRUPTS:
   605                           
   606                           ; 1 bytes @ 0xE
   607   00000F                     	ds	3
   608   000012                     ??_Pins_Configration_Func:
   609   000012                     ?___awdiv:
   610                           	callstack 0
   611   000012                     ?___awmod:
   612                           	callstack 0
   613   000012                     ?___lwdiv:
   614                           	callstack 0
   615   000012                     ?___xxtofl:
   616                           	callstack 0
   617   000012                     gpio_pin_direction_intialize@str:
   618                           	callstack 0
   619   000012                     gpio_pin_write_logic@str:
   620                           	callstack 0
   621   000012                     ADC_Start_Conversion_Func@Adc_:
   622                           	callstack 0
   623   000012                     Interrupt_Init@Adc_:
   624                           	callstack 0
   625   000012                     ___awdiv@dividend:
   626                           	callstack 0
   627   000012                     ___awmod@dividend:
   628                           	callstack 0
   629   000012                     ___lwdiv@dividend:
   630                           	callstack 0
   631   000012                     memset@dest:
   632                           	callstack 0
   633   000012                     fputc@c:
   634                           	callstack 0
   635   000012                     ___xxtofl@val:
   636                           	callstack 0
   637                           
   638                           ; 4 bytes @ 0x11
   639   000012                     	ds	2
   640   000014                     ??_gpio_pin_direction_intialize:
   641   000014                     gpio_pin_write_logic@LOG:
   642                           	callstack 0
   643   000014                     Pins_Configration_Func@channel:
   644                           	callstack 0
   645   000014                     ___awdiv@divisor:
   646                           	callstack 0
   647   000014                     ___awmod@divisor:
   648                           	callstack 0
   649   000014                     ___lwdiv@divisor:
   650                           	callstack 0
   651   000014                     memset@c:
   652                           	callstack 0
   653   000014                     fputc@fp:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x13
   657   000014                     	ds	1
   658   000015                     ??_gpio_pin_write_logic:
   659   000015                     ADC_Initialize@Adc_:
   660                           	callstack 0
   661   000015                     ADC_Select_Channel@Adc_:
   662                           	callstack 0
   663                           
   664                           ; 2 bytes @ 0x14
   665   000015                     	ds	1
   666   000016                     ??_fputc:
   667   000016                     ??___xxtofl:
   668   000016                     ___awdiv@counter:
   669                           	callstack 0
   670   000016                     ___awmod@counter:
   671                           	callstack 0
   672   000016                     ___lwdiv@quotient:
   673                           	callstack 0
   674   000016                     memset@n:
   675                           	callstack 0
   676                           
   677                           ; 2 bytes @ 0x15
   678   000016                     	ds	1
   679   000017                     ??_ADC_Initialize:
   680   000017                     ADC_Select_Channel@channel:
   681                           	callstack 0
   682   000017                     ___awdiv@sign:
   683                           	callstack 0
   684   000017                     ___awmod@sign:
   685                           	callstack 0
   686                           
   687                           ; 1 bytes @ 0x16
   688   000017                     	ds	1
   689   000018                     ??_memset:
   690   000018                     ??_ADC_Select_Channel:
   691   000018                     ?_abs:
   692                           	callstack 0
   693   000018                     ___lwdiv@counter:
   694                           	callstack 0
   695   000018                     ___awdiv@quotient:
   696                           	callstack 0
   697   000018                     abs@a:
   698                           	callstack 0
   699                           
   700                           ; 2 bytes @ 0x17
   701   000018                     	ds	1
   702   000019                     ADC_StartConversion_Interrupt@Adc_:
   703                           	callstack 0
   704                           
   705                           ; 2 bytes @ 0x18
   706   000019                     	ds	1
   707   00001A                     ??_abs:
   708   00001A                     ___xxtofl@sign:
   709                           	callstack 0
   710   00001A                     dc_motor_initialize@motor_config:
   711                           	callstack 0
   712   00001A                     memset@k:
   713                           	callstack 0
   714                           
   715                           ; 2 bytes @ 0x19
   716   00001A                     	ds	1
   717   00001B                     ADC_StartConversion_Interrupt@channel:
   718                           	callstack 0
   719   00001B                     ___xxtofl@exp:
   720                           	callstack 0
   721   00001B                     enable_pin_4bits@lcd:
   722                           	callstack 0
   723   00001B                     send_4bits@lcd:
   724                           	callstack 0
   725   00001B                     dc_motor_move_forward@motor_config:
   726                           	callstack 0
   727   00001B                     dc_motor_stop@motor_config:
   728                           	callstack 0
   729   00001B                     gpio_pin_intialize@str:
   730                           	callstack 0
   731   00001B                     fputs@s:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0x1A
   735   00001B                     	ds	1
   736   00001C                     dc_motor_initialize@ret:
   737                           	callstack 0
   738   00001C                     ADC_StartConversion_Interrupt@ret:
   739                           	callstack 0
   740   00001C                     memset@s:
   741                           	callstack 0
   742   00001C                     ___xxtofl@arg:
   743                           	callstack 0
   744                           
   745                           ; 4 bytes @ 0x1B
   746   00001C                     	ds	1
   747   00001D                     ??_gpio_pin_intialize:
   748   00001D                     ??_enable_pin_4bits:
   749   00001D                     send_4bits@command:
   750                           	callstack 0
   751   00001D                     dc_motor_move_forward@ret:
   752                           	callstack 0
   753   00001D                     dc_motor_stop@ret:
   754                           	callstack 0
   755   00001D                     fputs@fp:
   756                           	callstack 0
   757                           
   758                           ; 2 bytes @ 0x1C
   759   00001D                     	ds	1
   760   00001E                     enable_pin_4bits@ret:
   761                           	callstack 0
   762   00001E                     send_4bits@counter:
   763                           	callstack 0
   764   00001E                     gpio_pin_intialize@ret:
   765                           	callstack 0
   766                           
   767                           ; 1 bytes @ 0x1D
   768   00001E                     	ds	1
   769   00001F                     send_4bits@ret:
   770                           	callstack 0
   771   00001F                     fputs@c:
   772                           	callstack 0
   773                           
   774                           ; 1 bytes @ 0x1E
   775   00001F                     	ds	1
   776   000020                     ?___flmul:
   777                           	callstack 0
   778   000020                     lcd_4bits_send_command@lcd:
   779                           	callstack 0
   780   000020                     lcd_4bits_send_char@lcd:
   781                           	callstack 0
   782   000020                     fputs@i:
   783                           	callstack 0
   784   000020                     ___flmul@b:
   785                           	callstack 0
   786                           
   787                           ; 4 bytes @ 0x1F
   788   000020                     	ds	2
   789   000022                     lcd_4bits_send_command@command:
   790                           	callstack 0
   791   000022                     lcd_4bits_send_char@data:
   792                           	callstack 0
   793   000022                     pad@fp:
   794                           	callstack 0
   795                           
   796                           ; 2 bytes @ 0x21
   797   000022                     	ds	1
   798   000023                     lcd_4bits_send_command@ret:
   799                           	callstack 0
   800   000023                     lcd_4bits_send_char@ret:
   801                           	callstack 0
   802                           
   803                           ; 1 bytes @ 0x22
   804   000023                     	ds	1
   805   000024                     lcd_4bits_initialze@lcd:
   806                           	callstack 0
   807   000024                     lcd_4bits_send_string@lcd:
   808                           	callstack 0
   809   000024                     lcd_4bits_set_cursor@lcd:
   810                           	callstack 0
   811   000024                     pad@buf:
   812                           	callstack 0
   813   000024                     ___flmul@a:
   814                           	callstack 0
   815                           
   816                           ; 4 bytes @ 0x23
   817   000024                     	ds	2
   818   000026                     ??_lcd_4bits_initialze:
   819   000026                     lcd_4bits_set_cursor@ROW:
   820                           	callstack 0
   821   000026                     lcd_4bits_send_string@data:
   822                           	callstack 0
   823   000026                     pad@p:
   824                           	callstack 0
   825                           
   826                           ; 2 bytes @ 0x25
   827   000026                     	ds	1
   828   000027                     lcd_4bits_initialze@counter:
   829                           	callstack 0
   830   000027                     lcd_4bits_set_cursor@COLUMN:
   831                           	callstack 0
   832                           
   833                           ; 1 bytes @ 0x26
   834   000027                     	ds	1
   835   000028                     ??_lcd_4bits_set_cursor:
   836   000028                     ??___flmul:
   837   000028                     ??_pad:
   838   000028                     lcd_4bits_initialze@ret:
   839                           	callstack 0
   840   000028                     lcd_4bits_send_string@ret:
   841                           	callstack 0
   842                           
   843                           ; 1 bytes @ 0x27
   844   000028                     	ds	1
   845   000029                     pad@i:
   846                           	callstack 0
   847                           
   848                           ; 2 bytes @ 0x28
   849   000029                     	ds	1
   850   00002A                     lcd_4bits_send_string_pos@lcd:
   851                           	callstack 0
   852                           
   853                           ; 2 bytes @ 0x29
   854   00002A                     	ds	1
   855   00002B                     pad@w:
   856                           	callstack 0
   857                           
   858                           ; 2 bytes @ 0x2A
   859   00002B                     	ds	1
   860   00002C                     ___flmul@sign:
   861                           	callstack 0
   862   00002C                     lcd_4bits_send_string_pos@data:
   863                           	callstack 0
   864                           
   865                           ; 2 bytes @ 0x2B
   866   00002C                     	ds	1
   867   00002D                     dtoa@fp:
   868                           	callstack 0
   869   00002D                     ___flmul@grs:
   870                           	callstack 0
   871                           
   872                           ; 4 bytes @ 0x2C
   873   00002D                     	ds	1
   874   00002E                     lcd_4bits_send_string_pos@ROW:
   875                           	callstack 0
   876                           
   877                           ; 1 bytes @ 0x2D
   878   00002E                     	ds	1
   879   00002F                     lcd_4bits_send_string_pos@COLUMN:
   880                           	callstack 0
   881   00002F                     dtoa@d:
   882                           	callstack 0
   883                           
   884                           ; 2 bytes @ 0x2E
   885   00002F                     	ds	1
   886   000030                     lcd_4bits_send_string_pos@ret:
   887                           	callstack 0
   888                           
   889                           ; 1 bytes @ 0x2F
   890   000030                     	ds	1
   891   000031                     ___flmul@aexp:
   892                           	callstack 0
   893   000031                     _dtoa$2832:
   894                           	callstack 0
   895                           
   896                           ; 2 bytes @ 0x30
   897   000031                     	ds	1
   898   000032                     ___flmul@bexp:
   899                           	callstack 0
   900                           
   901                           ; 1 bytes @ 0x31
   902   000032                     	ds	1
   903   000033                     dtoa@p:
   904                           	callstack 0
   905   000033                     ___flmul@prod:
   906                           	callstack 0
   907                           
   908                           ; 4 bytes @ 0x32
   909   000033                     	ds	2
   910   000035                     dtoa@w:
   911                           	callstack 0
   912                           
   913                           ; 2 bytes @ 0x34
   914   000035                     	ds	2
   915   000037                     dtoa@s:
   916                           	callstack 0
   917   000037                     ___flmul@temp:
   918                           	callstack 0
   919                           
   920                           ; 2 bytes @ 0x36
   921   000037                     	ds	1
   922   000038                     dtoa@i:
   923                           	callstack 0
   924                           
   925                           ; 2 bytes @ 0x37
   926   000038                     	ds	1
   927   000039                     ?___fltol:
   928                           	callstack 0
   929   000039                     ___fltol@f1:
   930                           	callstack 0
   931                           
   932                           ; 4 bytes @ 0x38
   933   000039                     	ds	1
   934   00003A                     vfpfcnvrt@fp:
   935                           	callstack 0
   936                           
   937                           ; 2 bytes @ 0x39
   938   00003A                     	ds	2
   939   00003C                     vfpfcnvrt@fmt:
   940                           	callstack 0
   941                           
   942                           ; 2 bytes @ 0x3B
   943   00003C                     	ds	1
   944   00003D                     ??___fltol:
   945                           
   946                           ; 1 bytes @ 0x3C
   947   00003D                     	ds	1
   948   00003E                     vfpfcnvrt@ap:
   949                           	callstack 0
   950                           
   951                           ; 2 bytes @ 0x3D
   952   00003E                     	ds	2
   953   000040                     ??_vfpfcnvrt:
   954                           
   955                           ; 1 bytes @ 0x3F
   956   000040                     	ds	1
   957   000041                     ___fltol@sign1:
   958                           	callstack 0
   959                           
   960                           ; 1 bytes @ 0x40
   961   000041                     	ds	1
   962   000042                     ___fltol@exp1:
   963                           	callstack 0
   964   000042                     vfpfcnvrt@convarg:
   965                           	callstack 0
   966                           
   967                           ; 4 bytes @ 0x41
   968   000042                     	ds	4
   969   000046                     vfpfcnvrt@cp:
   970                           	callstack 0
   971                           
   972                           ; 2 bytes @ 0x45
   973   000046                     	ds	2
   974   000048                     ?_vfprintf:
   975                           	callstack 0
   976   000048                     vfprintf@fp:
   977                           	callstack 0
   978                           
   979                           ; 2 bytes @ 0x47
   980   000048                     	ds	2
   981   00004A                     vfprintf@fmt:
   982                           	callstack 0
   983                           
   984                           ; 2 bytes @ 0x49
   985   00004A                     	ds	2
   986   00004C                     vfprintf@ap:
   987                           	callstack 0
   988                           
   989                           ; 2 bytes @ 0x4B
   990   00004C                     	ds	2
   991   00004E                     vfprintf@cfmt:
   992                           	callstack 0
   993                           
   994                           ; 2 bytes @ 0x4D
   995   00004E                     	ds	2
   996   000050                     ?_sprintf:
   997                           	callstack 0
   998   000050                     sprintf@s:
   999                           	callstack 0
  1000                           
  1001                           ; 2 bytes @ 0x4F
  1002   000050                     	ds	2
  1003   000052                     sprintf@fmt:
  1004                           	callstack 0
  1005                           
  1006                           ; 2 bytes @ 0x51
  1007   000052                     	ds	6
  1008   000058                     
  1009                           ; 1 bytes @ 0x57
  1010 ;;
  1011 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1012 ;;
  1013 ;; *************** function _main *****************
  1014 ;; Defined at:
  1015 ;;		line 91 in file "Application.c"
  1016 ;; Parameters:    Size  Location     Type
  1017 ;;		None
  1018 ;; Auto vars:     Size  Location     Type
  1019 ;;		None
  1020 ;; Return value:  Size  Location     Type
  1021 ;;                  2  944[None  ] int 
  1022 ;; Registers used:
  1023 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1024 ;; Tracked objects:
  1025 ;;		On entry : 0/0
  1026 ;;		On exit  : 0/0
  1027 ;;		Unchanged: 0/0
  1028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1033 ;;Total ram usage:        0 bytes
  1034 ;; Hardware stack levels required when called: 15
  1035 ;; This function calls:
  1036 ;;		_ADC_Initialize
  1037 ;;		_ADC_StartConversion_Interrupt
  1038 ;;		___flmul
  1039 ;;		___fltol
  1040 ;;		___lwdiv
  1041 ;;		___xxtofl
  1042 ;;		_dc_motor_initialize
  1043 ;;		_dc_motor_move_forward
  1044 ;;		_dc_motor_stop
  1045 ;;		_lcd_4bits_initialze
  1046 ;;		_lcd_4bits_send_string_pos
  1047 ;;		_number_16bit_to_string
  1048 ;; This function is called by:
  1049 ;;		Startup code after reset
  1050 ;; This function uses a non-reentrant model
  1051 ;;
  1052                           
  1053                           	psect	text0
  1054   001720                     __ptext0:
  1055                           	callstack 0
  1056   001720                     _main:
  1057                           	callstack 16
  1058   001720                     
  1059                           ;Application.c: 93:     ret = ADC_Initialize(&ADC_1);
  1060   001720  0EA6               	movlw	low _ADC_1
  1061   001722  6E15               	movwf	ADC_Initialize@Adc_^0,c
  1062   001724  0E00               	movlw	high _ADC_1
  1063   001726  6E16               	movwf	(ADC_Initialize@Adc_+1)^0,c
  1064   001728  EC90  F011         	call	_ADC_Initialize	;wreg free
  1065   00172C  0100               	movlb	0	; () banked
  1066   00172E  6FFF               	movwf	_ret& (0+255),b
  1067   001730                     
  1068                           ; BSR set to: 0
  1069                           ;Application.c: 94:     ret = lcd_4bits_initialze(&lcd_1);
  1070   001730  0EAD               	movlw	low _lcd_1
  1071   001732  6E24               	movwf	lcd_4bits_initialze@lcd^0,c
  1072   001734  0E00               	movlw	high _lcd_1
  1073   001736  6E25               	movwf	(lcd_4bits_initialze@lcd+1)^0,c
  1074   001738  ECE1  F00F         	call	_lcd_4bits_initialze	;wreg free
  1075   00173C  0100               	movlb	0	; () banked
  1076   00173E  6FFF               	movwf	_ret& (0+255),b
  1077   001740                     
  1078                           ; BSR set to: 0
  1079                           ;Application.c: 95:     ret = dc_motor_initialize(&moto_1);
  1080   001740  0EB5               	movlw	low _moto_1
  1081   001742  6E1A               	movwf	dc_motor_initialize@motor_config^0,c
  1082   001744  0E00               	movlw	high _moto_1
  1083   001746  6E1B               	movwf	(dc_motor_initialize@motor_config+1)^0,c
  1084   001748  ECA6  F018         	call	_dc_motor_initialize	;wreg free
  1085   00174C  0100               	movlb	0	; () banked
  1086   00174E  6FFF               	movwf	_ret& (0+255),b
  1087   001750                     
  1088                           ; BSR set to: 0
  1089                           ;Application.c: 96:     ret = dc_motor_initialize(&moto_2);
  1090   001750  0EB3               	movlw	low _moto_2
  1091   001752  6E1A               	movwf	dc_motor_initialize@motor_config^0,c
  1092   001754  0E00               	movlw	high _moto_2
  1093   001756  6E1B               	movwf	(dc_motor_initialize@motor_config+1)^0,c
  1094   001758  ECA6  F018         	call	_dc_motor_initialize	;wreg free
  1095   00175C  0100               	movlb	0	; () banked
  1096   00175E  6FFF               	movwf	_ret& (0+255),b
  1097   001760                     l6675:
  1098                           
  1099                           ; BSR set to: 0
  1100                           ;Application.c: 101:         if(0 == Prog_counter){
  1101   001760  505D               	movf	_Prog_counter^0,w,c	;volatile
  1102   001762  A4D8               	btfss	status,2,c
  1103   001764  EFB6  F00B         	goto	u6271
  1104   001768  EFB8  F00B         	goto	u6270
  1105   00176C                     u6271:
  1106   00176C  EFC4  F00B         	goto	l6679
  1107   001770                     u6270:
  1108   001770                     
  1109                           ; BSR set to: 0
  1110                           ;Application.c: 102:             ret = ADC_StartConversion_Interrupt(&ADC_1 , AN0_CHANNE
      +                          L);
  1111   001770  0EA6               	movlw	low _ADC_1
  1112   001772  6E19               	movwf	ADC_StartConversion_Interrupt@Adc_^0,c
  1113   001774  0E00               	movlw	high _ADC_1
  1114   001776  6E1A               	movwf	(ADC_StartConversion_Interrupt@Adc_+1)^0,c
  1115   001778  0E00               	movlw	0
  1116   00177A  6E1B               	movwf	ADC_StartConversion_Interrupt@channel^0,c
  1117   00177C  ECC5  F018         	call	_ADC_StartConversion_Interrupt	;wreg free
  1118   001780  0100               	movlb	0	; () banked
  1119   001782  6FFF               	movwf	_ret& (0+255),b
  1120                           
  1121                           ;Application.c: 103:         }
  1122   001784  EFD6  F00B         	goto	l6683
  1123   001788                     l6679:
  1124                           
  1125                           ; BSR set to: 0
  1126   001788  045D               	decf	_Prog_counter^0,w,c	;volatile
  1127   00178A  A4D8               	btfss	status,2,c
  1128   00178C  EFCA  F00B         	goto	u6281
  1129   001790  EFCC  F00B         	goto	u6280
  1130   001794                     u6281:
  1131   001794  EFD6  F00B         	goto	l6683
  1132   001798                     u6280:
  1133   001798                     
  1134                           ; BSR set to: 0
  1135                           ;Application.c: 105:             ret = ADC_StartConversion_Interrupt(&ADC_1 , AN1_CHANNE
      +                          L);
  1136   001798  0EA6               	movlw	low _ADC_1
  1137   00179A  6E19               	movwf	ADC_StartConversion_Interrupt@Adc_^0,c
  1138   00179C  0E00               	movlw	high _ADC_1
  1139   00179E  6E1A               	movwf	(ADC_StartConversion_Interrupt@Adc_+1)^0,c
  1140   0017A0  0E01               	movlw	1
  1141   0017A2  6E1B               	movwf	ADC_StartConversion_Interrupt@channel^0,c
  1142   0017A4  ECC5  F018         	call	_ADC_StartConversion_Interrupt	;wreg free
  1143   0017A8  0100               	movlb	0	; () banked
  1144   0017AA  6FFF               	movwf	_ret& (0+255),b
  1145   0017AC                     l6683:
  1146                           
  1147                           ; BSR set to: 0
  1148                           ;Application.c: 107:         TEMP_1 = ADC_1_Result * 4.88f;
  1149   0017AC  0EF6               	movlw	246
  1150   0017AE  6E24               	movwf	___flmul@a^0,c
  1151   0017B0  0E28               	movlw	40
  1152   0017B2  6E25               	movwf	(___flmul@a+1)^0,c
  1153   0017B4  0E9C               	movlw	156
  1154   0017B6  6E26               	movwf	(___flmul@a+2)^0,c
  1155   0017B8  0E40               	movlw	64
  1156   0017BA  6E27               	movwf	(___flmul@a+3)^0,c
  1157   0017BC  C067  F012         	movff	_ADC_1_Result,___xxtofl@val	;volatile
  1158   0017C0  C068  F013         	movff	_ADC_1_Result+1,___xxtofl@val+1	;volatile
  1159   0017C4  6A14               	clrf	(___xxtofl@val+2)^0,c
  1160   0017C6  6A15               	clrf	(___xxtofl@val+3)^0,c
  1161   0017C8  0E00               	movlw	0
  1162   0017CA  ECEB  F00C         	call	___xxtofl
  1163   0017CE  C012  F020         	movff	?___xxtofl,___flmul@b
  1164   0017D2  C013  F021         	movff	?___xxtofl+1,___flmul@b+1
  1165   0017D6  C014  F022         	movff	?___xxtofl+2,___flmul@b+2
  1166   0017DA  C015  F023         	movff	?___xxtofl+3,___flmul@b+3
  1167   0017DE  EC18  F008         	call	___flmul	;wreg free
  1168   0017E2  C020  F039         	movff	?___flmul,___fltol@f1
  1169   0017E6  C021  F03A         	movff	?___flmul+1,___fltol@f1+1
  1170   0017EA  C022  F03B         	movff	?___flmul+2,___fltol@f1+2
  1171   0017EE  C023  F03C         	movff	?___flmul+3,___fltol@f1+3
  1172   0017F2  EC1F  F012         	call	___fltol	;wreg free
  1173   0017F6  C039  F05A         	movff	?___fltol,_TEMP_1	;volatile
  1174   0017FA  C03A  F05B         	movff	?___fltol+1,_TEMP_1+1	;volatile
  1175   0017FE                     
  1176                           ;Application.c: 108:         TEMP_1 /= 10;
  1177   0017FE  C05A  F012         	movff	_TEMP_1,___lwdiv@dividend	;volatile
  1178   001802  C05B  F013         	movff	_TEMP_1+1,___lwdiv@dividend+1	;volatile
  1179   001806  0E00               	movlw	0
  1180   001808  6E15               	movwf	(___lwdiv@divisor+1)^0,c
  1181   00180A  0E0A               	movlw	10
  1182   00180C  6E14               	movwf	___lwdiv@divisor^0,c
  1183   00180E  EC7B  F016         	call	___lwdiv	;wreg free
  1184   001812  C012  F05A         	movff	?___lwdiv,_TEMP_1	;volatile
  1185   001816  C013  F05B         	movff	?___lwdiv+1,_TEMP_1+1	;volatile
  1186                           
  1187                           ;Application.c: 110:         TEMP_2 = ADC_2_Result * 4.88f;
  1188   00181A  0EF6               	movlw	246
  1189   00181C  6E24               	movwf	___flmul@a^0,c
  1190   00181E  0E28               	movlw	40
  1191   001820  6E25               	movwf	(___flmul@a+1)^0,c
  1192   001822  0E9C               	movlw	156
  1193   001824  6E26               	movwf	(___flmul@a+2)^0,c
  1194   001826  0E40               	movlw	64
  1195   001828  6E27               	movwf	(___flmul@a+3)^0,c
  1196   00182A  C065  F012         	movff	_ADC_2_Result,___xxtofl@val	;volatile
  1197   00182E  C066  F013         	movff	_ADC_2_Result+1,___xxtofl@val+1	;volatile
  1198   001832  6A14               	clrf	(___xxtofl@val+2)^0,c
  1199   001834  6A15               	clrf	(___xxtofl@val+3)^0,c
  1200   001836  0E00               	movlw	0
  1201   001838  ECEB  F00C         	call	___xxtofl
  1202   00183C  C012  F020         	movff	?___xxtofl,___flmul@b
  1203   001840  C013  F021         	movff	?___xxtofl+1,___flmul@b+1
  1204   001844  C014  F022         	movff	?___xxtofl+2,___flmul@b+2
  1205   001848  C015  F023         	movff	?___xxtofl+3,___flmul@b+3
  1206   00184C  EC18  F008         	call	___flmul	;wreg free
  1207   001850  C020  F039         	movff	?___flmul,___fltol@f1
  1208   001854  C021  F03A         	movff	?___flmul+1,___fltol@f1+1
  1209   001858  C022  F03B         	movff	?___flmul+2,___fltol@f1+2
  1210   00185C  C023  F03C         	movff	?___flmul+3,___fltol@f1+3
  1211   001860  EC1F  F012         	call	___fltol	;wreg free
  1212   001864  C039  F058         	movff	?___fltol,_TEMP_2	;volatile
  1213   001868  C03A  F059         	movff	?___fltol+1,_TEMP_2+1	;volatile
  1214   00186C                     
  1215                           ;Application.c: 111:         TEMP_2 /= 10;
  1216   00186C  C058  F012         	movff	_TEMP_2,___lwdiv@dividend	;volatile
  1217   001870  C059  F013         	movff	_TEMP_2+1,___lwdiv@dividend+1	;volatile
  1218   001874  0E00               	movlw	0
  1219   001876  6E15               	movwf	(___lwdiv@divisor+1)^0,c
  1220   001878  0E0A               	movlw	10
  1221   00187A  6E14               	movwf	___lwdiv@divisor^0,c
  1222   00187C  EC7B  F016         	call	___lwdiv	;wreg free
  1223   001880  C012  F058         	movff	?___lwdiv,_TEMP_2	;volatile
  1224   001884  C013  F059         	movff	?___lwdiv+1,_TEMP_2+1	;volatile
  1225   001888                     
  1226                           ;Application.c: 113:         ret = number_16bit_to_string(TEMP_1 , TEMP_1_txt);
  1227   001888  C05A  F0F3         	movff	_TEMP_1,number_16bit_to_string@value	;volatile
  1228   00188C  C05B  F0F4         	movff	_TEMP_1+1,number_16bit_to_string@value+1	;volatile
  1229   001890  0EDF               	movlw	low _TEMP_1_txt
  1230   001892  0100               	movlb	0	; () banked
  1231   001894  6FF5               	movwf	number_16bit_to_string@str& (0+255),b
  1232   001896  0E00               	movlw	high _TEMP_1_txt
  1233   001898  6FF6               	movwf	(number_16bit_to_string@str+1)& (0+255),b
  1234   00189A  ECD5  F013         	call	_number_16bit_to_string	;wreg free
  1235   00189E  0100               	movlb	0	; () banked
  1236   0018A0  6FFF               	movwf	_ret& (0+255),b
  1237   0018A2                     
  1238                           ; BSR set to: 0
  1239                           ;Application.c: 114:         ret = number_16bit_to_string(TEMP_2 , TEMP_2_txt);
  1240   0018A2  C058  F0F3         	movff	_TEMP_2,number_16bit_to_string@value	;volatile
  1241   0018A6  C059  F0F4         	movff	_TEMP_2+1,number_16bit_to_string@value+1	;volatile
  1242   0018AA  0ED9               	movlw	low _TEMP_2_txt
  1243   0018AC  6FF5               	movwf	number_16bit_to_string@str& (0+255),b
  1244   0018AE  0E00               	movlw	high _TEMP_2_txt
  1245   0018B0  6FF6               	movwf	(number_16bit_to_string@str+1)& (0+255),b
  1246   0018B2  ECD5  F013         	call	_number_16bit_to_string	;wreg free
  1247   0018B6  0100               	movlb	0	; () banked
  1248   0018B8  6FFF               	movwf	_ret& (0+255),b
  1249   0018BA                     
  1250                           ; BSR set to: 0
  1251                           ;Application.c: 116:         ret = lcd_4bits_send_string_pos(&lcd_1 , "ADC_TEST" , 1 ,7)
      +                          ;
  1252   0018BA  0EAD               	movlw	low _lcd_1
  1253   0018BC  6E2A               	movwf	lcd_4bits_send_string_pos@lcd^0,c
  1254   0018BE  0E00               	movlw	high _lcd_1
  1255   0018C0  6E2B               	movwf	(lcd_4bits_send_string_pos@lcd+1)^0,c
  1256   0018C2  0E11               	movlw	low STR_4
  1257   0018C4  6E2C               	movwf	lcd_4bits_send_string_pos@data^0,c
  1258   0018C6  0E10               	movlw	high STR_4
  1259   0018C8  6E2D               	movwf	(lcd_4bits_send_string_pos@data+1)^0,c
  1260   0018CA  0E01               	movlw	1
  1261   0018CC  6E2E               	movwf	lcd_4bits_send_string_pos@ROW^0,c
  1262   0018CE  0E07               	movlw	7
  1263   0018D0  6E2F               	movwf	lcd_4bits_send_string_pos@COLUMN^0,c
  1264   0018D2  ECFA  F017         	call	_lcd_4bits_send_string_pos	;wreg free
  1265   0018D6  0100               	movlb	0	; () banked
  1266   0018D8  6FFF               	movwf	_ret& (0+255),b
  1267   0018DA                     
  1268                           ; BSR set to: 0
  1269                           ;Application.c: 117:         ret = lcd_4bits_send_string_pos(&lcd_1 , "TEMP_1" , 2 ,1);
  1270   0018DA  0EAD               	movlw	low _lcd_1
  1271   0018DC  6E2A               	movwf	lcd_4bits_send_string_pos@lcd^0,c
  1272   0018DE  0E00               	movlw	high _lcd_1
  1273   0018E0  6E2B               	movwf	(lcd_4bits_send_string_pos@lcd+1)^0,c
  1274   0018E2  0E1A               	movlw	low STR_5
  1275   0018E4  6E2C               	movwf	lcd_4bits_send_string_pos@data^0,c
  1276   0018E6  0E10               	movlw	high STR_5
  1277   0018E8  6E2D               	movwf	(lcd_4bits_send_string_pos@data+1)^0,c
  1278   0018EA  0E02               	movlw	2
  1279   0018EC  6E2E               	movwf	lcd_4bits_send_string_pos@ROW^0,c
  1280   0018EE  0E01               	movlw	1
  1281   0018F0  6E2F               	movwf	lcd_4bits_send_string_pos@COLUMN^0,c
  1282   0018F2  ECFA  F017         	call	_lcd_4bits_send_string_pos	;wreg free
  1283   0018F6  0100               	movlb	0	; () banked
  1284   0018F8  6FFF               	movwf	_ret& (0+255),b
  1285   0018FA                     
  1286                           ; BSR set to: 0
  1287                           ;Application.c: 118:         ret = lcd_4bits_send_string_pos(&lcd_1 , "TEMP_2" , 3 ,1);
  1288   0018FA  0EAD               	movlw	low _lcd_1
  1289   0018FC  6E2A               	movwf	lcd_4bits_send_string_pos@lcd^0,c
  1290   0018FE  0E00               	movlw	high _lcd_1
  1291   001900  6E2B               	movwf	(lcd_4bits_send_string_pos@lcd+1)^0,c
  1292   001902  0E21               	movlw	low STR_6
  1293   001904  6E2C               	movwf	lcd_4bits_send_string_pos@data^0,c
  1294   001906  0E10               	movlw	high STR_6
  1295   001908  6E2D               	movwf	(lcd_4bits_send_string_pos@data+1)^0,c
  1296   00190A  0E03               	movlw	3
  1297   00190C  6E2E               	movwf	lcd_4bits_send_string_pos@ROW^0,c
  1298   00190E  0E01               	movlw	1
  1299   001910  6E2F               	movwf	lcd_4bits_send_string_pos@COLUMN^0,c
  1300   001912  ECFA  F017         	call	_lcd_4bits_send_string_pos	;wreg free
  1301   001916  0100               	movlb	0	; () banked
  1302   001918  6FFF               	movwf	_ret& (0+255),b
  1303   00191A                     
  1304                           ; BSR set to: 0
  1305                           ;Application.c: 120:         ret = lcd_4bits_send_string_pos(&lcd_1 , TEMP_1_txt , 2 ,8)
      +                          ;
  1306   00191A  0EAD               	movlw	low _lcd_1
  1307   00191C  6E2A               	movwf	lcd_4bits_send_string_pos@lcd^0,c
  1308   00191E  0E00               	movlw	high _lcd_1
  1309   001920  6E2B               	movwf	(lcd_4bits_send_string_pos@lcd+1)^0,c
  1310   001922  0EDF               	movlw	low _TEMP_1_txt
  1311   001924  6E2C               	movwf	lcd_4bits_send_string_pos@data^0,c
  1312   001926  0E00               	movlw	high _TEMP_1_txt
  1313   001928  6E2D               	movwf	(lcd_4bits_send_string_pos@data+1)^0,c
  1314   00192A  0E02               	movlw	2
  1315   00192C  6E2E               	movwf	lcd_4bits_send_string_pos@ROW^0,c
  1316   00192E  0E08               	movlw	8
  1317   001930  6E2F               	movwf	lcd_4bits_send_string_pos@COLUMN^0,c
  1318   001932  ECFA  F017         	call	_lcd_4bits_send_string_pos	;wreg free
  1319   001936  0100               	movlb	0	; () banked
  1320   001938  6FFF               	movwf	_ret& (0+255),b
  1321   00193A                     
  1322                           ; BSR set to: 0
  1323                           ;Application.c: 121:         ret = lcd_4bits_send_string_pos(&lcd_1 , TEMP_2_txt , 3 ,8)
      +                          ;
  1324   00193A  0EAD               	movlw	low _lcd_1
  1325   00193C  6E2A               	movwf	lcd_4bits_send_string_pos@lcd^0,c
  1326   00193E  0E00               	movlw	high _lcd_1
  1327   001940  6E2B               	movwf	(lcd_4bits_send_string_pos@lcd+1)^0,c
  1328   001942  0ED9               	movlw	low _TEMP_2_txt
  1329   001944  6E2C               	movwf	lcd_4bits_send_string_pos@data^0,c
  1330   001946  0E00               	movlw	high _TEMP_2_txt
  1331   001948  6E2D               	movwf	(lcd_4bits_send_string_pos@data+1)^0,c
  1332   00194A  0E03               	movlw	3
  1333   00194C  6E2E               	movwf	lcd_4bits_send_string_pos@ROW^0,c
  1334   00194E  0E08               	movlw	8
  1335   001950  6E2F               	movwf	lcd_4bits_send_string_pos@COLUMN^0,c
  1336   001952  ECFA  F017         	call	_lcd_4bits_send_string_pos	;wreg free
  1337   001956  0100               	movlb	0	; () banked
  1338   001958  6FFF               	movwf	_ret& (0+255),b
  1339   00195A                     
  1340                           ; BSR set to: 0
  1341                           ;Application.c: 123:         if(TEMP_1 > 20){
  1342   00195A  505B               	movf	(_TEMP_1+1)^0,w,c	;volatile
  1343   00195C  E109               	bnz	u6290
  1344   00195E  0E15               	movlw	21
  1345   001960  5C5A               	subwf	_TEMP_1^0,w,c	;volatile
  1346   001962  A0D8               	btfss	status,0,c
  1347   001964  EFB6  F00C         	goto	u6291
  1348   001968  EFB8  F00C         	goto	u6290
  1349   00196C                     u6291:
  1350   00196C  EFC2  F00C         	goto	l6707
  1351   001970                     u6290:
  1352   001970                     
  1353                           ; BSR set to: 0
  1354                           ;Application.c: 124:             ret = dc_motor_move_forward(&moto_1);
  1355   001970  0EB5               	movlw	low _moto_1
  1356   001972  6E1B               	movwf	dc_motor_move_forward@motor_config^0,c
  1357   001974  0E00               	movlw	high _moto_1
  1358   001976  6E1C               	movwf	(dc_motor_move_forward@motor_config+1)^0,c
  1359   001978  EC41  F018         	call	_dc_motor_move_forward	;wreg free
  1360   00197C  0100               	movlb	0	; () banked
  1361   00197E  6FFF               	movwf	_ret& (0+255),b
  1362                           
  1363                           ;Application.c: 125:         }
  1364   001980  EFCA  F00C         	goto	l6709
  1365   001984                     l6707:
  1366                           
  1367                           ; BSR set to: 0
  1368                           ;Application.c: 127:             ret = dc_motor_stop(&moto_1);
  1369   001984  0EB5               	movlw	low _moto_1
  1370   001986  6E1B               	movwf	dc_motor_stop@motor_config^0,c
  1371   001988  0E00               	movlw	high _moto_1
  1372   00198A  6E1C               	movwf	(dc_motor_stop@motor_config+1)^0,c
  1373   00198C  EC1E  F018         	call	_dc_motor_stop	;wreg free
  1374   001990  0100               	movlb	0	; () banked
  1375   001992  6FFF               	movwf	_ret& (0+255),b
  1376   001994                     l6709:
  1377                           
  1378                           ; BSR set to: 0
  1379                           ;Application.c: 129:         if(TEMP_2 < 19){
  1380   001994  5059               	movf	(_TEMP_2+1)^0,w,c	;volatile
  1381   001996  E107               	bnz	u6301
  1382   001998  0E13               	movlw	19
  1383   00199A  5C58               	subwf	_TEMP_2^0,w,c	;volatile
  1384   00199C  B0D8               	btfsc	status,0,c
  1385   00199E  EFD3  F00C         	goto	u6301
  1386   0019A2  EFD5  F00C         	goto	u6300
  1387   0019A6                     u6301:
  1388   0019A6  EFDF  F00C         	goto	l6713
  1389   0019AA                     u6300:
  1390   0019AA                     
  1391                           ; BSR set to: 0
  1392                           ;Application.c: 130:             ret = dc_motor_move_forward(&moto_2);
  1393   0019AA  0EB3               	movlw	low _moto_2
  1394   0019AC  6E1B               	movwf	dc_motor_move_forward@motor_config^0,c
  1395   0019AE  0E00               	movlw	high _moto_2
  1396   0019B0  6E1C               	movwf	(dc_motor_move_forward@motor_config+1)^0,c
  1397   0019B2  EC41  F018         	call	_dc_motor_move_forward	;wreg free
  1398   0019B6  0100               	movlb	0	; () banked
  1399   0019B8  6FFF               	movwf	_ret& (0+255),b
  1400                           
  1401                           ;Application.c: 131:         }
  1402   0019BA  EFB0  F00B         	goto	l6675
  1403   0019BE                     l6713:
  1404                           
  1405                           ; BSR set to: 0
  1406                           ;Application.c: 133:             ret = dc_motor_stop(&moto_2);
  1407   0019BE  0EB3               	movlw	low _moto_2
  1408   0019C0  6E1B               	movwf	dc_motor_stop@motor_config^0,c
  1409   0019C2  0E00               	movlw	high _moto_2
  1410   0019C4  6E1C               	movwf	(dc_motor_stop@motor_config+1)^0,c
  1411   0019C6  EC1E  F018         	call	_dc_motor_stop	;wreg free
  1412   0019CA  0100               	movlb	0	; () banked
  1413   0019CC  6FFF               	movwf	_ret& (0+255),b
  1414   0019CE  EFB0  F00B         	goto	l6675
  1415   0019D2  EF5F  F000         	goto	start
  1416   0019D6                     __end_of_main:
  1417                           	callstack 0
  1418                           
  1419 ;; *************** function _number_16bit_to_string *****************
  1420 ;; Defined at:
  1421 ;;		line 370 in file "ECU_Layer/LCD/Lcd.c"
  1422 ;; Parameters:    Size  Location     Type
  1423 ;;  value           2   14[BANK0 ] unsigned short 
  1424 ;;  str             2   16[BANK0 ] PTR unsigned char 
  1425 ;;		 -> TEMP_2_txt(6), TEMP_1_txt(6), 
  1426 ;; Auto vars:     Size  Location     Type
  1427 ;;  Temp_String     6   18[BANK0 ] unsigned char [6]
  1428 ;;  DataCounter     1   25[BANK0 ] unsigned char 
  1429 ;;  ret             1   24[BANK0 ] unsigned char 
  1430 ;; Return value:  Size  Location     Type
  1431 ;;                  1    wreg      unsigned char 
  1432 ;; Registers used:
  1433 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1434 ;; Tracked objects:
  1435 ;;		On entry : 0/0
  1436 ;;		On exit  : 0/0
  1437 ;;		Unchanged: 0/0
  1438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1439 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1440 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1442 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1443 ;;Total ram usage:       12 bytes
  1444 ;; Hardware stack levels used: 1
  1445 ;; Hardware stack levels required when called: 14
  1446 ;; This function calls:
  1447 ;;		_memset
  1448 ;;		_sprintf
  1449 ;; This function is called by:
  1450 ;;		_main
  1451 ;; This function uses a non-reentrant model
  1452 ;;
  1453                           
  1454                           	psect	text1
  1455   0027AA                     __ptext1:
  1456                           	callstack 0
  1457   0027AA                     _number_16bit_to_string:
  1458                           	callstack 16
  1459   0027AA                     
  1460                           ;ECU_Layer/LCD/Lcd.c: 372: Std_ReturnType ret = (Std_ReturnType)0x01;
  1461   0027AA  0E01               	movlw	1
  1462   0027AC  0100               	movlb	0	; () banked
  1463   0027AE  6FFD               	movwf	number_16bit_to_string@ret& (0+255),b
  1464   0027B0                     
  1465                           ; BSR set to: 0
  1466                           ;ECU_Layer/LCD/Lcd.c: 373:     uint8 Temp_String[6] = {0};
  1467   0027B0  EE20  F0F7         	lfsr	2,number_16bit_to_string@Temp_String
  1468   0027B4  0E05               	movlw	5
  1469   0027B6                     u6241:
  1470   0027B6  6ADE               	clrf	postinc2,c
  1471   0027B8  06E8               	decf	wreg,f,c
  1472   0027BA  E2FD               	bc	u6241
  1473   0027BC                     
  1474                           ; BSR set to: 0
  1475                           ;ECU_Layer/LCD/Lcd.c: 374:     uint8 DataCounter = 0;
  1476   0027BC  0E00               	movlw	0
  1477   0027BE  6FFE               	movwf	number_16bit_to_string@DataCounter& (0+255),b
  1478   0027C0                     
  1479                           ; BSR set to: 0
  1480                           ;ECU_Layer/LCD/Lcd.c: 375:     if(((void*)0) == str){
  1481   0027C0  51F5               	movf	number_16bit_to_string@str& (0+255),w,b
  1482   0027C2  11F6               	iorwf	(number_16bit_to_string@str+1)& (0+255),w,b
  1483   0027C4  A4D8               	btfss	status,2,c
  1484   0027C6  EFE7  F013         	goto	u6251
  1485   0027CA  EFE9  F013         	goto	u6250
  1486   0027CE                     u6251:
  1487   0027CE  EFED  F013         	goto	l6635
  1488   0027D2                     u6250:
  1489   0027D2                     
  1490                           ; BSR set to: 0
  1491                           ;ECU_Layer/LCD/Lcd.c: 376:         ret = (Std_ReturnType)0x01;
  1492   0027D2  0E01               	movlw	1
  1493   0027D4  6FFD               	movwf	number_16bit_to_string@ret& (0+255),b
  1494                           
  1495                           ;ECU_Layer/LCD/Lcd.c: 377:     }
  1496   0027D6  EF31  F014         	goto	l6647
  1497   0027DA                     l6635:
  1498                           
  1499                           ; BSR set to: 0
  1500                           ;ECU_Layer/LCD/Lcd.c: 379:         memset(str, ' ', 5);
  1501   0027DA  C0F5  F012         	movff	number_16bit_to_string@str,memset@dest
  1502   0027DE  C0F6  F013         	movff	number_16bit_to_string@str+1,memset@dest+1
  1503   0027E2  0E00               	movlw	0
  1504   0027E4  6E15               	movwf	(memset@c+1)^0,c
  1505   0027E6  0E20               	movlw	32
  1506   0027E8  6E14               	movwf	memset@c^0,c
  1507   0027EA  0E00               	movlw	0
  1508   0027EC  6E17               	movwf	(memset@n+1)^0,c
  1509   0027EE  0E05               	movlw	5
  1510   0027F0  6E16               	movwf	memset@n^0,c
  1511   0027F2  EC90  F00E         	call	_memset	;wreg free
  1512   0027F6                     
  1513                           ;ECU_Layer/LCD/Lcd.c: 380:         str[5] = '\0';
  1514   0027F6  0100               	movlb	0	; () banked
  1515   0027F8  EE20 F005          	lfsr	2,5
  1516   0027FC  51F5               	movf	number_16bit_to_string@str& (0+255),w,b
  1517   0027FE  26D9               	addwf	fsr2l,f,c
  1518   002800  51F6               	movf	(number_16bit_to_string@str+1)& (0+255),w,b
  1519   002802  22DA               	addwfc	fsr2h,f,c
  1520   002804  6ADF               	clrf	indf2,c
  1521   002806                     
  1522                           ; BSR set to: 0
  1523                           ;ECU_Layer/LCD/Lcd.c: 381:         sprintf((char *)Temp_String, "%i", value);
  1524   002806  0EF7               	movlw	low number_16bit_to_string@Temp_String
  1525   002808  6E50               	movwf	sprintf@s^0,c
  1526   00280A  0E00               	movlw	high number_16bit_to_string@Temp_String
  1527   00280C  6E51               	movwf	(sprintf@s+1)^0,c
  1528   00280E  0E2B               	movlw	low STR_2
  1529   002810  6E52               	movwf	sprintf@fmt^0,c
  1530   002812  0E10               	movlw	high STR_2
  1531   002814  6E53               	movwf	(sprintf@fmt+1)^0,c
  1532   002816  C0F3  F054         	movff	number_16bit_to_string@value,?_sprintf+4
  1533   00281A  C0F4  F055         	movff	number_16bit_to_string@value+1,?_sprintf+5
  1534   00281E  ECAA  F017         	call	_sprintf	;wreg free
  1535                           
  1536                           ;ECU_Layer/LCD/Lcd.c: 382:         while(Temp_String[DataCounter] != '\0'){
  1537   002822  EF22  F014         	goto	l6645
  1538   002826                     l6641:
  1539                           
  1540                           ; BSR set to: 0
  1541                           ;ECU_Layer/LCD/Lcd.c: 383:             str[DataCounter] = Temp_String[DataCounter];
  1542   002826  0EF7               	movlw	low number_16bit_to_string@Temp_String
  1543   002828  25FE               	addwf	number_16bit_to_string@DataCounter& (0+255),w,b
  1544   00282A  6ED9               	movwf	fsr2l,c
  1545   00282C  6ADA               	clrf	fsr2h,c
  1546   00282E  0E00               	movlw	high number_16bit_to_string@Temp_String
  1547   002830  22DA               	addwfc	fsr2h,f,c
  1548   002832  51FE               	movf	number_16bit_to_string@DataCounter& (0+255),w,b
  1549   002834  25F5               	addwf	number_16bit_to_string@str& (0+255),w,b
  1550   002836  6EE1               	movwf	fsr1l,c
  1551   002838  0E00               	movlw	0
  1552   00283A  21F6               	addwfc	(number_16bit_to_string@str+1)& (0+255),w,b
  1553   00283C  6EE2               	movwf	fsr1h,c
  1554   00283E  CFDF FFE7          	movff	indf2,indf1
  1555   002842                     
  1556                           ; BSR set to: 0
  1557                           ;ECU_Layer/LCD/Lcd.c: 384:             DataCounter++;
  1558   002842  2BFE               	incf	number_16bit_to_string@DataCounter& (0+255),f,b
  1559   002844                     l6645:
  1560                           
  1561                           ;ECU_Layer/LCD/Lcd.c: 382:         while(Temp_String[DataCounter] != '\0'){
  1562   002844  0EF7               	movlw	low number_16bit_to_string@Temp_String
  1563   002846  0100               	movlb	0	; () banked
  1564   002848  25FE               	addwf	number_16bit_to_string@DataCounter& (0+255),w,b
  1565   00284A  6ED9               	movwf	fsr2l,c
  1566   00284C  6ADA               	clrf	fsr2h,c
  1567   00284E  0E00               	movlw	high number_16bit_to_string@Temp_String
  1568   002850  22DA               	addwfc	fsr2h,f,c
  1569   002852  50DF               	movf	indf2,w,c
  1570   002854  A4D8               	btfss	status,2,c
  1571   002856  EF2F  F014         	goto	u6261
  1572   00285A  EF31  F014         	goto	u6260
  1573   00285E                     u6261:
  1574   00285E  EF13  F014         	goto	l6641
  1575   002862                     u6260:
  1576   002862                     l6647:
  1577                           
  1578                           ; BSR set to: 0
  1579                           ;ECU_Layer/LCD/Lcd.c: 387:     return ret;
  1580   002862  51FD               	movf	number_16bit_to_string@ret& (0+255),w,b
  1581   002864                     
  1582                           ; BSR set to: 0
  1583   002864  0012               	return		;funcret
  1584   002866                     __end_of_number_16bit_to_string:
  1585                           	callstack 0
  1586                           
  1587 ;; *************** function _sprintf *****************
  1588 ;; Defined at:
  1589 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  1590 ;; Parameters:    Size  Location     Type
  1591 ;;  s               2   79[COMRAM] PTR unsigned char 
  1592 ;;		 -> number_16bit_to_string@Temp_String(6), 
  1593 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  1594 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1595 ;; Auto vars:     Size  Location     Type
  1596 ;;  f              12    2[BANK0 ] struct _IO_FILE
  1597 ;;  ap              2    0[BANK0 ] PTR void [1]
  1598 ;;		 -> ?_sprintf(2), 
  1599 ;;  ret             2    0        int 
  1600 ;; Return value:  Size  Location     Type
  1601 ;;                  2   79[COMRAM] int 
  1602 ;; Registers used:
  1603 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1604 ;; Tracked objects:
  1605 ;;		On entry : 0/0
  1606 ;;		On exit  : 0/0
  1607 ;;		Unchanged: 0/0
  1608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1609 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1610 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1612 ;;      Totals:         8      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1613 ;;Total ram usage:       22 bytes
  1614 ;; Hardware stack levels used: 1
  1615 ;; Hardware stack levels required when called: 13
  1616 ;; This function calls:
  1617 ;;		_vfprintf
  1618 ;; This function is called by:
  1619 ;;		_number_16bit_to_string
  1620 ;;		_number_8bit_to_string
  1621 ;;		_number_32bit_to_string
  1622 ;; This function uses a non-reentrant model
  1623 ;;
  1624                           
  1625                           	psect	text2
  1626   002F54                     __ptext2:
  1627                           	callstack 0
  1628   002F54                     _sprintf:
  1629                           	callstack 16
  1630   002F54  0E54               	movlw	low (?_sprintf+4)
  1631   002F56  0100               	movlb	0	; () banked
  1632   002F58  6FE5               	movwf	sprintf@ap& (0+255),b
  1633   002F5A  0E00               	movlw	high (?_sprintf+4)
  1634   002F5C  6FE6               	movwf	(sprintf@ap+1)& (0+255),b
  1635   002F5E  C050  F0E7         	movff	sprintf@s,sprintf@f
  1636   002F62  C051  F0E8         	movff	sprintf@s+1,sprintf@f+1
  1637   002F66                     
  1638                           ; BSR set to: 0
  1639   002F66  0E00               	movlw	0
  1640   002F68  6FEB               	movwf	(sprintf@f+4)& (0+255),b
  1641   002F6A  0E00               	movlw	0
  1642   002F6C  6FEA               	movwf	(sprintf@f+3)& (0+255),b
  1643   002F6E                     
  1644                           ; BSR set to: 0
  1645   002F6E  0E00               	movlw	0
  1646   002F70  6FF2               	movwf	(sprintf@f+11)& (0+255),b
  1647   002F72  0E00               	movlw	0
  1648   002F74  6FF1               	movwf	(sprintf@f+10)& (0+255),b
  1649   002F76                     
  1650                           ; BSR set to: 0
  1651   002F76  0EE7               	movlw	low sprintf@f
  1652   002F78  6E48               	movwf	vfprintf@fp^0,c
  1653   002F7A  0E00               	movlw	high sprintf@f
  1654   002F7C  6E49               	movwf	(vfprintf@fp+1)^0,c
  1655   002F7E  C052  F04A         	movff	sprintf@fmt,vfprintf@fmt
  1656   002F82  C053  F04B         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1657   002F86  0EE5               	movlw	low sprintf@ap
  1658   002F88  6E4C               	movwf	vfprintf@ap^0,c
  1659   002F8A  0E00               	movlw	high sprintf@ap
  1660   002F8C  6E4D               	movwf	(vfprintf@ap+1)^0,c
  1661   002F8E  ECD2  F017         	call	_vfprintf	;wreg free
  1662   002F92  0100               	movlb	0	; () banked
  1663   002F94  51EA               	movf	(sprintf@f+3)& (0+255),w,b
  1664   002F96  2450               	addwf	sprintf@s^0,w,c
  1665   002F98  6ED9               	movwf	fsr2l,c
  1666   002F9A  51EB               	movf	(sprintf@f+4)& (0+255),w,b
  1667   002F9C  2051               	addwfc	(sprintf@s+1)^0,w,c
  1668   002F9E  6EDA               	movwf	fsr2h,c
  1669   002FA0  6ADF               	clrf	indf2,c
  1670   002FA2                     
  1671                           ; BSR set to: 0
  1672   002FA2  0012               	return		;funcret
  1673   002FA4                     __end_of_sprintf:
  1674                           	callstack 0
  1675                           
  1676 ;; *************** function _vfprintf *****************
  1677 ;; Defined at:
  1678 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1679 ;; Parameters:    Size  Location     Type
  1680 ;;  fp              2   71[COMRAM] PTR struct _IO_FILE
  1681 ;;		 -> sprintf@f(12), 
  1682 ;;  fmt             2   73[COMRAM] PTR const unsigned char 
  1683 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1684 ;;  ap              2   75[COMRAM] PTR PTR void 
  1685 ;;		 -> sprintf@ap(2), 
  1686 ;; Auto vars:     Size  Location     Type
  1687 ;;  cfmt            2   77[COMRAM] PTR unsigned char 
  1688 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1689 ;; Return value:  Size  Location     Type
  1690 ;;                  2   71[COMRAM] int 
  1691 ;; Registers used:
  1692 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1693 ;; Tracked objects:
  1694 ;;		On entry : 0/0
  1695 ;;		On exit  : 0/0
  1696 ;;		Unchanged: 0/0
  1697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1698 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1699 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1701 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1702 ;;Total ram usage:        8 bytes
  1703 ;; Hardware stack levels used: 1
  1704 ;; Hardware stack levels required when called: 12
  1705 ;; This function calls:
  1706 ;;		_vfpfcnvrt
  1707 ;; This function is called by:
  1708 ;;		_sprintf
  1709 ;; This function uses a non-reentrant model
  1710 ;;
  1711                           
  1712                           	psect	text3
  1713   002FA4                     __ptext3:
  1714                           	callstack 0
  1715   002FA4                     _vfprintf:
  1716                           	callstack 16
  1717   002FA4                     
  1718                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  1719   002FA4  C04A  F04E         	movff	vfprintf@fmt,vfprintf@cfmt
  1720   002FA8  C04B  F04F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1721                           
  1722                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1723   002FAC  EFE6  F017         	goto	l6607
  1724   002FB0                     l6605:
  1725                           
  1726                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1727   002FB0  C048  F03A         	movff	vfprintf@fp,vfpfcnvrt@fp
  1728   002FB4  C049  F03B         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1729   002FB8  0E4E               	movlw	low vfprintf@cfmt
  1730   002FBA  6E3C               	movwf	vfpfcnvrt@fmt^0,c
  1731   002FBC  0E00               	movlw	high vfprintf@cfmt
  1732   002FBE  6E3D               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1733   002FC0  C04C  F03E         	movff	vfprintf@ap,vfpfcnvrt@ap
  1734   002FC4  C04D  F03F         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1735   002FC8  EC4B  F00F         	call	_vfpfcnvrt	;wreg free
  1736   002FCC                     l6607:
  1737                           
  1738                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1739   002FCC  C04E  FFF6         	movff	vfprintf@cfmt,tblptrl
  1740   002FD0  C04F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1741   002FD4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1742   002FD4  6AF8               	clrf	tblptru,c
  1743   002FD6                     	endif
  1744   002FD6                     	if	0	;tblptru may be non-zero
  1745   002FD6                     	endif
  1746   002FD6  0008               	tblrd		*
  1747   002FD8  50F5               	movf	tablat,w,c
  1748   002FDA  0900               	iorlw	0
  1749   002FDC  A4D8               	btfss	status,2,c
  1750   002FDE  EFF3  F017         	goto	u6231
  1751   002FE2  EFF5  F017         	goto	u6230
  1752   002FE6                     u6231:
  1753   002FE6  EFD8  F017         	goto	l6605
  1754   002FEA                     u6230:
  1755   002FEA                     
  1756                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  1757   002FEA  0E00               	movlw	0
  1758   002FEC  6E49               	movwf	(?_vfprintf+1)^0,c
  1759   002FEE  0E00               	movlw	0
  1760   002FF0  6E48               	movwf	?_vfprintf^0,c
  1761   002FF2  0012               	return		;funcret
  1762   002FF4                     __end_of_vfprintf:
  1763                           	callstack 0
  1764                           
  1765 ;; *************** function _vfpfcnvrt *****************
  1766 ;; Defined at:
  1767 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;  fp              2   57[COMRAM] PTR struct _IO_FILE
  1770 ;;		 -> sprintf@f(12), 
  1771 ;;  fmt             2   59[COMRAM] PTR PTR unsigned char 
  1772 ;;		 -> vfprintf@cfmt(2), 
  1773 ;;  ap              2   61[COMRAM] PTR PTR void 
  1774 ;;		 -> sprintf@ap(2), 
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;  convarg         4   65[COMRAM] struct .
  1777 ;;  cp              2   69[COMRAM] PTR unsigned char 
  1778 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1779 ;;  i               2    0        int 
  1780 ;;  done            2    0        int 
  1781 ;;  c               1    0        unsigned char 
  1782 ;; Return value:  Size  Location     Type
  1783 ;;                  1    wreg      void 
  1784 ;; Registers used:
  1785 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1786 ;; Tracked objects:
  1787 ;;		On entry : 0/0
  1788 ;;		On exit  : 0/0
  1789 ;;		Unchanged: 0/0
  1790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1791 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1792 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1793 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1794 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1795 ;;Total ram usage:       14 bytes
  1796 ;; Hardware stack levels used: 1
  1797 ;; Hardware stack levels required when called: 11
  1798 ;; This function calls:
  1799 ;;		_dtoa
  1800 ;;		_fputc
  1801 ;; This function is called by:
  1802 ;;		_vfprintf
  1803 ;; This function uses a non-reentrant model
  1804 ;;
  1805                           
  1806                           	psect	text4
  1807   001E96                     __ptext4:
  1808                           	callstack 0
  1809   001E96                     _vfpfcnvrt:
  1810                           	callstack 16
  1811   001E96                     
  1812                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  1813   001E96  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1814   001E9A  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1815   001E9E  CFDE FFF6          	movff	postinc2,tblptrl
  1816   001EA2  CFDD FFF7          	movff	postdec2,tblptrh
  1817   001EA6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1818   001EA6  6AF8               	clrf	tblptru,c
  1819   001EA8                     	endif
  1820   001EA8                     	if	0	;tblptru may be non-zero
  1821   001EA8                     	endif
  1822   001EA8  0008               	tblrd		*
  1823   001EAA  50F5               	movf	tablat,w,c
  1824   001EAC  0A25               	xorlw	37
  1825   001EAE  A4D8               	btfss	status,2,c
  1826   001EB0  EF5C  F00F         	goto	u6201
  1827   001EB4  EF5E  F00F         	goto	u6200
  1828   001EB8                     u6201:
  1829   001EB8  EFCB  F00F         	goto	l6597
  1830   001EBC                     u6200:
  1831   001EBC                     
  1832                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  1833   001EBC  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1834   001EC0  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1835   001EC4  2ADE               	incf	postinc2,f,c
  1836   001EC6  0E00               	movlw	0
  1837   001EC8  22DD               	addwfc	postdec2,f,c
  1838   001ECA                     
  1839                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  1840   001ECA  0E00               	movlw	0
  1841   001ECC  0100               	movlb	0	; () banked
  1842   001ECE  6FBE               	movwf	(_width+1)& (0+255),b
  1843   001ED0  0E00               	movlw	0
  1844   001ED2  6FBD               	movwf	_width& (0+255),b
  1845   001ED4  C0BD  F05C         	movff	_width,_flags
  1846   001ED8                     
  1847                           ; BSR set to: 0
  1848                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  1849   001ED8  69BF               	setf	_prec& (0+255),b
  1850   001EDA  69C0               	setf	(_prec+1)& (0+255),b
  1851   001EDC                     
  1852                           ; BSR set to: 0
  1853                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  1854   001EDC  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1855   001EE0  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1856   001EE4  CFDE F046          	movff	postinc2,vfpfcnvrt@cp
  1857   001EE8  CFDD F047          	movff	postdec2,vfpfcnvrt@cp+1
  1858   001EEC                     
  1859                           ; BSR set to: 0
  1860                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1861   001EEC  C046  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1862   001EF0  C047  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1863   001EF4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1864   001EF4  6AF8               	clrf	tblptru,c
  1865   001EF6                     	endif
  1866   001EF6                     	if	0	;tblptru may be non-zero
  1867   001EF6                     	endif
  1868   001EF6  0008               	tblrd		*
  1869   001EF8  50F5               	movf	tablat,w,c
  1870   001EFA  0A64               	xorlw	100
  1871   001EFC  B4D8               	btfsc	status,2,c
  1872   001EFE  EF83  F00F         	goto	u6211
  1873   001F02  EF85  F00F         	goto	u6210
  1874   001F06                     u6211:
  1875   001F06  EF94  F00F         	goto	l6587
  1876   001F0A                     u6210:
  1877   001F0A                     
  1878                           ; BSR set to: 0
  1879   001F0A  C046  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1880   001F0E  C047  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1881   001F12                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1882   001F12  6AF8               	clrf	tblptru,c
  1883   001F14                     	endif
  1884   001F14                     	if	0	;tblptru may be non-zero
  1885   001F14                     	endif
  1886   001F14  0008               	tblrd		*
  1887   001F16  50F5               	movf	tablat,w,c
  1888   001F18  0A69               	xorlw	105
  1889   001F1A  A4D8               	btfss	status,2,c
  1890   001F1C  EF92  F00F         	goto	u6221
  1891   001F20  EF94  F00F         	goto	u6220
  1892   001F24                     u6221:
  1893   001F24  EFC2  F00F         	goto	l6593
  1894   001F28                     u6220:
  1895   001F28                     l6587:
  1896                           
  1897                           ; BSR set to: 0
  1898                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1899   001F28  C03E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1900   001F2C  C03F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1901   001F30  CFDF F040          	movff	indf2,??_vfpfcnvrt
  1902   001F34  0E02               	movlw	2
  1903   001F36  26DE               	addwf	postinc2,f,c
  1904   001F38  CFDF F041          	movff	indf2,??_vfpfcnvrt+1
  1905   001F3C  0E00               	movlw	0
  1906   001F3E  22DD               	addwfc	postdec2,f,c
  1907   001F40  C040  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1908   001F44  C041  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1909   001F48  CFDE F042          	movff	postinc2,vfpfcnvrt@convarg
  1910   001F4C  CFDD F043          	movff	postdec2,vfpfcnvrt@convarg+1
  1911                           
  1912                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  1913   001F50  0E01               	movlw	1
  1914   001F52  2446               	addwf	vfpfcnvrt@cp^0,w,c
  1915   001F54  6E40               	movwf	??_vfpfcnvrt^0,c
  1916   001F56  0E00               	movlw	0
  1917   001F58  2047               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1918   001F5A  6E41               	movwf	(??_vfpfcnvrt+1)^0,c
  1919   001F5C  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1920   001F60  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1921   001F64  C040  FFDE         	movff	??_vfpfcnvrt,postinc2
  1922   001F68  C041  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1923   001F6C                     
  1924                           ; BSR set to: 0
  1925                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  1926   001F6C  C03A  F02D         	movff	vfpfcnvrt@fp,dtoa@fp
  1927   001F70  C03B  F02E         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1928   001F74  C042  F02F         	movff	vfpfcnvrt@convarg,dtoa@d
  1929   001F78  C043  F030         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1930   001F7C  ECC5  F00D         	call	_dtoa	;wreg free
  1931   001F80  EFE0  F00F         	goto	l1833
  1932   001F84                     l6593:
  1933                           
  1934                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  1935   001F84  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1936   001F88  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1937   001F8C  2ADE               	incf	postinc2,f,c
  1938   001F8E  0E00               	movlw	0
  1939   001F90  22DD               	addwfc	postdec2,f,c
  1940   001F92  EFE0  F00F         	goto	l1833
  1941   001F96                     l6597:
  1942                           
  1943                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  1944   001F96  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1945   001F9A  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1946   001F9E  CFDE FFF6          	movff	postinc2,tblptrl
  1947   001FA2  CFDD FFF7          	movff	postdec2,tblptrh
  1948   001FA6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1949   001FA6  6AF8               	clrf	tblptru,c
  1950   001FA8                     	endif
  1951   001FA8                     	if	0	;tblptru may be non-zero
  1952   001FA8                     	endif
  1953   001FA8  0008               	tblrd		*
  1954   001FAA  50F5               	movf	tablat,w,c
  1955   001FAC  6E12               	movwf	fputc@c^0,c
  1956   001FAE  6A13               	clrf	(fputc@c+1)^0,c
  1957   001FB0  C03A  F014         	movff	vfpfcnvrt@fp,fputc@fp
  1958   001FB4  C03B  F015         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1959   001FB8  EC0E  F013         	call	_fputc	;wreg free
  1960   001FBC  EFC2  F00F         	goto	l6593
  1961   001FC0                     l1833:
  1962   001FC0  0012               	return		;funcret
  1963   001FC2                     __end_of_vfpfcnvrt:
  1964                           	callstack 0
  1965                           
  1966 ;; *************** function _dtoa *****************
  1967 ;; Defined at:
  1968 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1969 ;; Parameters:    Size  Location     Type
  1970 ;;  fp              2   44[COMRAM] PTR struct _IO_FILE
  1971 ;;		 -> sprintf@f(12), 
  1972 ;;  d               2   46[COMRAM] int 
  1973 ;; Auto vars:     Size  Location     Type
  1974 ;;  i               2   55[COMRAM] int 
  1975 ;;  w               2   52[COMRAM] int 
  1976 ;;  p               2   50[COMRAM] int 
  1977 ;;  s               1   54[COMRAM] unsigned char 
  1978 ;; Return value:  Size  Location     Type
  1979 ;;                  1    wreg      void 
  1980 ;; Registers used:
  1981 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1987 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1988 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1990 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1991 ;;Total ram usage:       13 bytes
  1992 ;; Hardware stack levels used: 1
  1993 ;; Hardware stack levels required when called: 10
  1994 ;; This function calls:
  1995 ;;		___awdiv
  1996 ;;		___awmod
  1997 ;;		_abs
  1998 ;;		_pad
  1999 ;; This function is called by:
  2000 ;;		_vfpfcnvrt
  2001 ;; This function uses a non-reentrant model
  2002 ;;
  2003                           
  2004                           	psect	text5
  2005   001B8A                     __ptext5:
  2006                           	callstack 0
  2007   001B8A                     _dtoa:
  2008                           	callstack 16
  2009   001B8A                     
  2010                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  2011   001B8A  BE30               	btfsc	(dtoa@d+1)^0,7,c
  2012   001B8C  EFCA  F00D         	goto	u6101
  2013   001B90  EFCD  F00D         	goto	u6100
  2014   001B94                     u6101:
  2015   001B94  0E01               	movlw	1
  2016   001B96  EFCE  F00D         	goto	u6110
  2017   001B9A                     u6100:
  2018   001B9A  0E00               	movlw	0
  2019   001B9C                     u6110:
  2020   001B9C  6E37               	movwf	dtoa@s^0,c
  2021   001B9E                     
  2022                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  2023   001B9E  5037               	movf	dtoa@s^0,w,c
  2024   001BA0  B4D8               	btfsc	status,2,c
  2025   001BA2  EFD5  F00D         	goto	u6121
  2026   001BA6  EFD7  F00D         	goto	u6120
  2027   001BAA                     u6121:
  2028   001BAA  EFDB  F00D         	goto	l6529
  2029   001BAE                     u6120:
  2030   001BAE                     
  2031                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  2032   001BAE  6C2F               	negf	dtoa@d^0,c
  2033   001BB0  1E30               	comf	(dtoa@d+1)^0,f,c
  2034   001BB2  B0D8               	btfsc	status,0,c
  2035   001BB4  2A30               	incf	(dtoa@d+1)^0,f,c
  2036   001BB6                     l6529:
  2037                           
  2038                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  2039   001BB6  0100               	movlb	0	; () banked
  2040   001BB8  BFC0               	btfsc	(_prec+1)& (0+255),7,b
  2041   001BBA  EFE3  F00D         	goto	u6130
  2042   001BBE  EFE1  F00D         	goto	u6131
  2043   001BC2                     u6131:
  2044   001BC2  EFE9  F00D         	goto	l1812
  2045   001BC6                     u6130:
  2046   001BC6                     
  2047                           ; BSR set to: 0
  2048   001BC6  0E00               	movlw	0
  2049   001BC8  6E34               	movwf	(dtoa@p+1)^0,c
  2050   001BCA  0E01               	movlw	1
  2051   001BCC  6E33               	movwf	dtoa@p^0,c
  2052   001BCE  EFED  F00D         	goto	l1814
  2053   001BD2                     l1812:
  2054                           
  2055                           ; BSR set to: 0
  2056   001BD2  C0BF  F033         	movff	_prec,dtoa@p
  2057   001BD6  C0C0  F034         	movff	_prec+1,dtoa@p+1
  2058   001BDA                     l1814:
  2059                           
  2060                           ; BSR set to: 0
  2061                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  2062   001BDA  C0BD  F035         	movff	_width,dtoa@w
  2063   001BDE  C0BE  F036         	movff	_width+1,dtoa@w+1
  2064   001BE2                     
  2065                           ; BSR set to: 0
  2066                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  2067   001BE2  5037               	movf	dtoa@s^0,w,c
  2068   001BE4  B4D8               	btfsc	status,2,c
  2069   001BE6  EFF7  F00D         	goto	u6141
  2070   001BEA  EFF9  F00D         	goto	u6140
  2071   001BEE                     u6141:
  2072   001BEE  EF10  F00E         	goto	l1815
  2073   001BF2                     u6140:
  2074   001BF2                     
  2075                           ; BSR set to: 0
  2076                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  2077   001BF2  0635               	decf	dtoa@w^0,f,c
  2078   001BF4  A0D8               	btfss	status,0,c
  2079   001BF6  0636               	decf	(dtoa@w+1)^0,f,c
  2080   001BF8                     
  2081                           ; BSR set to: 0
  2082                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  2083   001BF8  5037               	movf	dtoa@s^0,w,c
  2084   001BFA  A4D8               	btfss	status,2,c
  2085   001BFC  EF02  F00E         	goto	u6151
  2086   001C00  EF04  F00E         	goto	u6150
  2087   001C04                     u6151:
  2088   001C04  EF0A  F00E         	goto	l6541
  2089   001C08                     u6150:
  2090   001C08                     
  2091                           ; BSR set to: 0
  2092   001C08  0E00               	movlw	0
  2093   001C0A  6E32               	movwf	(_dtoa$2832+1)^0,c
  2094   001C0C  0E2B               	movlw	43
  2095   001C0E  6E31               	movwf	_dtoa$2832^0,c
  2096   001C10  EF0E  F00E         	goto	l6543
  2097   001C14                     l6541:
  2098                           
  2099                           ; BSR set to: 0
  2100   001C14  0E00               	movlw	0
  2101   001C16  6E32               	movwf	(_dtoa$2832+1)^0,c
  2102   001C18  0E2D               	movlw	45
  2103   001C1A  6E31               	movwf	_dtoa$2832^0,c
  2104   001C1C                     l6543:
  2105                           
  2106                           ; BSR set to: 0
  2107   001C1C  C031  F037         	movff	_dtoa$2832,dtoa@s
  2108   001C20                     l1815:
  2109                           
  2110                           ; BSR set to: 0
  2111                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  2112   001C20  0E00               	movlw	0
  2113   001C22  6E39               	movwf	(dtoa@i+1)^0,c
  2114   001C24  0E1F               	movlw	31
  2115   001C26  6E38               	movwf	dtoa@i^0,c
  2116   001C28                     
  2117                           ; BSR set to: 0
  2118                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  2119   001C28  0E00               	movlw	0
  2120   001C2A  0101               	movlb	1	; () banked
  2121   001C2C  6F1F               	movwf	(_dbuf+31)& (0+255),b
  2122                           
  2123                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2124   001C2E  EF49  F00E         	goto	l6557
  2125   001C32                     l6547:
  2126                           
  2127                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  2128   001C32  0638               	decf	dtoa@i^0,f,c
  2129   001C34  A0D8               	btfss	status,0,c
  2130   001C36  0639               	decf	(dtoa@i+1)^0,f,c
  2131   001C38                     
  2132                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  2133   001C38  0E00               	movlw	low _dbuf
  2134   001C3A  2438               	addwf	dtoa@i^0,w,c
  2135   001C3C  6ED9               	movwf	fsr2l,c
  2136   001C3E  0E01               	movlw	high _dbuf
  2137   001C40  2039               	addwfc	(dtoa@i+1)^0,w,c
  2138   001C42  6EDA               	movwf	fsr2h,c
  2139   001C44  C02F  F012         	movff	dtoa@d,___awmod@dividend
  2140   001C48  C030  F013         	movff	dtoa@d+1,___awmod@dividend+1
  2141   001C4C  0E00               	movlw	0
  2142   001C4E  6E15               	movwf	(___awmod@divisor+1)^0,c
  2143   001C50  0E0A               	movlw	10
  2144   001C52  6E14               	movwf	___awmod@divisor^0,c
  2145   001C54  EC91  F014         	call	___awmod	;wreg free
  2146   001C58  C012  F018         	movff	?___awmod,abs@a
  2147   001C5C  C013  F019         	movff	?___awmod+1,abs@a+1
  2148   001C60  EC86  F018         	call	_abs	;wreg free
  2149   001C64  5018               	movf	?_abs^0,w,c
  2150   001C66  0F30               	addlw	48
  2151   001C68  6EDF               	movwf	indf2,c
  2152   001C6A                     
  2153                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  2154   001C6A  0633               	decf	dtoa@p^0,f,c
  2155   001C6C  A0D8               	btfss	status,0,c
  2156   001C6E  0634               	decf	(dtoa@p+1)^0,f,c
  2157   001C70                     
  2158                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  2159   001C70  0635               	decf	dtoa@w^0,f,c
  2160   001C72  A0D8               	btfss	status,0,c
  2161   001C74  0636               	decf	(dtoa@w+1)^0,f,c
  2162   001C76                     
  2163                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  2164   001C76  C02F  F012         	movff	dtoa@d,___awdiv@dividend
  2165   001C7A  C030  F013         	movff	dtoa@d+1,___awdiv@dividend+1
  2166   001C7E  0E00               	movlw	0
  2167   001C80  6E15               	movwf	(___awdiv@divisor+1)^0,c
  2168   001C82  0E0A               	movlw	10
  2169   001C84  6E14               	movwf	___awdiv@divisor^0,c
  2170   001C86  EC73  F013         	call	___awdiv	;wreg free
  2171   001C8A  C012  F02F         	movff	?___awdiv,dtoa@d
  2172   001C8E  C013  F030         	movff	?___awdiv+1,dtoa@d+1
  2173   001C92                     l6557:
  2174                           
  2175                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2176   001C92  BE39               	btfsc	(dtoa@i+1)^0,7,c
  2177   001C94  EF54  F00E         	goto	u6161
  2178   001C98  5039               	movf	(dtoa@i+1)^0,w,c
  2179   001C9A  E108               	bnz	u6160
  2180   001C9C  0438               	decf	dtoa@i^0,w,c
  2181   001C9E  A0D8               	btfss	status,0,c
  2182   001CA0  EF54  F00E         	goto	u6161
  2183   001CA4  EF56  F00E         	goto	u6160
  2184   001CA8                     u6161:
  2185   001CA8  EF6C  F00E         	goto	l6563
  2186   001CAC                     u6160:
  2187   001CAC  502F               	movf	dtoa@d^0,w,c
  2188   001CAE  1030               	iorwf	(dtoa@d+1)^0,w,c
  2189   001CB0  A4D8               	btfss	status,2,c
  2190   001CB2  EF5D  F00E         	goto	u6171
  2191   001CB6  EF5F  F00E         	goto	u6170
  2192   001CBA                     u6171:
  2193   001CBA  EF19  F00E         	goto	l6547
  2194   001CBE                     u6170:
  2195   001CBE  BE34               	btfsc	(dtoa@p+1)^0,7,c
  2196   001CC0  EF6C  F00E         	goto	u6180
  2197   001CC4  5034               	movf	(dtoa@p+1)^0,w,c
  2198   001CC6  E106               	bnz	u6181
  2199   001CC8  0433               	decf	dtoa@p^0,w,c
  2200   001CCA  B0D8               	btfsc	status,0,c
  2201   001CCC  EF6A  F00E         	goto	u6181
  2202   001CD0  EF6C  F00E         	goto	u6180
  2203   001CD4                     u6181:
  2204   001CD4  EF19  F00E         	goto	l6547
  2205   001CD8                     u6180:
  2206   001CD8                     l6563:
  2207                           
  2208                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  2209   001CD8  5037               	movf	dtoa@s^0,w,c
  2210   001CDA  B4D8               	btfsc	status,2,c
  2211   001CDC  EF72  F00E         	goto	u6191
  2212   001CE0  EF74  F00E         	goto	u6190
  2213   001CE4                     u6191:
  2214   001CE4  EF7F  F00E         	goto	l6569
  2215   001CE8                     u6190:
  2216   001CE8                     
  2217                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  2218   001CE8  0638               	decf	dtoa@i^0,f,c
  2219   001CEA  A0D8               	btfss	status,0,c
  2220   001CEC  0639               	decf	(dtoa@i+1)^0,f,c
  2221   001CEE                     
  2222                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  2223   001CEE  0E00               	movlw	low _dbuf
  2224   001CF0  2438               	addwf	dtoa@i^0,w,c
  2225   001CF2  6ED9               	movwf	fsr2l,c
  2226   001CF4  0E01               	movlw	high _dbuf
  2227   001CF6  2039               	addwfc	(dtoa@i+1)^0,w,c
  2228   001CF8  6EDA               	movwf	fsr2h,c
  2229   001CFA  C037  FFDF         	movff	dtoa@s,indf2
  2230   001CFE                     l6569:
  2231                           
  2232                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2233   001CFE  C02D  F022         	movff	dtoa@fp,pad@fp
  2234   001D02  C02E  F023         	movff	dtoa@fp+1,pad@fp+1
  2235   001D06  0E00               	movlw	low _dbuf
  2236   001D08  2438               	addwf	dtoa@i^0,w,c
  2237   001D0A  6E24               	movwf	pad@buf^0,c
  2238   001D0C  0E01               	movlw	high _dbuf
  2239   001D0E  2039               	addwfc	(dtoa@i+1)^0,w,c
  2240   001D10  6E25               	movwf	(pad@buf+1)^0,c
  2241   001D12  C035  F026         	movff	dtoa@w,pad@p
  2242   001D16  C036  F027         	movff	dtoa@w+1,pad@p+1
  2243   001D1A  ECC8  F015         	call	_pad	;wreg free
  2244   001D1E  0012               	return		;funcret
  2245   001D20                     __end_of_dtoa:
  2246                           	callstack 0
  2247                           
  2248 ;; *************** function _pad *****************
  2249 ;; Defined at:
  2250 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  2253 ;;		 -> sprintf@f(12), 
  2254 ;;  buf             2   35[COMRAM] PTR unsigned char 
  2255 ;;		 -> dbuf(32), 
  2256 ;;  p               2   37[COMRAM] int 
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;  w               2   42[COMRAM] int 
  2259 ;;  i               2   40[COMRAM] int 
  2260 ;; Return value:  Size  Location     Type
  2261 ;;                  1    wreg      void 
  2262 ;; Registers used:
  2263 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2264 ;; Tracked objects:
  2265 ;;		On entry : 0/0
  2266 ;;		On exit  : 0/0
  2267 ;;		Unchanged: 0/0
  2268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2269 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2270 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2271 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2272 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2273 ;;Total ram usage:       11 bytes
  2274 ;; Hardware stack levels used: 1
  2275 ;; Hardware stack levels required when called: 9
  2276 ;; This function calls:
  2277 ;;		_fputc
  2278 ;;		_fputs
  2279 ;; This function is called by:
  2280 ;;		_dtoa
  2281 ;; This function uses a non-reentrant model
  2282 ;;
  2283                           
  2284                           	psect	text6
  2285   002B90                     __ptext6:
  2286                           	callstack 0
  2287   002B90                     _pad:
  2288                           	callstack 16
  2289   002B90                     
  2290                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
  2291   002B90  BE27               	btfsc	(pad@p+1)^0,7,c
  2292   002B92  EFCD  F015         	goto	u6071
  2293   002B96  EFCF  F015         	goto	u6070
  2294   002B9A                     u6071:
  2295   002B9A  EFD5  F015         	goto	l6509
  2296   002B9E                     u6070:
  2297   002B9E  C026  F02B         	movff	pad@p,pad@w
  2298   002BA2  C027  F02C         	movff	pad@p+1,pad@w+1
  2299   002BA6  EFD9  F015         	goto	l1803
  2300   002BAA                     l6509:
  2301   002BAA  0E00               	movlw	0
  2302   002BAC  6E2C               	movwf	(pad@w+1)^0,c
  2303   002BAE  0E00               	movlw	0
  2304   002BB0  6E2B               	movwf	pad@w^0,c
  2305   002BB2                     l1803:
  2306                           
  2307                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  2308   002BB2  0E00               	movlw	0
  2309   002BB4  6E2A               	movwf	(pad@i+1)^0,c
  2310   002BB6  0E00               	movlw	0
  2311   002BB8  6E29               	movwf	pad@i^0,c
  2312                           
  2313                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2314   002BBA  EFEB  F015         	goto	l6515
  2315   002BBE                     l6511:
  2316                           
  2317                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  2318   002BBE  0E00               	movlw	0
  2319   002BC0  6E13               	movwf	(fputc@c+1)^0,c
  2320   002BC2  0E20               	movlw	32
  2321   002BC4  6E12               	movwf	fputc@c^0,c
  2322   002BC6  C022  F014         	movff	pad@fp,fputc@fp
  2323   002BCA  C023  F015         	movff	pad@fp+1,fputc@fp+1
  2324   002BCE  EC0E  F013         	call	_fputc	;wreg free
  2325   002BD2                     
  2326                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  2327   002BD2  4A29               	infsnz	pad@i^0,f,c
  2328   002BD4  2A2A               	incf	(pad@i+1)^0,f,c
  2329   002BD6                     l6515:
  2330                           
  2331                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2332   002BD6  502B               	movf	pad@w^0,w,c
  2333   002BD8  5C29               	subwf	pad@i^0,w,c
  2334   002BDA  502A               	movf	(pad@i+1)^0,w,c
  2335   002BDC  0A80               	xorlw	128
  2336   002BDE  6E28               	movwf	??_pad^0,c
  2337   002BE0  502C               	movf	(pad@w+1)^0,w,c
  2338   002BE2  0A80               	xorlw	128
  2339   002BE4  5828               	subwfb	??_pad^0,w,c
  2340   002BE6  A0D8               	btfss	status,0,c
  2341   002BE8  EFF8  F015         	goto	u6081
  2342   002BEC  EFFA  F015         	goto	u6080
  2343   002BF0                     u6081:
  2344   002BF0  EFDF  F015         	goto	l6511
  2345   002BF4                     u6080:
  2346   002BF4                     
  2347                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  2348   002BF4  C024  F01B         	movff	pad@buf,fputs@s
  2349   002BF8  C025  F01C         	movff	pad@buf+1,fputs@s+1
  2350   002BFC  C022  F01D         	movff	pad@fp,fputs@fp
  2351   002C00  C023  F01E         	movff	pad@fp+1,fputs@fp+1
  2352   002C04  EC64  F018         	call	_fputs	;wreg free
  2353   002C08  0012               	return		;funcret
  2354   002C0A                     __end_of_pad:
  2355                           	callstack 0
  2356                           
  2357 ;; *************** function _fputs *****************
  2358 ;; Defined at:
  2359 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  2360 ;; Parameters:    Size  Location     Type
  2361 ;;  s               2   26[COMRAM] PTR const unsigned char 
  2362 ;;		 -> dbuf(32), 
  2363 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  2364 ;;		 -> sprintf@f(12), 
  2365 ;; Auto vars:     Size  Location     Type
  2366 ;;  i               2   31[COMRAM] int 
  2367 ;;  c               1   30[COMRAM] unsigned char 
  2368 ;; Return value:  Size  Location     Type
  2369 ;;                  2   26[COMRAM] int 
  2370 ;; Registers used:
  2371 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2372 ;; Tracked objects:
  2373 ;;		On entry : 0/0
  2374 ;;		On exit  : 0/0
  2375 ;;		Unchanged: 0/0
  2376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2377 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2378 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2380 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2381 ;;Total ram usage:        7 bytes
  2382 ;; Hardware stack levels used: 1
  2383 ;; Hardware stack levels required when called: 8
  2384 ;; This function calls:
  2385 ;;		_fputc
  2386 ;; This function is called by:
  2387 ;;		_pad
  2388 ;; This function uses a non-reentrant model
  2389 ;;
  2390                           
  2391                           	psect	text7
  2392   0030C8                     __ptext7:
  2393                           	callstack 0
  2394   0030C8                     _fputs:
  2395                           	callstack 16
  2396   0030C8  0E00               	movlw	0
  2397   0030CA  6E21               	movwf	(fputs@i+1)^0,c
  2398   0030CC  0E00               	movlw	0
  2399   0030CE  6E20               	movwf	fputs@i^0,c
  2400   0030D0  EF75  F018         	goto	l6423
  2401   0030D4                     l6419:
  2402   0030D4  C01F  F012         	movff	fputs@c,fputc@c
  2403   0030D8  6A13               	clrf	(fputc@c+1)^0,c
  2404   0030DA  C01D  F014         	movff	fputs@fp,fputc@fp
  2405   0030DE  C01E  F015         	movff	fputs@fp+1,fputc@fp+1
  2406   0030E2  EC0E  F013         	call	_fputc	;wreg free
  2407   0030E6  4A20               	infsnz	fputs@i^0,f,c
  2408   0030E8  2A21               	incf	(fputs@i+1)^0,f,c
  2409   0030EA                     l6423:
  2410   0030EA  5020               	movf	fputs@i^0,w,c
  2411   0030EC  241B               	addwf	fputs@s^0,w,c
  2412   0030EE  6ED9               	movwf	fsr2l,c
  2413   0030F0  5021               	movf	(fputs@i+1)^0,w,c
  2414   0030F2  201C               	addwfc	(fputs@s+1)^0,w,c
  2415   0030F4  6EDA               	movwf	fsr2h,c
  2416   0030F6  50DF               	movf	indf2,w,c
  2417   0030F8  6E1F               	movwf	fputs@c^0,c
  2418   0030FA  501F               	movf	fputs@c^0,w,c
  2419   0030FC  A4D8               	btfss	status,2,c
  2420   0030FE  EF83  F018         	goto	u5941
  2421   003102  EF85  F018         	goto	u5940
  2422   003106                     u5941:
  2423   003106  EF6A  F018         	goto	l6419
  2424   00310A                     u5940:
  2425   00310A  0012               	return		;funcret
  2426   00310C                     __end_of_fputs:
  2427                           	callstack 0
  2428                           
  2429 ;; *************** function _fputc *****************
  2430 ;; Defined at:
  2431 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  2432 ;; Parameters:    Size  Location     Type
  2433 ;;  c               2   17[COMRAM] int 
  2434 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  2435 ;;		 -> sprintf@f(12), 
  2436 ;; Auto vars:     Size  Location     Type
  2437 ;;		None
  2438 ;; Return value:  Size  Location     Type
  2439 ;;                  2   17[COMRAM] int 
  2440 ;; Registers used:
  2441 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2442 ;; Tracked objects:
  2443 ;;		On entry : 0/0
  2444 ;;		On exit  : 0/0
  2445 ;;		Unchanged: 0/0
  2446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2447 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2449 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2450 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2451 ;;Total ram usage:        9 bytes
  2452 ;; Hardware stack levels used: 1
  2453 ;; Hardware stack levels required when called: 7
  2454 ;; This function calls:
  2455 ;;		_putch
  2456 ;; This function is called by:
  2457 ;;		_pad
  2458 ;;		_vfpfcnvrt
  2459 ;;		_fputs
  2460 ;; This function uses a non-reentrant model
  2461 ;;
  2462                           
  2463                           	psect	text8
  2464   00261C                     __ptext8:
  2465                           	callstack 0
  2466   00261C                     _fputc:
  2467                           	callstack 19
  2468   00261C  5014               	movf	fputc@fp^0,w,c
  2469   00261E  1015               	iorwf	(fputc@fp+1)^0,w,c
  2470   002620  B4D8               	btfsc	status,2,c
  2471   002622  EF15  F013         	goto	u5901
  2472   002626  EF17  F013         	goto	u5900
  2473   00262A                     u5901:
  2474   00262A  EF20  F013         	goto	l6407
  2475   00262E                     u5900:
  2476   00262E  5014               	movf	fputc@fp^0,w,c
  2477   002630  1015               	iorwf	(fputc@fp+1)^0,w,c
  2478   002632  A4D8               	btfss	status,2,c
  2479   002634  EF1E  F013         	goto	u5911
  2480   002638  EF20  F013         	goto	u5910
  2481   00263C                     u5911:
  2482   00263C  EF25  F013         	goto	l6409
  2483   002640                     u5910:
  2484   002640                     l6407:
  2485   002640  5012               	movf	fputc@c^0,w,c
  2486   002642  ECD3  F019         	call	_putch
  2487   002646  EF72  F013         	goto	l1858
  2488   00264A                     l6409:
  2489   00264A  EE20 F00A          	lfsr	2,10
  2490   00264E  5014               	movf	fputc@fp^0,w,c
  2491   002650  26D9               	addwf	fsr2l,f,c
  2492   002652  5015               	movf	(fputc@fp+1)^0,w,c
  2493   002654  22DA               	addwfc	fsr2h,f,c
  2494   002656  50DE               	movf	postinc2,w,c
  2495   002658  10DE               	iorwf	postinc2,w,c
  2496   00265A  B4D8               	btfsc	status,2,c
  2497   00265C  EF32  F013         	goto	u5921
  2498   002660  EF34  F013         	goto	u5920
  2499   002664                     u5921:
  2500   002664  EF4F  F013         	goto	l6413
  2501   002668                     u5920:
  2502   002668  EE20 F00A          	lfsr	2,10
  2503   00266C  5014               	movf	fputc@fp^0,w,c
  2504   00266E  26D9               	addwf	fsr2l,f,c
  2505   002670  5015               	movf	(fputc@fp+1)^0,w,c
  2506   002672  22DA               	addwfc	fsr2h,f,c
  2507   002674  EE10 F003          	lfsr	1,3
  2508   002678  5014               	movf	fputc@fp^0,w,c
  2509   00267A  26E1               	addwf	fsr1l,f,c
  2510   00267C  5015               	movf	(fputc@fp+1)^0,w,c
  2511   00267E  22E2               	addwfc	fsr1h,f,c
  2512   002680  50DE               	movf	postinc2,w,c
  2513   002682  5CE6               	subwf	postinc1,w,c
  2514   002684  50E6               	movf	postinc1,w,c
  2515   002686  0A80               	xorlw	128
  2516   002688  6E1A               	movwf	(??_fputc+4)^0,c
  2517   00268A  50DE               	movf	postinc2,w,c
  2518   00268C  0A80               	xorlw	128
  2519   00268E  581A               	subwfb	(??_fputc+4)^0,w,c
  2520   002690  B0D8               	btfsc	status,0,c
  2521   002692  EF4D  F013         	goto	u5931
  2522   002696  EF4F  F013         	goto	u5930
  2523   00269A                     u5931:
  2524   00269A  EF72  F013         	goto	l1858
  2525   00269E                     u5930:
  2526   00269E                     l6413:
  2527   00269E  EE20 F003          	lfsr	2,3
  2528   0026A2  5014               	movf	fputc@fp^0,w,c
  2529   0026A4  26D9               	addwf	fsr2l,f,c
  2530   0026A6  5015               	movf	(fputc@fp+1)^0,w,c
  2531   0026A8  22DA               	addwfc	fsr2h,f,c
  2532   0026AA  CFDE F016          	movff	postinc2,??_fputc
  2533   0026AE  CFDD F017          	movff	postdec2,??_fputc+1
  2534   0026B2  C014  FFD9         	movff	fputc@fp,fsr2l
  2535   0026B6  C015  FFDA         	movff	fputc@fp+1,fsr2h
  2536   0026BA  CFDE F018          	movff	postinc2,??_fputc+2
  2537   0026BE  CFDD F019          	movff	postdec2,??_fputc+3
  2538   0026C2  5016               	movf	??_fputc^0,w,c
  2539   0026C4  2418               	addwf	(??_fputc+2)^0,w,c
  2540   0026C6  6ED9               	movwf	fsr2l,c
  2541   0026C8  5017               	movf	(??_fputc+1)^0,w,c
  2542   0026CA  2019               	addwfc	(??_fputc+3)^0,w,c
  2543   0026CC  6EDA               	movwf	fsr2h,c
  2544   0026CE  C012  FFDF         	movff	fputc@c,indf2
  2545   0026D2  EE20 F003          	lfsr	2,3
  2546   0026D6  5014               	movf	fputc@fp^0,w,c
  2547   0026D8  26D9               	addwf	fsr2l,f,c
  2548   0026DA  5015               	movf	(fputc@fp+1)^0,w,c
  2549   0026DC  22DA               	addwfc	fsr2h,f,c
  2550   0026DE  2ADE               	incf	postinc2,f,c
  2551   0026E0  0E00               	movlw	0
  2552   0026E2  22DD               	addwfc	postdec2,f,c
  2553   0026E4                     l1858:
  2554   0026E4  0012               	return		;funcret
  2555   0026E6                     __end_of_fputc:
  2556                           	callstack 0
  2557                           
  2558 ;; *************** function _putch *****************
  2559 ;; Defined at:
  2560 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  2561 ;; Parameters:    Size  Location     Type
  2562 ;;  c               1    wreg     unsigned char 
  2563 ;; Auto vars:     Size  Location     Type
  2564 ;;  c               1    0[COMRAM] unsigned char 
  2565 ;; Return value:  Size  Location     Type
  2566 ;;                  1    wreg      void 
  2567 ;; Registers used:
  2568 ;;		wreg
  2569 ;; Tracked objects:
  2570 ;;		On entry : 0/0
  2571 ;;		On exit  : 0/0
  2572 ;;		Unchanged: 0/0
  2573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2578 ;;Total ram usage:        0 bytes
  2579 ;; Hardware stack levels used: 1
  2580 ;; Hardware stack levels required when called: 6
  2581 ;; This function calls:
  2582 ;;		Nothing
  2583 ;; This function is called by:
  2584 ;;		_fputc
  2585 ;; This function uses a non-reentrant model
  2586 ;;
  2587                           
  2588                           	psect	text9
  2589   0033A6                     __ptext9:
  2590                           	callstack 0
  2591   0033A6                     _putch:
  2592                           	callstack 19
  2593   0033A6  0012               	return		;funcret
  2594   0033A8                     __end_of_putch:
  2595                           	callstack 0
  2596                           
  2597 ;; *************** function _abs *****************
  2598 ;; Defined at:
  2599 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  2600 ;; Parameters:    Size  Location     Type
  2601 ;;  a               2   23[COMRAM] int 
  2602 ;; Auto vars:     Size  Location     Type
  2603 ;;		None
  2604 ;; Return value:  Size  Location     Type
  2605 ;;                  2   23[COMRAM] int 
  2606 ;; Registers used:
  2607 ;;		wreg, status,2, status,0
  2608 ;; Tracked objects:
  2609 ;;		On entry : 0/0
  2610 ;;		On exit  : 0/0
  2611 ;;		Unchanged: 0/0
  2612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2613 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2615 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2616 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2617 ;;Total ram usage:        4 bytes
  2618 ;; Hardware stack levels used: 1
  2619 ;; Hardware stack levels required when called: 6
  2620 ;; This function calls:
  2621 ;;		Nothing
  2622 ;; This function is called by:
  2623 ;;		_dtoa
  2624 ;; This function uses a non-reentrant model
  2625 ;;
  2626                           
  2627                           	psect	text10
  2628   00310C                     __ptext10:
  2629                           	callstack 0
  2630   00310C                     _abs:
  2631                           	callstack 19
  2632   00310C  BE19               	btfsc	(abs@a+1)^0,7,c
  2633   00310E  EF93  F018         	goto	u6090
  2634   003112  5019               	movf	(abs@a+1)^0,w,c
  2635   003114  E106               	bnz	u6091
  2636   003116  0418               	decf	abs@a^0,w,c
  2637   003118  B0D8               	btfsc	status,0,c
  2638   00311A  EF91  F018         	goto	u6091
  2639   00311E  EF93  F018         	goto	u6090
  2640   003122                     u6091:
  2641   003122  EFA1  F018         	goto	l1843
  2642   003126                     u6090:
  2643   003126  C018  F01A         	movff	abs@a,??_abs
  2644   00312A  C019  F01B         	movff	abs@a+1,??_abs+1
  2645   00312E  1E1A               	comf	??_abs^0,f,c
  2646   003130  1E1B               	comf	(??_abs+1)^0,f,c
  2647   003132  4A1A               	infsnz	??_abs^0,f,c
  2648   003134  2A1B               	incf	(??_abs+1)^0,f,c
  2649   003136  C01A  F018         	movff	??_abs,?_abs
  2650   00313A  C01B  F019         	movff	??_abs+1,?_abs+1
  2651   00313E  EFA5  F018         	goto	l1846
  2652   003142                     l1843:
  2653   003142  C018  F018         	movff	abs@a,?_abs
  2654   003146  C019  F019         	movff	abs@a+1,?_abs+1
  2655   00314A                     l1846:
  2656   00314A  0012               	return		;funcret
  2657   00314C                     __end_of_abs:
  2658                           	callstack 0
  2659                           
  2660 ;; *************** function ___awmod *****************
  2661 ;; Defined at:
  2662 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  2663 ;; Parameters:    Size  Location     Type
  2664 ;;  dividend        2   17[COMRAM] int 
  2665 ;;  divisor         2   19[COMRAM] int 
  2666 ;; Auto vars:     Size  Location     Type
  2667 ;;  sign            1   22[COMRAM] unsigned char 
  2668 ;;  counter         1   21[COMRAM] unsigned char 
  2669 ;; Return value:  Size  Location     Type
  2670 ;;                  2   17[COMRAM] int 
  2671 ;; Registers used:
  2672 ;;		wreg, status,2, status,0
  2673 ;; Tracked objects:
  2674 ;;		On entry : 0/0
  2675 ;;		On exit  : 0/0
  2676 ;;		Unchanged: 0/0
  2677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2678 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2679 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2681 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2682 ;;Total ram usage:        6 bytes
  2683 ;; Hardware stack levels used: 1
  2684 ;; Hardware stack levels required when called: 6
  2685 ;; This function calls:
  2686 ;;		Nothing
  2687 ;; This function is called by:
  2688 ;;		_dtoa
  2689 ;; This function uses a non-reentrant model
  2690 ;;
  2691                           
  2692                           	psect	text11
  2693   002922                     __ptext11:
  2694                           	callstack 0
  2695   002922                     ___awmod:
  2696                           	callstack 19
  2697   002922  0E00               	movlw	0
  2698   002924  6E17               	movwf	___awmod@sign^0,c
  2699   002926  BE13               	btfsc	(___awmod@dividend+1)^0,7,c
  2700   002928  EF9A  F014         	goto	u6010
  2701   00292C  EF98  F014         	goto	u6011
  2702   002930                     u6011:
  2703   002930  EFA0  F014         	goto	l6477
  2704   002934                     u6010:
  2705   002934  6C12               	negf	___awmod@dividend^0,c
  2706   002936  1E13               	comf	(___awmod@dividend+1)^0,f,c
  2707   002938  B0D8               	btfsc	status,0,c
  2708   00293A  2A13               	incf	(___awmod@dividend+1)^0,f,c
  2709   00293C  0E01               	movlw	1
  2710   00293E  6E17               	movwf	___awmod@sign^0,c
  2711   002940                     l6477:
  2712   002940  BE15               	btfsc	(___awmod@divisor+1)^0,7,c
  2713   002942  EFA7  F014         	goto	u6020
  2714   002946  EFA5  F014         	goto	u6021
  2715   00294A                     u6021:
  2716   00294A  EFAB  F014         	goto	l6481
  2717   00294E                     u6020:
  2718   00294E  6C14               	negf	___awmod@divisor^0,c
  2719   002950  1E15               	comf	(___awmod@divisor+1)^0,f,c
  2720   002952  B0D8               	btfsc	status,0,c
  2721   002954  2A15               	incf	(___awmod@divisor+1)^0,f,c
  2722   002956                     l6481:
  2723   002956  5014               	movf	___awmod@divisor^0,w,c
  2724   002958  1015               	iorwf	(___awmod@divisor+1)^0,w,c
  2725   00295A  B4D8               	btfsc	status,2,c
  2726   00295C  EFB2  F014         	goto	u6031
  2727   002960  EFB4  F014         	goto	u6030
  2728   002964                     u6031:
  2729   002964  EFD8  F014         	goto	l6497
  2730   002968                     u6030:
  2731   002968  0E01               	movlw	1
  2732   00296A  6E16               	movwf	___awmod@counter^0,c
  2733   00296C  EFBC  F014         	goto	l6487
  2734   002970                     l6485:
  2735   002970  90D8               	bcf	status,0,c
  2736   002972  3614               	rlcf	___awmod@divisor^0,f,c
  2737   002974  3615               	rlcf	(___awmod@divisor+1)^0,f,c
  2738   002976  2A16               	incf	___awmod@counter^0,f,c
  2739   002978                     l6487:
  2740   002978  AE15               	btfss	(___awmod@divisor+1)^0,7,c
  2741   00297A  EFC1  F014         	goto	u6041
  2742   00297E  EFC3  F014         	goto	u6040
  2743   002982                     u6041:
  2744   002982  EFB8  F014         	goto	l6485
  2745   002986                     u6040:
  2746   002986                     l6489:
  2747   002986  5014               	movf	___awmod@divisor^0,w,c
  2748   002988  5C12               	subwf	___awmod@dividend^0,w,c
  2749   00298A  5015               	movf	(___awmod@divisor+1)^0,w,c
  2750   00298C  5813               	subwfb	(___awmod@dividend+1)^0,w,c
  2751   00298E  A0D8               	btfss	status,0,c
  2752   002990  EFCC  F014         	goto	u6051
  2753   002994  EFCE  F014         	goto	u6050
  2754   002998                     u6051:
  2755   002998  EFD2  F014         	goto	l6493
  2756   00299C                     u6050:
  2757   00299C  5014               	movf	___awmod@divisor^0,w,c
  2758   00299E  5E12               	subwf	___awmod@dividend^0,f,c
  2759   0029A0  5015               	movf	(___awmod@divisor+1)^0,w,c
  2760   0029A2  5A13               	subwfb	(___awmod@dividend+1)^0,f,c
  2761   0029A4                     l6493:
  2762   0029A4  90D8               	bcf	status,0,c
  2763   0029A6  3215               	rrcf	(___awmod@divisor+1)^0,f,c
  2764   0029A8  3214               	rrcf	___awmod@divisor^0,f,c
  2765   0029AA  2E16               	decfsz	___awmod@counter^0,f,c
  2766   0029AC  EFC3  F014         	goto	l6489
  2767   0029B0                     l6497:
  2768   0029B0  5017               	movf	___awmod@sign^0,w,c
  2769   0029B2  B4D8               	btfsc	status,2,c
  2770   0029B4  EFDE  F014         	goto	u6061
  2771   0029B8  EFE0  F014         	goto	u6060
  2772   0029BC                     u6061:
  2773   0029BC  EFE4  F014         	goto	l6501
  2774   0029C0                     u6060:
  2775   0029C0  6C12               	negf	___awmod@dividend^0,c
  2776   0029C2  1E13               	comf	(___awmod@dividend+1)^0,f,c
  2777   0029C4  B0D8               	btfsc	status,0,c
  2778   0029C6  2A13               	incf	(___awmod@dividend+1)^0,f,c
  2779   0029C8                     l6501:
  2780   0029C8  C012  F012         	movff	___awmod@dividend,?___awmod
  2781   0029CC  C013  F013         	movff	___awmod@dividend+1,?___awmod+1
  2782   0029D0  0012               	return		;funcret
  2783   0029D2                     __end_of___awmod:
  2784                           	callstack 0
  2785                           
  2786 ;; *************** function ___awdiv *****************
  2787 ;; Defined at:
  2788 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  2789 ;; Parameters:    Size  Location     Type
  2790 ;;  dividend        2   17[COMRAM] int 
  2791 ;;  divisor         2   19[COMRAM] int 
  2792 ;; Auto vars:     Size  Location     Type
  2793 ;;  quotient        2   23[COMRAM] int 
  2794 ;;  sign            1   22[COMRAM] unsigned char 
  2795 ;;  counter         1   21[COMRAM] unsigned char 
  2796 ;; Return value:  Size  Location     Type
  2797 ;;                  2   17[COMRAM] int 
  2798 ;; Registers used:
  2799 ;;		wreg, status,2, status,0
  2800 ;; Tracked objects:
  2801 ;;		On entry : 0/0
  2802 ;;		On exit  : 0/0
  2803 ;;		Unchanged: 0/0
  2804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2805 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2806 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2808 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2809 ;;Total ram usage:        8 bytes
  2810 ;; Hardware stack levels used: 1
  2811 ;; Hardware stack levels required when called: 6
  2812 ;; This function calls:
  2813 ;;		Nothing
  2814 ;; This function is called by:
  2815 ;;		_dtoa
  2816 ;; This function uses a non-reentrant model
  2817 ;;
  2818                           
  2819                           	psect	text12
  2820   0026E6                     __ptext12:
  2821                           	callstack 0
  2822   0026E6                     ___awdiv:
  2823                           	callstack 19
  2824   0026E6  0E00               	movlw	0
  2825   0026E8  6E17               	movwf	___awdiv@sign^0,c
  2826   0026EA  BE15               	btfsc	(___awdiv@divisor+1)^0,7,c
  2827   0026EC  EF7C  F013         	goto	u5950
  2828   0026F0  EF7A  F013         	goto	u5951
  2829   0026F4                     u5951:
  2830   0026F4  EF82  F013         	goto	l6433
  2831   0026F8                     u5950:
  2832   0026F8  6C14               	negf	___awdiv@divisor^0,c
  2833   0026FA  1E15               	comf	(___awdiv@divisor+1)^0,f,c
  2834   0026FC  B0D8               	btfsc	status,0,c
  2835   0026FE  2A15               	incf	(___awdiv@divisor+1)^0,f,c
  2836   002700  0E01               	movlw	1
  2837   002702  6E17               	movwf	___awdiv@sign^0,c
  2838   002704                     l6433:
  2839   002704  BE13               	btfsc	(___awdiv@dividend+1)^0,7,c
  2840   002706  EF89  F013         	goto	u5960
  2841   00270A  EF87  F013         	goto	u5961
  2842   00270E                     u5961:
  2843   00270E  EF8F  F013         	goto	l6439
  2844   002712                     u5960:
  2845   002712  6C12               	negf	___awdiv@dividend^0,c
  2846   002714  1E13               	comf	(___awdiv@dividend+1)^0,f,c
  2847   002716  B0D8               	btfsc	status,0,c
  2848   002718  2A13               	incf	(___awdiv@dividend+1)^0,f,c
  2849   00271A  0E01               	movlw	1
  2850   00271C  1A17               	xorwf	___awdiv@sign^0,f,c
  2851   00271E                     l6439:
  2852   00271E  0E00               	movlw	0
  2853   002720  6E19               	movwf	(___awdiv@quotient+1)^0,c
  2854   002722  0E00               	movlw	0
  2855   002724  6E18               	movwf	___awdiv@quotient^0,c
  2856   002726  5014               	movf	___awdiv@divisor^0,w,c
  2857   002728  1015               	iorwf	(___awdiv@divisor+1)^0,w,c
  2858   00272A  B4D8               	btfsc	status,2,c
  2859   00272C  EF9A  F013         	goto	u5971
  2860   002730  EF9C  F013         	goto	u5970
  2861   002734                     u5971:
  2862   002734  EFC4  F013         	goto	l6461
  2863   002738                     u5970:
  2864   002738  0E01               	movlw	1
  2865   00273A  6E16               	movwf	___awdiv@counter^0,c
  2866   00273C  EFA4  F013         	goto	l6447
  2867   002740                     l6445:
  2868   002740  90D8               	bcf	status,0,c
  2869   002742  3614               	rlcf	___awdiv@divisor^0,f,c
  2870   002744  3615               	rlcf	(___awdiv@divisor+1)^0,f,c
  2871   002746  2A16               	incf	___awdiv@counter^0,f,c
  2872   002748                     l6447:
  2873   002748  AE15               	btfss	(___awdiv@divisor+1)^0,7,c
  2874   00274A  EFA9  F013         	goto	u5981
  2875   00274E  EFAB  F013         	goto	u5980
  2876   002752                     u5981:
  2877   002752  EFA0  F013         	goto	l6445
  2878   002756                     u5980:
  2879   002756                     l6449:
  2880   002756  90D8               	bcf	status,0,c
  2881   002758  3618               	rlcf	___awdiv@quotient^0,f,c
  2882   00275A  3619               	rlcf	(___awdiv@quotient+1)^0,f,c
  2883   00275C  5014               	movf	___awdiv@divisor^0,w,c
  2884   00275E  5C12               	subwf	___awdiv@dividend^0,w,c
  2885   002760  5015               	movf	(___awdiv@divisor+1)^0,w,c
  2886   002762  5813               	subwfb	(___awdiv@dividend+1)^0,w,c
  2887   002764  A0D8               	btfss	status,0,c
  2888   002766  EFB7  F013         	goto	u5991
  2889   00276A  EFB9  F013         	goto	u5990
  2890   00276E                     u5991:
  2891   00276E  EFBE  F013         	goto	l6457
  2892   002772                     u5990:
  2893   002772  5014               	movf	___awdiv@divisor^0,w,c
  2894   002774  5E12               	subwf	___awdiv@dividend^0,f,c
  2895   002776  5015               	movf	(___awdiv@divisor+1)^0,w,c
  2896   002778  5A13               	subwfb	(___awdiv@dividend+1)^0,f,c
  2897   00277A  8018               	bsf	___awdiv@quotient^0,0,c
  2898   00277C                     l6457:
  2899   00277C  90D8               	bcf	status,0,c
  2900   00277E  3215               	rrcf	(___awdiv@divisor+1)^0,f,c
  2901   002780  3214               	rrcf	___awdiv@divisor^0,f,c
  2902   002782  2E16               	decfsz	___awdiv@counter^0,f,c
  2903   002784  EFAB  F013         	goto	l6449
  2904   002788                     l6461:
  2905   002788  5017               	movf	___awdiv@sign^0,w,c
  2906   00278A  B4D8               	btfsc	status,2,c
  2907   00278C  EFCA  F013         	goto	u6001
  2908   002790  EFCC  F013         	goto	u6000
  2909   002794                     u6001:
  2910   002794  EFD0  F013         	goto	l6465
  2911   002798                     u6000:
  2912   002798  6C18               	negf	___awdiv@quotient^0,c
  2913   00279A  1E19               	comf	(___awdiv@quotient+1)^0,f,c
  2914   00279C  B0D8               	btfsc	status,0,c
  2915   00279E  2A19               	incf	(___awdiv@quotient+1)^0,f,c
  2916   0027A0                     l6465:
  2917   0027A0  C018  F012         	movff	___awdiv@quotient,?___awdiv
  2918   0027A4  C019  F013         	movff	___awdiv@quotient+1,?___awdiv+1
  2919   0027A8  0012               	return		;funcret
  2920   0027AA                     __end_of___awdiv:
  2921                           	callstack 0
  2922                           
  2923 ;; *************** function _memset *****************
  2924 ;; Defined at:
  2925 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memset.c"
  2926 ;; Parameters:    Size  Location     Type
  2927 ;;  dest            2   17[COMRAM] PTR void 
  2928 ;;		 -> TEMP_2_txt(6), TEMP_1_txt(6), 
  2929 ;;  c               2   19[COMRAM] int 
  2930 ;;  n               2   21[COMRAM] unsigned int 
  2931 ;; Auto vars:     Size  Location     Type
  2932 ;;  s               2   27[COMRAM] PTR unsigned char 
  2933 ;;		 -> TEMP_2_txt(6), TEMP_1_txt(6), 
  2934 ;;  k               2   25[COMRAM] unsigned int 
  2935 ;; Return value:  Size  Location     Type
  2936 ;;                  2   17[COMRAM] PTR void 
  2937 ;; Registers used:
  2938 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2939 ;; Tracked objects:
  2940 ;;		On entry : 0/0
  2941 ;;		On exit  : 0/0
  2942 ;;		Unchanged: 0/0
  2943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2944 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2945 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2946 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2947 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2948 ;;Total ram usage:       12 bytes
  2949 ;; Hardware stack levels used: 1
  2950 ;; Hardware stack levels required when called: 6
  2951 ;; This function calls:
  2952 ;;		Nothing
  2953 ;; This function is called by:
  2954 ;;		_number_16bit_to_string
  2955 ;;		_number_8bit_to_string
  2956 ;;		_number_32bit_to_string
  2957 ;; This function uses a non-reentrant model
  2958 ;;
  2959                           
  2960                           	psect	text13
  2961   001D20                     __ptext13:
  2962                           	callstack 0
  2963   001D20                     _memset:
  2964                           	callstack 23
  2965   001D20  C012  F01C         	movff	memset@dest,memset@s
  2966   001D24  C013  F01D         	movff	memset@dest+1,memset@s+1
  2967   001D28  5016               	movf	memset@n^0,w,c
  2968   001D2A  1017               	iorwf	(memset@n+1)^0,w,c
  2969   001D2C  A4D8               	btfss	status,2,c
  2970   001D2E  EF9B  F00E         	goto	u3771
  2971   001D32  EF9D  F00E         	goto	u3770
  2972   001D36                     u3771:
  2973   001D36  EF9F  F00E         	goto	l4653
  2974   001D3A                     u3770:
  2975   001D3A  EF4A  F00F         	goto	l1768
  2976   001D3E                     l4653:
  2977   001D3E  C01C  FFD9         	movff	memset@s,fsr2l
  2978   001D42  C01D  FFDA         	movff	memset@s+1,fsr2h
  2979   001D46  C014  FFDF         	movff	memset@c,indf2
  2980   001D4A  5016               	movf	memset@n^0,w,c
  2981   001D4C  241C               	addwf	memset@s^0,w,c
  2982   001D4E  6E18               	movwf	??_memset^0,c
  2983   001D50  5017               	movf	(memset@n+1)^0,w,c
  2984   001D52  201D               	addwfc	(memset@s+1)^0,w,c
  2985   001D54  6E19               	movwf	(??_memset+1)^0,c
  2986   001D56  0EFF               	movlw	255
  2987   001D58  2418               	addwf	??_memset^0,w,c
  2988   001D5A  6ED9               	movwf	fsr2l,c
  2989   001D5C  0EFF               	movlw	255
  2990   001D5E  2019               	addwfc	(??_memset+1)^0,w,c
  2991   001D60  6EDA               	movwf	fsr2h,c
  2992   001D62  C014  FFDF         	movff	memset@c,indf2
  2993   001D66  5017               	movf	(memset@n+1)^0,w,c
  2994   001D68  E107               	bnz	u3781
  2995   001D6A  0E03               	movlw	3
  2996   001D6C  5C16               	subwf	memset@n^0,w,c
  2997   001D6E  B0D8               	btfsc	status,0,c
  2998   001D70  EFBC  F00E         	goto	u3781
  2999   001D74  EFBE  F00E         	goto	u3780
  3000   001D78                     u3781:
  3001   001D78  EFC0  F00E         	goto	l4659
  3002   001D7C                     u3780:
  3003   001D7C  EF4A  F00F         	goto	l1768
  3004   001D80                     l4659:
  3005   001D80  EE20 F001          	lfsr	2,1
  3006   001D84  501C               	movf	memset@s^0,w,c
  3007   001D86  26D9               	addwf	fsr2l,f,c
  3008   001D88  501D               	movf	(memset@s+1)^0,w,c
  3009   001D8A  22DA               	addwfc	fsr2h,f,c
  3010   001D8C  C014  FFDF         	movff	memset@c,indf2
  3011   001D90  EE20 F002          	lfsr	2,2
  3012   001D94  501C               	movf	memset@s^0,w,c
  3013   001D96  26D9               	addwf	fsr2l,f,c
  3014   001D98  501D               	movf	(memset@s+1)^0,w,c
  3015   001D9A  22DA               	addwfc	fsr2h,f,c
  3016   001D9C  C014  FFDF         	movff	memset@c,indf2
  3017   001DA0  5016               	movf	memset@n^0,w,c
  3018   001DA2  241C               	addwf	memset@s^0,w,c
  3019   001DA4  6E18               	movwf	??_memset^0,c
  3020   001DA6  5017               	movf	(memset@n+1)^0,w,c
  3021   001DA8  201D               	addwfc	(memset@s+1)^0,w,c
  3022   001DAA  6E19               	movwf	(??_memset+1)^0,c
  3023   001DAC  0EFE               	movlw	254
  3024   001DAE  2418               	addwf	??_memset^0,w,c
  3025   001DB0  6ED9               	movwf	fsr2l,c
  3026   001DB2  0EFF               	movlw	255
  3027   001DB4  2019               	addwfc	(??_memset+1)^0,w,c
  3028   001DB6  6EDA               	movwf	fsr2h,c
  3029   001DB8  C014  FFDF         	movff	memset@c,indf2
  3030   001DBC  5016               	movf	memset@n^0,w,c
  3031   001DBE  241C               	addwf	memset@s^0,w,c
  3032   001DC0  6E18               	movwf	??_memset^0,c
  3033   001DC2  5017               	movf	(memset@n+1)^0,w,c
  3034   001DC4  201D               	addwfc	(memset@s+1)^0,w,c
  3035   001DC6  6E19               	movwf	(??_memset+1)^0,c
  3036   001DC8  0EFD               	movlw	253
  3037   001DCA  2418               	addwf	??_memset^0,w,c
  3038   001DCC  6ED9               	movwf	fsr2l,c
  3039   001DCE  0EFF               	movlw	255
  3040   001DD0  2019               	addwfc	(??_memset+1)^0,w,c
  3041   001DD2  6EDA               	movwf	fsr2h,c
  3042   001DD4  C014  FFDF         	movff	memset@c,indf2
  3043   001DD8  5017               	movf	(memset@n+1)^0,w,c
  3044   001DDA  E107               	bnz	u3791
  3045   001DDC  0E07               	movlw	7
  3046   001DDE  5C16               	subwf	memset@n^0,w,c
  3047   001DE0  B0D8               	btfsc	status,0,c
  3048   001DE2  EFF5  F00E         	goto	u3791
  3049   001DE6  EFF7  F00E         	goto	u3790
  3050   001DEA                     u3791:
  3051   001DEA  EFF9  F00E         	goto	l4665
  3052   001DEE                     u3790:
  3053   001DEE  EF4A  F00F         	goto	l1768
  3054   001DF2                     l4665:
  3055   001DF2  EE20 F003          	lfsr	2,3
  3056   001DF6  501C               	movf	memset@s^0,w,c
  3057   001DF8  26D9               	addwf	fsr2l,f,c
  3058   001DFA  501D               	movf	(memset@s+1)^0,w,c
  3059   001DFC  22DA               	addwfc	fsr2h,f,c
  3060   001DFE  C014  FFDF         	movff	memset@c,indf2
  3061   001E02  5016               	movf	memset@n^0,w,c
  3062   001E04  241C               	addwf	memset@s^0,w,c
  3063   001E06  6E18               	movwf	??_memset^0,c
  3064   001E08  5017               	movf	(memset@n+1)^0,w,c
  3065   001E0A  201D               	addwfc	(memset@s+1)^0,w,c
  3066   001E0C  6E19               	movwf	(??_memset+1)^0,c
  3067   001E0E  0EFC               	movlw	252
  3068   001E10  2418               	addwf	??_memset^0,w,c
  3069   001E12  6ED9               	movwf	fsr2l,c
  3070   001E14  0EFF               	movlw	255
  3071   001E16  2019               	addwfc	(??_memset+1)^0,w,c
  3072   001E18  6EDA               	movwf	fsr2h,c
  3073   001E1A  C014  FFDF         	movff	memset@c,indf2
  3074   001E1E  5017               	movf	(memset@n+1)^0,w,c
  3075   001E20  E107               	bnz	u3801
  3076   001E22  0E09               	movlw	9
  3077   001E24  5C16               	subwf	memset@n^0,w,c
  3078   001E26  B0D8               	btfsc	status,0,c
  3079   001E28  EF18  F00F         	goto	u3801
  3080   001E2C  EF1A  F00F         	goto	u3800
  3081   001E30                     u3801:
  3082   001E30  EF1C  F00F         	goto	l4671
  3083   001E34                     u3800:
  3084   001E34  EF4A  F00F         	goto	l1768
  3085   001E38                     l4671:
  3086   001E38  C01C  F018         	movff	memset@s,??_memset
  3087   001E3C  C01D  F019         	movff	memset@s+1,??_memset+1
  3088   001E40  1E18               	comf	??_memset^0,f,c
  3089   001E42  1E19               	comf	(??_memset+1)^0,f,c
  3090   001E44  4A18               	infsnz	??_memset^0,f,c
  3091   001E46  2A19               	incf	(??_memset+1)^0,f,c
  3092   001E48  0E03               	movlw	3
  3093   001E4A  1418               	andwf	??_memset^0,w,c
  3094   001E4C  6E1A               	movwf	memset@k^0,c
  3095   001E4E  6A1B               	clrf	(memset@k+1)^0,c
  3096   001E50  501A               	movf	memset@k^0,w,c
  3097   001E52  261C               	addwf	memset@s^0,f,c
  3098   001E54  501B               	movf	(memset@k+1)^0,w,c
  3099   001E56  221D               	addwfc	(memset@s+1)^0,f,c
  3100   001E58  501A               	movf	memset@k^0,w,c
  3101   001E5A  5E16               	subwf	memset@n^0,f,c
  3102   001E5C  501B               	movf	(memset@k+1)^0,w,c
  3103   001E5E  5A17               	subwfb	(memset@n+1)^0,f,c
  3104   001E60  0EFC               	movlw	252
  3105   001E62  1616               	andwf	memset@n^0,f,c
  3106   001E64  0EFF               	movlw	255
  3107   001E66  1617               	andwf	(memset@n+1)^0,f,c
  3108   001E68  EF41  F00F         	goto	l4679
  3109   001E6C                     l4673:
  3110   001E6C  C01C  FFD9         	movff	memset@s,fsr2l
  3111   001E70  C01D  FFDA         	movff	memset@s+1,fsr2h
  3112   001E74  C014  FFDF         	movff	memset@c,indf2
  3113   001E78  0616               	decf	memset@n^0,f,c
  3114   001E7A  A0D8               	btfss	status,0,c
  3115   001E7C  0617               	decf	(memset@n+1)^0,f,c
  3116   001E7E  4A1C               	infsnz	memset@s^0,f,c
  3117   001E80  2A1D               	incf	(memset@s+1)^0,f,c
  3118   001E82                     l4679:
  3119   001E82  5016               	movf	memset@n^0,w,c
  3120   001E84  1017               	iorwf	(memset@n+1)^0,w,c
  3121   001E86  A4D8               	btfss	status,2,c
  3122   001E88  EF48  F00F         	goto	u3811
  3123   001E8C  EF4A  F00F         	goto	u3810
  3124   001E90                     u3811:
  3125   001E90  EF36  F00F         	goto	l4673
  3126   001E94                     u3810:
  3127   001E94                     l1768:
  3128   001E94  0012               	return		;funcret
  3129   001E96                     __end_of_memset:
  3130                           	callstack 0
  3131                           
  3132 ;; *************** function _lcd_4bits_send_string_pos *****************
  3133 ;; Defined at:
  3134 ;;		line 111 in file "ECU_Layer/LCD/Lcd.c"
  3135 ;; Parameters:    Size  Location     Type
  3136 ;;  lcd             2   41[COMRAM] PTR const struct .
  3137 ;;		 -> lcd_1(6), 
  3138 ;;  data            2   43[COMRAM] PTR unsigned char 
  3139 ;;		 -> STR_6(7), STR_5(7), STR_4(9), TEMP_2_txt(6), 
  3140 ;;		 -> TEMP_1_txt(6), 
  3141 ;;  ROW             1   45[COMRAM] unsigned char 
  3142 ;;  COLUMN          1   46[COMRAM] unsigned char 
  3143 ;; Auto vars:     Size  Location     Type
  3144 ;;  ret             1   47[COMRAM] unsigned char 
  3145 ;; Return value:  Size  Location     Type
  3146 ;;                  1    wreg      unsigned char 
  3147 ;; Registers used:
  3148 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3149 ;; Tracked objects:
  3150 ;;		On entry : 0/0
  3151 ;;		On exit  : 0/0
  3152 ;;		Unchanged: 0/0
  3153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3154 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3155 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3157 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3158 ;;Total ram usage:        7 bytes
  3159 ;; Hardware stack levels used: 1
  3160 ;; Hardware stack levels required when called: 10
  3161 ;; This function calls:
  3162 ;;		_lcd_4bits_send_string
  3163 ;;		_lcd_4bits_set_cursor
  3164 ;; This function is called by:
  3165 ;;		_main
  3166 ;; This function uses a non-reentrant model
  3167 ;;
  3168                           
  3169                           	psect	text14
  3170   002FF4                     __ptext14:
  3171                           	callstack 0
  3172   002FF4                     _lcd_4bits_send_string_pos:
  3173                           	callstack 20
  3174   002FF4                     
  3175                           ;ECU_Layer/LCD/Lcd.c: 115:     if(lcd == ((void*)0)){
  3176   002FF4  502A               	movf	lcd_4bits_send_string_pos@lcd^0,w,c
  3177   002FF6  102B               	iorwf	(lcd_4bits_send_string_pos@lcd+1)^0,w,c
  3178   002FF8  A4D8               	btfss	status,2,c
  3179   002FFA  EF01  F018         	goto	u3911
  3180   002FFE  EF03  F018         	goto	u3910
  3181   003002                     u3911:
  3182   003002  EF07  F018         	goto	l4807
  3183   003006                     u3910:
  3184   003006                     
  3185                           ;ECU_Layer/LCD/Lcd.c: 116:         ret = (Std_ReturnType)0x01;
  3186   003006  0E01               	movlw	1
  3187   003008  6E30               	movwf	lcd_4bits_send_string_pos@ret^0,c
  3188                           
  3189                           ;ECU_Layer/LCD/Lcd.c: 117:     }
  3190   00300A  EF1C  F018         	goto	l4811
  3191   00300E                     l4807:
  3192   00300E  C02A  F024         	movff	lcd_4bits_send_string_pos@lcd,lcd_4bits_set_cursor@lcd
  3193   003012  C02B  F025         	movff	lcd_4bits_send_string_pos@lcd+1,lcd_4bits_set_cursor@lcd+1
  3194   003016  C02E  F026         	movff	lcd_4bits_send_string_pos@ROW,lcd_4bits_set_cursor@ROW
  3195   00301A  C02F  F027         	movff	lcd_4bits_send_string_pos@COLUMN,lcd_4bits_set_cursor@COLUMN
  3196   00301E  ECE9  F014         	call	_lcd_4bits_set_cursor	;wreg free
  3197   003022                     
  3198                           ;ECU_Layer/LCD/Lcd.c: 120:         ret = lcd_4bits_send_string(lcd , data);
  3199   003022  C02A  F024         	movff	lcd_4bits_send_string_pos@lcd,lcd_4bits_send_string@lcd
  3200   003026  C02B  F025         	movff	lcd_4bits_send_string_pos@lcd+1,lcd_4bits_send_string@lcd+1
  3201   00302A  C02C  F026         	movff	lcd_4bits_send_string_pos@data,lcd_4bits_send_string@data
  3202   00302E  C02D  F027         	movff	lcd_4bits_send_string_pos@data+1,lcd_4bits_send_string@data+1
  3203   003032  EC3F  F015         	call	_lcd_4bits_send_string	;wreg free
  3204   003036  6E30               	movwf	lcd_4bits_send_string_pos@ret^0,c
  3205   003038                     l4811:
  3206                           
  3207                           ;ECU_Layer/LCD/Lcd.c: 122:     return ret;
  3208   003038  5030               	movf	lcd_4bits_send_string_pos@ret^0,w,c
  3209   00303A  0012               	return		;funcret
  3210   00303C                     __end_of_lcd_4bits_send_string_pos:
  3211                           	callstack 0
  3212                           
  3213 ;; *************** function _lcd_4bits_set_cursor *****************
  3214 ;; Defined at:
  3215 ;;		line 144 in file "ECU_Layer/LCD/Lcd.c"
  3216 ;; Parameters:    Size  Location     Type
  3217 ;;  lcd             2   35[COMRAM] PTR const struct .
  3218 ;;		 -> lcd_1(6), 
  3219 ;;  ROW             1   37[COMRAM] unsigned char 
  3220 ;;  COLUMN          1   38[COMRAM] unsigned char 
  3221 ;; Auto vars:     Size  Location     Type
  3222 ;;  ret             1    0        unsigned char 
  3223 ;; Return value:  Size  Location     Type
  3224 ;;                  1    wreg      unsigned char 
  3225 ;; Registers used:
  3226 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3227 ;; Tracked objects:
  3228 ;;		On entry : 0/0
  3229 ;;		On exit  : 0/0
  3230 ;;		Unchanged: 0/0
  3231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3232 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3234 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3235 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3236 ;;Total ram usage:        6 bytes
  3237 ;; Hardware stack levels used: 1
  3238 ;; Hardware stack levels required when called: 9
  3239 ;; This function calls:
  3240 ;;		_lcd_4bits_send_command
  3241 ;; This function is called by:
  3242 ;;		_lcd_4bits_send_string_pos
  3243 ;;		_lcd_4bits_send_char_pos
  3244 ;; This function uses a non-reentrant model
  3245 ;;
  3246                           
  3247                           	psect	text15
  3248   0029D2                     __ptext15:
  3249                           	callstack 0
  3250   0029D2                     _lcd_4bits_set_cursor:
  3251                           	callstack 20
  3252   0029D2                     
  3253                           ;ECU_Layer/LCD/Lcd.c: 148:     if(lcd == ((void*)0)){
  3254   0029D2  5024               	movf	lcd_4bits_set_cursor@lcd^0,w,c
  3255   0029D4  1025               	iorwf	(lcd_4bits_set_cursor@lcd+1)^0,w,c
  3256   0029D6  A4D8               	btfss	status,2,c
  3257   0029D8  EFF0  F014         	goto	u3691
  3258   0029DC  EFF2  F014         	goto	u3690
  3259   0029E0                     u3691:
  3260   0029E0  EF20  F015         	goto	l4597
  3261   0029E4                     u3690:
  3262   0029E4                     
  3263                           ;ECU_Layer/LCD/Lcd.c: 150:     }
  3264   0029E4  EF3D  F015         	goto	l4599
  3265   0029E8                     l4589:
  3266   0029E8  C024  F020         	movff	lcd_4bits_set_cursor@lcd,lcd_4bits_send_command@lcd
  3267   0029EC  C025  F021         	movff	lcd_4bits_set_cursor@lcd+1,lcd_4bits_send_command@lcd+1
  3268   0029F0  5027               	movf	lcd_4bits_set_cursor@COLUMN^0,w,c
  3269   0029F2  0F80               	addlw	128
  3270   0029F4  6E22               	movwf	lcd_4bits_send_command@command^0,c
  3271   0029F6  EC40  F016         	call	_lcd_4bits_send_command	;wreg free
  3272   0029FA  EF3D  F015         	goto	l4599
  3273   0029FE                     l4591:
  3274   0029FE  C024  F020         	movff	lcd_4bits_set_cursor@lcd,lcd_4bits_send_command@lcd
  3275   002A02  C025  F021         	movff	lcd_4bits_set_cursor@lcd+1,lcd_4bits_send_command@lcd+1
  3276   002A06  5027               	movf	lcd_4bits_set_cursor@COLUMN^0,w,c
  3277   002A08  0FC0               	addlw	192
  3278   002A0A  6E22               	movwf	lcd_4bits_send_command@command^0,c
  3279   002A0C  EC40  F016         	call	_lcd_4bits_send_command	;wreg free
  3280   002A10  EF3D  F015         	goto	l4599
  3281   002A14                     l4593:
  3282   002A14  C024  F020         	movff	lcd_4bits_set_cursor@lcd,lcd_4bits_send_command@lcd
  3283   002A18  C025  F021         	movff	lcd_4bits_set_cursor@lcd+1,lcd_4bits_send_command@lcd+1
  3284   002A1C  5027               	movf	lcd_4bits_set_cursor@COLUMN^0,w,c
  3285   002A1E  0F94               	addlw	148
  3286   002A20  6E22               	movwf	lcd_4bits_send_command@command^0,c
  3287   002A22  EC40  F016         	call	_lcd_4bits_send_command	;wreg free
  3288   002A26  EF3D  F015         	goto	l4599
  3289   002A2A                     l4595:
  3290   002A2A  C024  F020         	movff	lcd_4bits_set_cursor@lcd,lcd_4bits_send_command@lcd
  3291   002A2E  C025  F021         	movff	lcd_4bits_set_cursor@lcd+1,lcd_4bits_send_command@lcd+1
  3292   002A32  5027               	movf	lcd_4bits_set_cursor@COLUMN^0,w,c
  3293   002A34  0FD4               	addlw	212
  3294   002A36  6E22               	movwf	lcd_4bits_send_command@command^0,c
  3295   002A38  EC40  F016         	call	_lcd_4bits_send_command	;wreg free
  3296   002A3C  EF3D  F015         	goto	l4599
  3297   002A40                     l4597:
  3298   002A40  5026               	movf	lcd_4bits_set_cursor@ROW^0,w,c
  3299   002A42  6E28               	movwf	??_lcd_4bits_set_cursor^0,c
  3300   002A44  6A29               	clrf	(??_lcd_4bits_set_cursor+1)^0,c
  3301                           
  3302                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3303                           ; Switch size 1, requested type "simple"
  3304                           ; Number of cases is 1, Range of values is 0 to 0
  3305                           ; switch strategies available:
  3306                           ; Name         Instructions Cycles
  3307                           ; simple_byte            4     3 (average)
  3308                           ;	Chosen strategy is simple_byte
  3309   002A46  5029               	movf	(??_lcd_4bits_set_cursor+1)^0,w,c
  3310   002A48  0A00               	xorlw	0	; case 0
  3311   002A4A  B4D8               	btfsc	status,2,c
  3312   002A4C  EF2A  F015         	goto	l6875
  3313   002A50  EF3D  F015         	goto	l4599
  3314   002A54                     l6875:
  3315                           
  3316                           ; Switch size 1, requested type "simple"
  3317                           ; Number of cases is 4, Range of values is 1 to 4
  3318                           ; switch strategies available:
  3319                           ; Name         Instructions Cycles
  3320                           ; simple_byte           13     7 (average)
  3321                           ;	Chosen strategy is simple_byte
  3322   002A54  5028               	movf	??_lcd_4bits_set_cursor^0,w,c
  3323   002A56  0A01               	xorlw	1	; case 1
  3324   002A58  B4D8               	btfsc	status,2,c
  3325   002A5A  EFF4  F014         	goto	l4589
  3326   002A5E  0A03               	xorlw	3	; case 2
  3327   002A60  B4D8               	btfsc	status,2,c
  3328   002A62  EFFF  F014         	goto	l4591
  3329   002A66  0A01               	xorlw	1	; case 3
  3330   002A68  B4D8               	btfsc	status,2,c
  3331   002A6A  EF0A  F015         	goto	l4593
  3332   002A6E  0A07               	xorlw	7	; case 4
  3333   002A70  B4D8               	btfsc	status,2,c
  3334   002A72  EF15  F015         	goto	l4595
  3335   002A76  EF3D  F015         	goto	l4599
  3336   002A7A                     l4599:
  3337                           
  3338                           ;ECU_Layer/LCD/Lcd.c: 160:     return ret;
  3339   002A7A  0E01               	movlw	1
  3340   002A7C  0012               	return		;funcret
  3341   002A7E                     __end_of_lcd_4bits_set_cursor:
  3342                           	callstack 0
  3343                           
  3344 ;; *************** function _lcd_4bits_send_string *****************
  3345 ;; Defined at:
  3346 ;;		line 97 in file "ECU_Layer/LCD/Lcd.c"
  3347 ;; Parameters:    Size  Location     Type
  3348 ;;  lcd             2   35[COMRAM] PTR const struct .
  3349 ;;		 -> lcd_1(6), 
  3350 ;;  data            2   37[COMRAM] PTR unsigned char 
  3351 ;;		 -> STR_6(7), STR_5(7), STR_4(9), TEMP_2_txt(6), 
  3352 ;;		 -> TEMP_1_txt(6), 
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;  ret             1   39[COMRAM] unsigned char 
  3355 ;; Return value:  Size  Location     Type
  3356 ;;                  1    wreg      unsigned char 
  3357 ;; Registers used:
  3358 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3359 ;; Tracked objects:
  3360 ;;		On entry : 0/0
  3361 ;;		On exit  : 0/0
  3362 ;;		Unchanged: 0/0
  3363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3364 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3365 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3367 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3368 ;;Total ram usage:        5 bytes
  3369 ;; Hardware stack levels used: 1
  3370 ;; Hardware stack levels required when called: 9
  3371 ;; This function calls:
  3372 ;;		_lcd_4bits_send_char
  3373 ;; This function is called by:
  3374 ;;		_lcd_4bits_send_string_pos
  3375 ;; This function uses a non-reentrant model
  3376 ;;
  3377                           
  3378                           	psect	text16
  3379   002A7E                     __ptext16:
  3380                           	callstack 0
  3381   002A7E                     _lcd_4bits_send_string:
  3382                           	callstack 20
  3383   002A7E                     
  3384                           ;ECU_Layer/LCD/Lcd.c: 99:     Std_ReturnType ret = (Std_ReturnType)0x01;
  3385   002A7E  0E01               	movlw	1
  3386   002A80  6E28               	movwf	lcd_4bits_send_string@ret^0,c
  3387   002A82                     
  3388                           ;ECU_Layer/LCD/Lcd.c: 100:     if(lcd == ((void*)0)){
  3389   002A82  5024               	movf	lcd_4bits_send_string@lcd^0,w,c
  3390   002A84  1025               	iorwf	(lcd_4bits_send_string@lcd+1)^0,w,c
  3391   002A86  A4D8               	btfss	status,2,c
  3392   002A88  EF48  F015         	goto	u3701
  3393   002A8C  EF4A  F015         	goto	u3700
  3394   002A90                     u3701:
  3395   002A90  EF69  F015         	goto	l4617
  3396   002A94                     u3700:
  3397   002A94                     
  3398                           ;ECU_Layer/LCD/Lcd.c: 101:         ret = (Std_ReturnType)0x01;
  3399   002A94  0E01               	movlw	1
  3400   002A96  6E28               	movwf	lcd_4bits_send_string@ret^0,c
  3401                           
  3402                           ;ECU_Layer/LCD/Lcd.c: 102:     }
  3403   002A98  EF82  F015         	goto	l4619
  3404   002A9C                     l4613:
  3405                           
  3406                           ;ECU_Layer/LCD/Lcd.c: 105:             ret = lcd_4bits_send_char(lcd , *data++);
  3407   002A9C  C024  F020         	movff	lcd_4bits_send_string@lcd,lcd_4bits_send_char@lcd
  3408   002AA0  C025  F021         	movff	lcd_4bits_send_string@lcd+1,lcd_4bits_send_char@lcd+1
  3409   002AA4  C026  FFF6         	movff	lcd_4bits_send_string@data,tblptrl
  3410   002AA8  C027  FFF7         	movff	lcd_4bits_send_string@data+1,tblptrh
  3411   002AAC  0E00               	movlw	low (__smallconst shr (0+16))
  3412   002AAE  6EF8               	movwf	tblptru,c
  3413   002AB0  0E0F               	movlw	(high __ramtop+-1)
  3414   002AB2  64F7               	cpfsgt	tblptrh,c
  3415   002AB4  D003               	bra	u3717
  3416   002AB6  0008               	tblrd		*
  3417   002AB8  50F5               	movf	tablat,w,c
  3418   002ABA  D005               	bra	u3710
  3419   002ABC                     u3717:
  3420   002ABC  CFF6 FFE9          	movff	tblptrl,fsr0l
  3421   002AC0  CFF7 FFEA          	movff	tblptrh,fsr0h
  3422   002AC4  50EF               	movf	indf0,w,c
  3423   002AC6                     u3710:
  3424   002AC6  6E22               	movwf	lcd_4bits_send_char@data^0,c
  3425   002AC8  EC05  F016         	call	_lcd_4bits_send_char	;wreg free
  3426   002ACC  6E28               	movwf	lcd_4bits_send_string@ret^0,c
  3427   002ACE  4A26               	infsnz	lcd_4bits_send_string@data^0,f,c
  3428   002AD0  2A27               	incf	(lcd_4bits_send_string@data+1)^0,f,c
  3429   002AD2                     l4617:
  3430                           
  3431                           ;ECU_Layer/LCD/Lcd.c: 104:         while(*data){
  3432   002AD2  C026  FFF6         	movff	lcd_4bits_send_string@data,tblptrl
  3433   002AD6  C027  FFF7         	movff	lcd_4bits_send_string@data+1,tblptrh
  3434   002ADA  0E00               	movlw	low (__smallconst shr (0+16))
  3435   002ADC  6EF8               	movwf	tblptru,c
  3436   002ADE  0E0F               	movlw	(high __ramtop+-1)
  3437   002AE0  64F7               	cpfsgt	tblptrh,c
  3438   002AE2  D003               	bra	u3727
  3439   002AE4  0008               	tblrd		*
  3440   002AE6  50F5               	movf	tablat,w,c
  3441   002AE8  D005               	bra	u3720
  3442   002AEA                     u3727:
  3443   002AEA  CFF6 FFE9          	movff	tblptrl,fsr0l
  3444   002AEE  CFF7 FFEA          	movff	tblptrh,fsr0h
  3445   002AF2  50EF               	movf	indf0,w,c
  3446   002AF4                     u3720:
  3447   002AF4  0900               	iorlw	0
  3448   002AF6  A4D8               	btfss	status,2,c
  3449   002AF8  EF80  F015         	goto	u3731
  3450   002AFC  EF82  F015         	goto	u3730
  3451   002B00                     u3731:
  3452   002B00  EF4E  F015         	goto	l4613
  3453   002B04                     u3730:
  3454   002B04                     l4619:
  3455                           
  3456                           ;ECU_Layer/LCD/Lcd.c: 108:     return ret;
  3457   002B04  5028               	movf	lcd_4bits_send_string@ret^0,w,c
  3458   002B06  0012               	return		;funcret
  3459   002B08                     __end_of_lcd_4bits_send_string:
  3460                           	callstack 0
  3461                           
  3462 ;; *************** function _lcd_4bits_send_char *****************
  3463 ;; Defined at:
  3464 ;;		line 66 in file "ECU_Layer/LCD/Lcd.c"
  3465 ;; Parameters:    Size  Location     Type
  3466 ;;  lcd             2   31[COMRAM] PTR const struct .
  3467 ;;		 -> lcd_1(6), 
  3468 ;;  data            1   33[COMRAM] unsigned char 
  3469 ;; Auto vars:     Size  Location     Type
  3470 ;;  ret             1   34[COMRAM] unsigned char 
  3471 ;; Return value:  Size  Location     Type
  3472 ;;                  1    wreg      unsigned char 
  3473 ;; Registers used:
  3474 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3475 ;; Tracked objects:
  3476 ;;		On entry : 0/0
  3477 ;;		On exit  : 0/0
  3478 ;;		Unchanged: 0/0
  3479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3480 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3481 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3483 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3484 ;;Total ram usage:        4 bytes
  3485 ;; Hardware stack levels used: 1
  3486 ;; Hardware stack levels required when called: 8
  3487 ;; This function calls:
  3488 ;;		_enable_pin_4bits
  3489 ;;		_gpio_pin_write_logic
  3490 ;;		_send_4bits
  3491 ;; This function is called by:
  3492 ;;		_lcd_4bits_send_string
  3493 ;;		_lcd_4bits_send_char_pos
  3494 ;;		_lcd_4bits_send_custom_char
  3495 ;; This function uses a non-reentrant model
  3496 ;;
  3497                           
  3498                           	psect	text17
  3499   002C0A                     __ptext17:
  3500                           	callstack 0
  3501   002C0A                     _lcd_4bits_send_char:
  3502                           	callstack 20
  3503   002C0A                     
  3504                           ;ECU_Layer/LCD/Lcd.c: 70:     if(lcd == ((void*)0)){
  3505   002C0A  5020               	movf	lcd_4bits_send_char@lcd^0,w,c
  3506   002C0C  1021               	iorwf	(lcd_4bits_send_char@lcd+1)^0,w,c
  3507   002C0E  A4D8               	btfss	status,2,c
  3508   002C10  EF0C  F016         	goto	u3601
  3509   002C14  EF0E  F016         	goto	u3600
  3510   002C18                     u3601:
  3511   002C18  EF12  F016         	goto	l4497
  3512   002C1C                     u3600:
  3513   002C1C                     
  3514                           ;ECU_Layer/LCD/Lcd.c: 71:         ret = (Std_ReturnType)0x01;
  3515   002C1C  0E01               	movlw	1
  3516   002C1E  6E23               	movwf	lcd_4bits_send_char@ret^0,c
  3517                           
  3518                           ;ECU_Layer/LCD/Lcd.c: 72:     }
  3519   002C20  EF3E  F016         	goto	l4499
  3520   002C24                     l4497:
  3521                           
  3522                           ;ECU_Layer/LCD/Lcd.c: 74:         ret = gpio_pin_write_logic(&(lcd->RS_REG), GPIO_HIGH);
  3523   002C24  0E04               	movlw	4
  3524   002C26  2420               	addwf	lcd_4bits_send_char@lcd^0,w,c
  3525   002C28  6E12               	movwf	gpio_pin_write_logic@str^0,c
  3526   002C2A  0E00               	movlw	0
  3527   002C2C  2021               	addwfc	(lcd_4bits_send_char@lcd+1)^0,w,c
  3528   002C2E  6E13               	movwf	(gpio_pin_write_logic@str+1)^0,c
  3529   002C30  0E01               	movlw	1
  3530   002C32  6E14               	movwf	gpio_pin_write_logic@LOG^0,c
  3531   002C34  EC71  F010         	call	_gpio_pin_write_logic	;wreg free
  3532   002C38  6E23               	movwf	lcd_4bits_send_char@ret^0,c
  3533                           
  3534                           ;ECU_Layer/LCD/Lcd.c: 75:         ret = send_4bits(lcd , data >> 4 );
  3535   002C3A  C020  F01B         	movff	lcd_4bits_send_char@lcd,send_4bits@lcd
  3536   002C3E  C021  F01C         	movff	lcd_4bits_send_char@lcd+1,send_4bits@lcd+1
  3537   002C42  3822               	swapf	lcd_4bits_send_char@data^0,w,c
  3538   002C44  0B0F               	andlw	15
  3539   002C46  6E1D               	movwf	send_4bits@command^0,c
  3540   002C48  EC84  F015         	call	_send_4bits	;wreg free
  3541   002C4C  6E23               	movwf	lcd_4bits_send_char@ret^0,c
  3542                           
  3543                           ;ECU_Layer/LCD/Lcd.c: 76:         ret = enable_pin_4bits(lcd);
  3544   002C4E  C020  F01B         	movff	lcd_4bits_send_char@lcd,enable_pin_4bits@lcd
  3545   002C52  C021  F01C         	movff	lcd_4bits_send_char@lcd+1,enable_pin_4bits@lcd+1
  3546   002C56  EC7F  F017         	call	_enable_pin_4bits	;wreg free
  3547   002C5A  6E23               	movwf	lcd_4bits_send_char@ret^0,c
  3548                           
  3549                           ;ECU_Layer/LCD/Lcd.c: 77:         ret = send_4bits(lcd , data);
  3550   002C5C  C020  F01B         	movff	lcd_4bits_send_char@lcd,send_4bits@lcd
  3551   002C60  C021  F01C         	movff	lcd_4bits_send_char@lcd+1,send_4bits@lcd+1
  3552   002C64  C022  F01D         	movff	lcd_4bits_send_char@data,send_4bits@command
  3553   002C68  EC84  F015         	call	_send_4bits	;wreg free
  3554   002C6C  6E23               	movwf	lcd_4bits_send_char@ret^0,c
  3555                           
  3556                           ;ECU_Layer/LCD/Lcd.c: 78:         ret = enable_pin_4bits(lcd);
  3557   002C6E  C020  F01B         	movff	lcd_4bits_send_char@lcd,enable_pin_4bits@lcd
  3558   002C72  C021  F01C         	movff	lcd_4bits_send_char@lcd+1,enable_pin_4bits@lcd+1
  3559   002C76  EC7F  F017         	call	_enable_pin_4bits	;wreg free
  3560   002C7A  6E23               	movwf	lcd_4bits_send_char@ret^0,c
  3561   002C7C                     l4499:
  3562                           
  3563                           ;ECU_Layer/LCD/Lcd.c: 80:     return ret;
  3564   002C7C  5023               	movf	lcd_4bits_send_char@ret^0,w,c
  3565   002C7E  0012               	return		;funcret
  3566   002C80                     __end_of_lcd_4bits_send_char:
  3567                           	callstack 0
  3568                           
  3569 ;; *************** function _lcd_4bits_initialze *****************
  3570 ;; Defined at:
  3571 ;;		line 18 in file "ECU_Layer/LCD/Lcd.c"
  3572 ;; Parameters:    Size  Location     Type
  3573 ;;  lcd             2   35[COMRAM] PTR const struct .
  3574 ;;		 -> lcd_1(6), 
  3575 ;; Auto vars:     Size  Location     Type
  3576 ;;  ret             1   39[COMRAM] unsigned char 
  3577 ;;  counter         1   38[COMRAM] unsigned char 
  3578 ;; Return value:  Size  Location     Type
  3579 ;;                  1    wreg      unsigned char 
  3580 ;; Registers used:
  3581 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3582 ;; Tracked objects:
  3583 ;;		On entry : 0/0
  3584 ;;		On exit  : 0/0
  3585 ;;		Unchanged: 0/0
  3586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3587 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3588 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3589 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3590 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3591 ;;Total ram usage:        5 bytes
  3592 ;; Hardware stack levels used: 1
  3593 ;; Hardware stack levels required when called: 9
  3594 ;; This function calls:
  3595 ;;		_gpio_pin_intialize
  3596 ;;		_lcd_4bits_send_command
  3597 ;; This function is called by:
  3598 ;;		_main
  3599 ;; This function uses a non-reentrant model
  3600 ;;
  3601                           
  3602                           	psect	text18
  3603   001FC2                     __ptext18:
  3604                           	callstack 0
  3605   001FC2                     _lcd_4bits_initialze:
  3606                           	callstack 21
  3607   001FC2                     
  3608                           ;ECU_Layer/LCD/Lcd.c: 21:     uint8 counter = 0;
  3609   001FC2  0E00               	movlw	0
  3610   001FC4  6E27               	movwf	lcd_4bits_initialze@counter^0,c
  3611   001FC6                     
  3612                           ;ECU_Layer/LCD/Lcd.c: 22:     if(lcd == ((void*)0)){
  3613   001FC6  5024               	movf	lcd_4bits_initialze@lcd^0,w,c
  3614   001FC8  1025               	iorwf	(lcd_4bits_initialze@lcd+1)^0,w,c
  3615   001FCA  A4D8               	btfss	status,2,c
  3616   001FCC  EFEA  F00F         	goto	u3881
  3617   001FD0  EFEC  F00F         	goto	u3880
  3618   001FD4                     u3881:
  3619   001FD4  EFF0  F00F         	goto	l4749
  3620   001FD8                     u3880:
  3621   001FD8                     
  3622                           ;ECU_Layer/LCD/Lcd.c: 23:         ret = (Std_ReturnType)0x01;
  3623   001FD8  0E01               	movlw	1
  3624   001FDA  6E28               	movwf	lcd_4bits_initialze@ret^0,c
  3625                           
  3626                           ;ECU_Layer/LCD/Lcd.c: 24:     }
  3627   001FDC  EF6F  F010         	goto	l4785
  3628   001FE0                     l4749:
  3629                           
  3630                           ;ECU_Layer/LCD/Lcd.c: 26:         ret = gpio_pin_intialize(&(lcd->RS_REG));
  3631   001FE0  0E04               	movlw	4
  3632   001FE2  2424               	addwf	lcd_4bits_initialze@lcd^0,w,c
  3633   001FE4  6E1B               	movwf	gpio_pin_intialize@str^0,c
  3634   001FE6  0E00               	movlw	0
  3635   001FE8  2025               	addwfc	(lcd_4bits_initialze@lcd+1)^0,w,c
  3636   001FEA  6E1C               	movwf	(gpio_pin_intialize@str+1)^0,c
  3637   001FEC  ECEC  F016         	call	_gpio_pin_intialize	;wreg free
  3638   001FF0  6E28               	movwf	lcd_4bits_initialze@ret^0,c
  3639                           
  3640                           ;ECU_Layer/LCD/Lcd.c: 27:         ret = gpio_pin_intialize(&(lcd->EN_BIT));
  3641   001FF2  0E05               	movlw	5
  3642   001FF4  2424               	addwf	lcd_4bits_initialze@lcd^0,w,c
  3643   001FF6  6E1B               	movwf	gpio_pin_intialize@str^0,c
  3644   001FF8  0E00               	movlw	0
  3645   001FFA  2025               	addwfc	(lcd_4bits_initialze@lcd+1)^0,w,c
  3646   001FFC  6E1C               	movwf	(gpio_pin_intialize@str+1)^0,c
  3647   001FFE  ECEC  F016         	call	_gpio_pin_intialize	;wreg free
  3648   002002  6E28               	movwf	lcd_4bits_initialze@ret^0,c
  3649   002004                     
  3650                           ;ECU_Layer/LCD/Lcd.c: 28:         for(counter = 0; counter<4; counter++){
  3651   002004  0E00               	movlw	0
  3652   002006  6E27               	movwf	lcd_4bits_initialze@counter^0,c
  3653   002008                     l4757:
  3654   002008  5027               	movf	lcd_4bits_initialze@counter^0,w,c
  3655   00200A  2424               	addwf	lcd_4bits_initialze@lcd^0,w,c
  3656   00200C  6E1B               	movwf	gpio_pin_intialize@str^0,c
  3657   00200E  0E00               	movlw	0
  3658   002010  2025               	addwfc	(lcd_4bits_initialze@lcd+1)^0,w,c
  3659   002012  6E1C               	movwf	(gpio_pin_intialize@str+1)^0,c
  3660   002014  ECEC  F016         	call	_gpio_pin_intialize	;wreg free
  3661   002018                     
  3662                           ;ECU_Layer/LCD/Lcd.c: 30:         }
  3663   002018  2A27               	incf	lcd_4bits_initialze@counter^0,f,c
  3664   00201A  0E03               	movlw	3
  3665   00201C  6427               	cpfsgt	lcd_4bits_initialze@counter^0,c
  3666   00201E  EF13  F010         	goto	u3891
  3667   002022  EF15  F010         	goto	u3890
  3668   002026                     u3891:
  3669   002026  EF04  F010         	goto	l4757
  3670   00202A                     u3890:
  3671   00202A                     
  3672                           ;ECU_Layer/LCD/Lcd.c: 31:         _delay((unsigned long)((20)*(8000000U/4000.0)));
  3673   00202A  0E34               	movlw	52
  3674   00202C  6E26               	movwf	??_lcd_4bits_initialze^0,c
  3675   00202E  0EF2               	movlw	242
  3676   002030                     u6317:
  3677   002030  2EE8               	decfsz	wreg,f,c
  3678   002032  D7FE               	bra	u6317
  3679   002034  2E26               	decfsz	??_lcd_4bits_initialze^0,f,c
  3680   002036  D7FC               	bra	u6317
  3681   002038  C024  F020         	movff	lcd_4bits_initialze@lcd,lcd_4bits_send_command@lcd
  3682   00203C  C025  F021         	movff	lcd_4bits_initialze@lcd+1,lcd_4bits_send_command@lcd+1
  3683   002040  0E38               	movlw	56
  3684   002042  6E22               	movwf	lcd_4bits_send_command@command^0,c
  3685   002044  EC40  F016         	call	_lcd_4bits_send_command	;wreg free
  3686   002048                     
  3687                           ;ECU_Layer/LCD/Lcd.c: 33:         _delay((unsigned long)((5)*(8000000U/4000.0)));
  3688   002048  0E0D               	movlw	13
  3689   00204A  6E26               	movwf	??_lcd_4bits_initialze^0,c
  3690   00204C  0EFC               	movlw	252
  3691   00204E                     u6327:
  3692   00204E  2EE8               	decfsz	wreg,f,c
  3693   002050  D7FE               	bra	u6327
  3694   002052  2E26               	decfsz	??_lcd_4bits_initialze^0,f,c
  3695   002054  D7FC               	bra	u6327
  3696   002056  C024  F020         	movff	lcd_4bits_initialze@lcd,lcd_4bits_send_command@lcd
  3697   00205A  C025  F021         	movff	lcd_4bits_initialze@lcd+1,lcd_4bits_send_command@lcd+1
  3698   00205E  0E38               	movlw	56
  3699   002060  6E22               	movwf	lcd_4bits_send_command@command^0,c
  3700   002062  EC40  F016         	call	_lcd_4bits_send_command	;wreg free
  3701   002066                     
  3702                           ;ECU_Layer/LCD/Lcd.c: 35:         _delay((unsigned long)((150)*(8000000U/4000000.0)));
  3703   002066  0E64               	movlw	100
  3704   002068                     u6337:
  3705   002068  2EE8               	decfsz	wreg,f,c
  3706   00206A  D7FE               	bra	u6337
  3707   00206C  C024  F020         	movff	lcd_4bits_initialze@lcd,lcd_4bits_send_command@lcd
  3708   002070  C025  F021         	movff	lcd_4bits_initialze@lcd+1,lcd_4bits_send_command@lcd+1
  3709   002074  0E38               	movlw	56
  3710   002076  6E22               	movwf	lcd_4bits_send_command@command^0,c
  3711   002078  EC40  F016         	call	_lcd_4bits_send_command	;wreg free
  3712   00207C  C024  F020         	movff	lcd_4bits_initialze@lcd,lcd_4bits_send_command@lcd
  3713   002080  C025  F021         	movff	lcd_4bits_initialze@lcd+1,lcd_4bits_send_command@lcd+1
  3714   002084  0E01               	movlw	1
  3715   002086  6E22               	movwf	lcd_4bits_send_command@command^0,c
  3716   002088  EC40  F016         	call	_lcd_4bits_send_command	;wreg free
  3717   00208C  C024  F020         	movff	lcd_4bits_initialze@lcd,lcd_4bits_send_command@lcd
  3718   002090  C025  F021         	movff	lcd_4bits_initialze@lcd+1,lcd_4bits_send_command@lcd+1
  3719   002094  0E02               	movlw	2
  3720   002096  6E22               	movwf	lcd_4bits_send_command@command^0,c
  3721   002098  EC40  F016         	call	_lcd_4bits_send_command	;wreg free
  3722   00209C  C024  F020         	movff	lcd_4bits_initialze@lcd,lcd_4bits_send_command@lcd
  3723   0020A0  C025  F021         	movff	lcd_4bits_initialze@lcd+1,lcd_4bits_send_command@lcd+1
  3724   0020A4  0E06               	movlw	6
  3725   0020A6  6E22               	movwf	lcd_4bits_send_command@command^0,c
  3726   0020A8  EC40  F016         	call	_lcd_4bits_send_command	;wreg free
  3727   0020AC  C024  F020         	movff	lcd_4bits_initialze@lcd,lcd_4bits_send_command@lcd
  3728   0020B0  C025  F021         	movff	lcd_4bits_initialze@lcd+1,lcd_4bits_send_command@lcd+1
  3729   0020B4  0E0C               	movlw	12
  3730   0020B6  6E22               	movwf	lcd_4bits_send_command@command^0,c
  3731   0020B8  EC40  F016         	call	_lcd_4bits_send_command	;wreg free
  3732   0020BC  C024  F020         	movff	lcd_4bits_initialze@lcd,lcd_4bits_send_command@lcd
  3733   0020C0  C025  F021         	movff	lcd_4bits_initialze@lcd+1,lcd_4bits_send_command@lcd+1
  3734   0020C4  0E28               	movlw	40
  3735   0020C6  6E22               	movwf	lcd_4bits_send_command@command^0,c
  3736   0020C8  EC40  F016         	call	_lcd_4bits_send_command	;wreg free
  3737   0020CC                     
  3738                           ;ECU_Layer/LCD/Lcd.c: 43:         ret = lcd_4bits_send_command(lcd, 0x80);
  3739   0020CC  C024  F020         	movff	lcd_4bits_initialze@lcd,lcd_4bits_send_command@lcd
  3740   0020D0  C025  F021         	movff	lcd_4bits_initialze@lcd+1,lcd_4bits_send_command@lcd+1
  3741   0020D4  0E80               	movlw	128
  3742   0020D6  6E22               	movwf	lcd_4bits_send_command@command^0,c
  3743   0020D8  EC40  F016         	call	_lcd_4bits_send_command	;wreg free
  3744   0020DC  6E28               	movwf	lcd_4bits_initialze@ret^0,c
  3745   0020DE                     l4785:
  3746                           
  3747                           ;ECU_Layer/LCD/Lcd.c: 46:     return ret;
  3748   0020DE  5028               	movf	lcd_4bits_initialze@ret^0,w,c
  3749   0020E0  0012               	return		;funcret
  3750   0020E2                     __end_of_lcd_4bits_initialze:
  3751                           	callstack 0
  3752                           
  3753 ;; *************** function _lcd_4bits_send_command *****************
  3754 ;; Defined at:
  3755 ;;		line 49 in file "ECU_Layer/LCD/Lcd.c"
  3756 ;; Parameters:    Size  Location     Type
  3757 ;;  lcd             2   31[COMRAM] PTR const struct .
  3758 ;;		 -> lcd_1(6), 
  3759 ;;  command         1   33[COMRAM] unsigned char 
  3760 ;; Auto vars:     Size  Location     Type
  3761 ;;  ret             1   34[COMRAM] unsigned char 
  3762 ;; Return value:  Size  Location     Type
  3763 ;;                  1    wreg      unsigned char 
  3764 ;; Registers used:
  3765 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3766 ;; Tracked objects:
  3767 ;;		On entry : 0/0
  3768 ;;		On exit  : 0/0
  3769 ;;		Unchanged: 0/0
  3770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3771 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3772 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3774 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3775 ;;Total ram usage:        4 bytes
  3776 ;; Hardware stack levels used: 1
  3777 ;; Hardware stack levels required when called: 8
  3778 ;; This function calls:
  3779 ;;		_enable_pin_4bits
  3780 ;;		_gpio_pin_write_logic
  3781 ;;		_send_4bits
  3782 ;; This function is called by:
  3783 ;;		_lcd_4bits_initialze
  3784 ;;		_lcd_4bits_set_cursor
  3785 ;;		_lcd_4bits_send_custom_char
  3786 ;; This function uses a non-reentrant model
  3787 ;;
  3788                           
  3789                           	psect	text19
  3790   002C80                     __ptext19:
  3791                           	callstack 0
  3792   002C80                     _lcd_4bits_send_command:
  3793                           	callstack 20
  3794   002C80                     
  3795                           ;ECU_Layer/LCD/Lcd.c: 53:     if(lcd == ((void*)0)){
  3796   002C80  5020               	movf	lcd_4bits_send_command@lcd^0,w,c
  3797   002C82  1021               	iorwf	(lcd_4bits_send_command@lcd+1)^0,w,c
  3798   002C84  A4D8               	btfss	status,2,c
  3799   002C86  EF47  F016         	goto	u3591
  3800   002C8A  EF49  F016         	goto	u3590
  3801   002C8E                     u3591:
  3802   002C8E  EF4D  F016         	goto	l4485
  3803   002C92                     u3590:
  3804   002C92                     
  3805                           ;ECU_Layer/LCD/Lcd.c: 54:         ret = (Std_ReturnType)0x01;
  3806   002C92  0E01               	movlw	1
  3807   002C94  6E23               	movwf	lcd_4bits_send_command@ret^0,c
  3808                           
  3809                           ;ECU_Layer/LCD/Lcd.c: 55:     }
  3810   002C96  EF79  F016         	goto	l4487
  3811   002C9A                     l4485:
  3812                           
  3813                           ;ECU_Layer/LCD/Lcd.c: 57:         ret = gpio_pin_write_logic(&(lcd->RS_REG), GPIO_LOW);
  3814   002C9A  0E04               	movlw	4
  3815   002C9C  2420               	addwf	lcd_4bits_send_command@lcd^0,w,c
  3816   002C9E  6E12               	movwf	gpio_pin_write_logic@str^0,c
  3817   002CA0  0E00               	movlw	0
  3818   002CA2  2021               	addwfc	(lcd_4bits_send_command@lcd+1)^0,w,c
  3819   002CA4  6E13               	movwf	(gpio_pin_write_logic@str+1)^0,c
  3820   002CA6  0E00               	movlw	0
  3821   002CA8  6E14               	movwf	gpio_pin_write_logic@LOG^0,c
  3822   002CAA  EC71  F010         	call	_gpio_pin_write_logic	;wreg free
  3823   002CAE  6E23               	movwf	lcd_4bits_send_command@ret^0,c
  3824                           
  3825                           ;ECU_Layer/LCD/Lcd.c: 58:         ret = send_4bits(lcd , command>>4);
  3826   002CB0  C020  F01B         	movff	lcd_4bits_send_command@lcd,send_4bits@lcd
  3827   002CB4  C021  F01C         	movff	lcd_4bits_send_command@lcd+1,send_4bits@lcd+1
  3828   002CB8  3822               	swapf	lcd_4bits_send_command@command^0,w,c
  3829   002CBA  0B0F               	andlw	15
  3830   002CBC  6E1D               	movwf	send_4bits@command^0,c
  3831   002CBE  EC84  F015         	call	_send_4bits	;wreg free
  3832   002CC2  6E23               	movwf	lcd_4bits_send_command@ret^0,c
  3833                           
  3834                           ;ECU_Layer/LCD/Lcd.c: 59:         ret = enable_pin_4bits(lcd);
  3835   002CC4  C020  F01B         	movff	lcd_4bits_send_command@lcd,enable_pin_4bits@lcd
  3836   002CC8  C021  F01C         	movff	lcd_4bits_send_command@lcd+1,enable_pin_4bits@lcd+1
  3837   002CCC  EC7F  F017         	call	_enable_pin_4bits	;wreg free
  3838   002CD0  6E23               	movwf	lcd_4bits_send_command@ret^0,c
  3839                           
  3840                           ;ECU_Layer/LCD/Lcd.c: 60:         ret = send_4bits(lcd , command);
  3841   002CD2  C020  F01B         	movff	lcd_4bits_send_command@lcd,send_4bits@lcd
  3842   002CD6  C021  F01C         	movff	lcd_4bits_send_command@lcd+1,send_4bits@lcd+1
  3843   002CDA  C022  F01D         	movff	lcd_4bits_send_command@command,send_4bits@command
  3844   002CDE  EC84  F015         	call	_send_4bits	;wreg free
  3845   002CE2  6E23               	movwf	lcd_4bits_send_command@ret^0,c
  3846                           
  3847                           ;ECU_Layer/LCD/Lcd.c: 61:         ret = enable_pin_4bits(lcd);
  3848   002CE4  C020  F01B         	movff	lcd_4bits_send_command@lcd,enable_pin_4bits@lcd
  3849   002CE8  C021  F01C         	movff	lcd_4bits_send_command@lcd+1,enable_pin_4bits@lcd+1
  3850   002CEC  EC7F  F017         	call	_enable_pin_4bits	;wreg free
  3851   002CF0  6E23               	movwf	lcd_4bits_send_command@ret^0,c
  3852   002CF2                     l4487:
  3853                           
  3854                           ;ECU_Layer/LCD/Lcd.c: 63:     return ret;
  3855   002CF2  5023               	movf	lcd_4bits_send_command@ret^0,w,c
  3856   002CF4  0012               	return		;funcret
  3857   002CF6                     __end_of_lcd_4bits_send_command:
  3858                           	callstack 0
  3859                           
  3860 ;; *************** function _send_4bits *****************
  3861 ;; Defined at:
  3862 ;;		line 178 in file "ECU_Layer/LCD/Lcd.c"
  3863 ;; Parameters:    Size  Location     Type
  3864 ;;  lcd             2   26[COMRAM] PTR const struct .
  3865 ;;		 -> lcd_1(6), 
  3866 ;;  command         1   28[COMRAM] unsigned char 
  3867 ;; Auto vars:     Size  Location     Type
  3868 ;;  ret             1   30[COMRAM] unsigned char 
  3869 ;;  counter         1   29[COMRAM] unsigned char 
  3870 ;; Return value:  Size  Location     Type
  3871 ;;                  1    wreg      unsigned char 
  3872 ;; Registers used:
  3873 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3874 ;; Tracked objects:
  3875 ;;		On entry : 0/0
  3876 ;;		On exit  : 0/0
  3877 ;;		Unchanged: 0/0
  3878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3879 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3880 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3882 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3883 ;;Total ram usage:        5 bytes
  3884 ;; Hardware stack levels used: 1
  3885 ;; Hardware stack levels required when called: 7
  3886 ;; This function calls:
  3887 ;;		_gpio_pin_write_logic
  3888 ;; This function is called by:
  3889 ;;		_lcd_4bits_send_command
  3890 ;;		_lcd_4bits_send_char
  3891 ;; This function uses a non-reentrant model
  3892 ;;
  3893                           
  3894                           	psect	text20
  3895   002B08                     __ptext20:
  3896                           	callstack 0
  3897   002B08                     _send_4bits:
  3898                           	callstack 20
  3899   002B08                     
  3900                           ;ECU_Layer/LCD/Lcd.c: 180:     uint8 counter = 0;
  3901   002B08  0E00               	movlw	0
  3902   002B0A  6E1E               	movwf	send_4bits@counter^0,c
  3903   002B0C                     
  3904                           ;ECU_Layer/LCD/Lcd.c: 182:     if(lcd == ((void*)0)){
  3905   002B0C  501B               	movf	send_4bits@lcd^0,w,c
  3906   002B0E  101C               	iorwf	(send_4bits@lcd+1)^0,w,c
  3907   002B10  A4D8               	btfss	status,2,c
  3908   002B12  EF8D  F015         	goto	u3481
  3909   002B16  EF8F  F015         	goto	u3480
  3910   002B1A                     u3481:
  3911   002B1A  EF93  F015         	goto	l4407
  3912   002B1E                     u3480:
  3913   002B1E                     
  3914                           ;ECU_Layer/LCD/Lcd.c: 183:         ret = (Std_ReturnType)0x01;
  3915   002B1E  0E01               	movlw	1
  3916   002B20  6E1F               	movwf	send_4bits@ret^0,c
  3917                           
  3918                           ;ECU_Layer/LCD/Lcd.c: 184:     }
  3919   002B22  EFC6  F015         	goto	l4409
  3920   002B26                     l4407:
  3921                           
  3922                           ;ECU_Layer/LCD/Lcd.c: 186:         ret = gpio_pin_write_logic(&(lcd->DATA_BITS[0]) , (co
      +                          mmand >> 0) & (uint8)0x01);
  3923   002B26  C01B  F012         	movff	send_4bits@lcd,gpio_pin_write_logic@str
  3924   002B2A  C01C  F013         	movff	send_4bits@lcd+1,gpio_pin_write_logic@str+1
  3925   002B2E  501D               	movf	send_4bits@command^0,w,c
  3926   002B30  0B01               	andlw	1
  3927   002B32  6E14               	movwf	gpio_pin_write_logic@LOG^0,c
  3928   002B34  EC71  F010         	call	_gpio_pin_write_logic	;wreg free
  3929   002B38  6E1F               	movwf	send_4bits@ret^0,c
  3930                           
  3931                           ;ECU_Layer/LCD/Lcd.c: 187:         ret = gpio_pin_write_logic(&(lcd->DATA_BITS[1]) , (co
      +                          mmand >> 1) & (uint8)0x01);
  3932   002B3A  0E01               	movlw	1
  3933   002B3C  241B               	addwf	send_4bits@lcd^0,w,c
  3934   002B3E  6E12               	movwf	gpio_pin_write_logic@str^0,c
  3935   002B40  0E00               	movlw	0
  3936   002B42  201C               	addwfc	(send_4bits@lcd+1)^0,w,c
  3937   002B44  6E13               	movwf	(gpio_pin_write_logic@str+1)^0,c
  3938   002B46  90D8               	bcf	status,0,c
  3939   002B48  301D               	rrcf	send_4bits@command^0,w,c
  3940   002B4A  0B01               	andlw	1
  3941   002B4C  6E14               	movwf	gpio_pin_write_logic@LOG^0,c
  3942   002B4E  EC71  F010         	call	_gpio_pin_write_logic	;wreg free
  3943   002B52  6E1F               	movwf	send_4bits@ret^0,c
  3944                           
  3945                           ;ECU_Layer/LCD/Lcd.c: 188:         ret = gpio_pin_write_logic(&(lcd->DATA_BITS[2]) , (co
      +                          mmand >> 2) & (uint8)0x01);
  3946   002B54  0E02               	movlw	2
  3947   002B56  241B               	addwf	send_4bits@lcd^0,w,c
  3948   002B58  6E12               	movwf	gpio_pin_write_logic@str^0,c
  3949   002B5A  0E00               	movlw	0
  3950   002B5C  201C               	addwfc	(send_4bits@lcd+1)^0,w,c
  3951   002B5E  6E13               	movwf	(gpio_pin_write_logic@str+1)^0,c
  3952   002B60  401D               	rrncf	send_4bits@command^0,w,c
  3953   002B62  42E8               	rrncf	wreg,f,c
  3954   002B64  0B3F               	andlw	63
  3955   002B66  0B01               	andlw	1
  3956   002B68  6E14               	movwf	gpio_pin_write_logic@LOG^0,c
  3957   002B6A  EC71  F010         	call	_gpio_pin_write_logic	;wreg free
  3958   002B6E  6E1F               	movwf	send_4bits@ret^0,c
  3959                           
  3960                           ;ECU_Layer/LCD/Lcd.c: 189:         ret = gpio_pin_write_logic(&(lcd->DATA_BITS[3]) , (co
      +                          mmand >> 3) & (uint8)0x01);
  3961   002B70  0E03               	movlw	3
  3962   002B72  241B               	addwf	send_4bits@lcd^0,w,c
  3963   002B74  6E12               	movwf	gpio_pin_write_logic@str^0,c
  3964   002B76  0E00               	movlw	0
  3965   002B78  201C               	addwfc	(send_4bits@lcd+1)^0,w,c
  3966   002B7A  6E13               	movwf	(gpio_pin_write_logic@str+1)^0,c
  3967   002B7C  381D               	swapf	send_4bits@command^0,w,c
  3968   002B7E  46E8               	rlncf	wreg,f,c
  3969   002B80  0B1F               	andlw	31
  3970   002B82  0B01               	andlw	1
  3971   002B84  6E14               	movwf	gpio_pin_write_logic@LOG^0,c
  3972   002B86  EC71  F010         	call	_gpio_pin_write_logic	;wreg free
  3973   002B8A  6E1F               	movwf	send_4bits@ret^0,c
  3974   002B8C                     l4409:
  3975                           
  3976                           ;ECU_Layer/LCD/Lcd.c: 192:     return ret;
  3977   002B8C  501F               	movf	send_4bits@ret^0,w,c
  3978   002B8E  0012               	return		;funcret
  3979   002B90                     __end_of_send_4bits:
  3980                           	callstack 0
  3981                           
  3982 ;; *************** function _enable_pin_4bits *****************
  3983 ;; Defined at:
  3984 ;;		line 163 in file "ECU_Layer/LCD/Lcd.c"
  3985 ;; Parameters:    Size  Location     Type
  3986 ;;  lcd             2   26[COMRAM] PTR const struct .
  3987 ;;		 -> lcd_1(6), 
  3988 ;; Auto vars:     Size  Location     Type
  3989 ;;  ret             1   29[COMRAM] unsigned char 
  3990 ;; Return value:  Size  Location     Type
  3991 ;;                  1    wreg      unsigned char 
  3992 ;; Registers used:
  3993 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3994 ;; Tracked objects:
  3995 ;;		On entry : 0/0
  3996 ;;		On exit  : 0/0
  3997 ;;		Unchanged: 0/0
  3998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3999 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4000 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4001 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4002 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4003 ;;Total ram usage:        4 bytes
  4004 ;; Hardware stack levels used: 1
  4005 ;; Hardware stack levels required when called: 7
  4006 ;; This function calls:
  4007 ;;		_gpio_pin_write_logic
  4008 ;; This function is called by:
  4009 ;;		_lcd_4bits_send_command
  4010 ;;		_lcd_4bits_send_char
  4011 ;; This function uses a non-reentrant model
  4012 ;;
  4013                           
  4014                           	psect	text21
  4015   002EFE                     __ptext21:
  4016                           	callstack 0
  4017   002EFE                     _enable_pin_4bits:
  4018                           	callstack 20
  4019   002EFE                     
  4020                           ;ECU_Layer/LCD/Lcd.c: 167:     if(lcd == ((void*)0)){
  4021   002EFE  501B               	movf	enable_pin_4bits@lcd^0,w,c
  4022   002F00  101C               	iorwf	(enable_pin_4bits@lcd+1)^0,w,c
  4023   002F02  A4D8               	btfss	status,2,c
  4024   002F04  EF86  F017         	goto	u3491
  4025   002F08  EF88  F017         	goto	u3490
  4026   002F0C                     u3491:
  4027   002F0C  EF8C  F017         	goto	l4419
  4028   002F10                     u3490:
  4029   002F10                     
  4030                           ;ECU_Layer/LCD/Lcd.c: 168:         ret = (Std_ReturnType)0x01;
  4031   002F10  0E01               	movlw	1
  4032   002F12  6E1E               	movwf	enable_pin_4bits@ret^0,c
  4033                           
  4034                           ;ECU_Layer/LCD/Lcd.c: 169:     }
  4035   002F14  EFA8  F017         	goto	l4425
  4036   002F18                     l4419:
  4037   002F18  0E05               	movlw	5
  4038   002F1A  241B               	addwf	enable_pin_4bits@lcd^0,w,c
  4039   002F1C  6E12               	movwf	gpio_pin_write_logic@str^0,c
  4040   002F1E  0E00               	movlw	0
  4041   002F20  201C               	addwfc	(enable_pin_4bits@lcd+1)^0,w,c
  4042   002F22  6E13               	movwf	(gpio_pin_write_logic@str+1)^0,c
  4043   002F24  0E01               	movlw	1
  4044   002F26  6E14               	movwf	gpio_pin_write_logic@LOG^0,c
  4045   002F28  EC71  F010         	call	_gpio_pin_write_logic	;wreg free
  4046   002F2C                     
  4047                           ;ECU_Layer/LCD/Lcd.c: 172:         _delay((unsigned long)((5)*(8000000U/4000.0)));
  4048   002F2C  0E0D               	movlw	13
  4049   002F2E  6E1D               	movwf	??_enable_pin_4bits^0,c
  4050   002F30  0EFC               	movlw	252
  4051   002F32                     u6347:
  4052   002F32  2EE8               	decfsz	wreg,f,c
  4053   002F34  D7FE               	bra	u6347
  4054   002F36  2E1D               	decfsz	??_enable_pin_4bits^0,f,c
  4055   002F38  D7FC               	bra	u6347
  4056   002F3A                     
  4057                           ;ECU_Layer/LCD/Lcd.c: 173:         ret = gpio_pin_write_logic(&(lcd->EN_BIT) ,GPIO_LOW);
  4058   002F3A  0E05               	movlw	5
  4059   002F3C  241B               	addwf	enable_pin_4bits@lcd^0,w,c
  4060   002F3E  6E12               	movwf	gpio_pin_write_logic@str^0,c
  4061   002F40  0E00               	movlw	0
  4062   002F42  201C               	addwfc	(enable_pin_4bits@lcd+1)^0,w,c
  4063   002F44  6E13               	movwf	(gpio_pin_write_logic@str+1)^0,c
  4064   002F46  0E00               	movlw	0
  4065   002F48  6E14               	movwf	gpio_pin_write_logic@LOG^0,c
  4066   002F4A  EC71  F010         	call	_gpio_pin_write_logic	;wreg free
  4067   002F4E  6E1E               	movwf	enable_pin_4bits@ret^0,c
  4068   002F50                     l4425:
  4069                           
  4070                           ;ECU_Layer/LCD/Lcd.c: 175:     return ret;
  4071   002F50  501E               	movf	enable_pin_4bits@ret^0,w,c
  4072   002F52  0012               	return		;funcret
  4073   002F54                     __end_of_enable_pin_4bits:
  4074                           	callstack 0
  4075                           
  4076 ;; *************** function _gpio_pin_intialize *****************
  4077 ;; Defined at:
  4078 ;;		line 108 in file "MCAL_Layer/GPIO/hal_gpio.c"
  4079 ;; Parameters:    Size  Location     Type
  4080 ;;  str             2   26[COMRAM] PTR const struct .
  4081 ;;		 -> lcd_1.DATA_BITS(4), lcd_1(6), relay_initialize@rel_pin(1), led_intialize@LED_IN(1), 
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;  ret             1   29[COMRAM] unsigned char 
  4084 ;; Return value:  Size  Location     Type
  4085 ;;                  1    wreg      unsigned char 
  4086 ;; Registers used:
  4087 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4088 ;; Tracked objects:
  4089 ;;		On entry : 0/0
  4090 ;;		On exit  : 0/0
  4091 ;;		Unchanged: 0/0
  4092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4093 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4094 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4095 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4096 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4097 ;;Total ram usage:        4 bytes
  4098 ;; Hardware stack levels used: 1
  4099 ;; Hardware stack levels required when called: 7
  4100 ;; This function calls:
  4101 ;;		_gpio_pin_direction_intialize
  4102 ;;		_gpio_pin_write_logic
  4103 ;; This function is called by:
  4104 ;;		_lcd_4bits_initialze
  4105 ;;		_keypad_initialize
  4106 ;;		_lcd_8bits_initialze
  4107 ;;		_led_intialize
  4108 ;;		_relay_initialize
  4109 ;;		_seg_7_pins_intialize
  4110 ;; This function uses a non-reentrant model
  4111 ;;
  4112                           
  4113                           	psect	text22
  4114   002DD8                     __ptext22:
  4115                           	callstack 0
  4116   002DD8                     _gpio_pin_intialize:
  4117                           	callstack 22
  4118   002DD8                     
  4119                           ;MCAL_Layer/GPIO/hal_gpio.c: 112:     if(str == ((void*)0) || (str->PIN > 7)){
  4120   002DD8  501B               	movf	gpio_pin_intialize@str^0,w,c
  4121   002DDA  101C               	iorwf	(gpio_pin_intialize@str+1)^0,w,c
  4122   002DDC  B4D8               	btfsc	status,2,c
  4123   002DDE  EFF3  F016         	goto	u3671
  4124   002DE2  EFF5  F016         	goto	u3670
  4125   002DE6                     u3671:
  4126   002DE6  EF04  F017         	goto	l4575
  4127   002DEA                     u3670:
  4128   002DEA  C01B  FFD9         	movff	gpio_pin_intialize@str,fsr2l
  4129   002DEE  C01C  FFDA         	movff	gpio_pin_intialize@str+1,fsr2h
  4130   002DF2  50DF               	movf	223,w,c
  4131   002DF4  0B07               	andlw	7
  4132   002DF6  6E1D               	movwf	??_gpio_pin_intialize^0,c
  4133   002DF8  0E07               	movlw	7
  4134   002DFA  641D               	cpfsgt	??_gpio_pin_intialize^0,c
  4135   002DFC  EF02  F017         	goto	u3681
  4136   002E00  EF04  F017         	goto	u3680
  4137   002E04                     u3681:
  4138   002E04  EF08  F017         	goto	l4577
  4139   002E08                     u3680:
  4140   002E08                     l4575:
  4141                           
  4142                           ;MCAL_Layer/GPIO/hal_gpio.c: 113:         ret = (Std_ReturnType)0x01;
  4143   002E08  0E01               	movlw	1
  4144   002E0A  6E1E               	movwf	gpio_pin_intialize@ret^0,c
  4145                           
  4146                           ;MCAL_Layer/GPIO/hal_gpio.c: 114:     }
  4147   002E0C  EF1E  F017         	goto	l4579
  4148   002E10                     l4577:
  4149                           
  4150                           ;MCAL_Layer/GPIO/hal_gpio.c: 116:        ret = gpio_pin_direction_intialize(str);
  4151   002E10  C01B  F012         	movff	gpio_pin_intialize@str,gpio_pin_direction_intialize@str
  4152   002E14  C01C  F013         	movff	gpio_pin_intialize@str+1,gpio_pin_direction_intialize@str+1
  4153   002E18  EC01  F011         	call	_gpio_pin_direction_intialize	;wreg free
  4154   002E1C  6E1E               	movwf	gpio_pin_intialize@ret^0,c
  4155                           
  4156                           ;MCAL_Layer/GPIO/hal_gpio.c: 117:        ret = gpio_pin_write_logic(str , str->Logic);
  4157   002E1E  C01B  F012         	movff	gpio_pin_intialize@str,gpio_pin_write_logic@str
  4158   002E22  C01C  F013         	movff	gpio_pin_intialize@str+1,gpio_pin_write_logic@str+1
  4159   002E26  C01B  FFD9         	movff	gpio_pin_intialize@str,fsr2l
  4160   002E2A  C01C  FFDA         	movff	gpio_pin_intialize@str+1,fsr2h
  4161   002E2E  0E00               	movlw	0
  4162   002E30  BEDF               	btfsc	indf2,7,c
  4163   002E32  0E01               	movlw	1
  4164   002E34  6E14               	movwf	gpio_pin_write_logic@LOG^0,c
  4165   002E36  EC71  F010         	call	_gpio_pin_write_logic	;wreg free
  4166   002E3A  6E1E               	movwf	gpio_pin_intialize@ret^0,c
  4167   002E3C                     l4579:
  4168                           
  4169                           ;MCAL_Layer/GPIO/hal_gpio.c: 120:     return ret;
  4170   002E3C  501E               	movf	gpio_pin_intialize@ret^0,w,c
  4171   002E3E  0012               	return		;funcret
  4172   002E40                     __end_of_gpio_pin_intialize:
  4173                           	callstack 0
  4174                           
  4175 ;; *************** function _dc_motor_stop *****************
  4176 ;; Defined at:
  4177 ;;		line 52 in file "ECU_Layer/MOTOR/Motor.c"
  4178 ;; Parameters:    Size  Location     Type
  4179 ;;  motor_config    2   26[COMRAM] PTR struct .
  4180 ;;		 -> moto_2(2), moto_1(2), 
  4181 ;; Auto vars:     Size  Location     Type
  4182 ;;  ret             1   28[COMRAM] unsigned char 
  4183 ;; Return value:  Size  Location     Type
  4184 ;;                  1    wreg      unsigned char 
  4185 ;; Registers used:
  4186 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4187 ;; Tracked objects:
  4188 ;;		On entry : 0/0
  4189 ;;		On exit  : 0/0
  4190 ;;		Unchanged: 0/0
  4191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4192 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4193 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4195 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4196 ;;Total ram usage:        3 bytes
  4197 ;; Hardware stack levels used: 1
  4198 ;; Hardware stack levels required when called: 7
  4199 ;; This function calls:
  4200 ;;		_gpio_pin_write_logic
  4201 ;; This function is called by:
  4202 ;;		_main
  4203 ;; This function uses a non-reentrant model
  4204 ;;
  4205                           
  4206                           	psect	text23
  4207   00303C                     __ptext23:
  4208                           	callstack 0
  4209   00303C                     _dc_motor_stop:
  4210                           	callstack 23
  4211   00303C                     
  4212                           ;ECU_Layer/MOTOR/Motor.c: 56:     if(((void*)0) == motor_config){
  4213   00303C  501B               	movf	dc_motor_stop@motor_config^0,w,c
  4214   00303E  101C               	iorwf	(dc_motor_stop@motor_config+1)^0,w,c
  4215   003040  A4D8               	btfss	status,2,c
  4216   003042  EF25  F018         	goto	u4031
  4217   003046  EF27  F018         	goto	u4030
  4218   00304A                     u4031:
  4219   00304A  EF2B  F018         	goto	l4927
  4220   00304E                     u4030:
  4221   00304E                     
  4222                           ;ECU_Layer/MOTOR/Motor.c: 57:         ret = (Std_ReturnType)0x01;
  4223   00304E  0E01               	movlw	1
  4224   003050  6E1D               	movwf	dc_motor_stop@ret^0,c
  4225                           
  4226                           ;ECU_Layer/MOTOR/Motor.c: 58:     }
  4227   003052  EF3F  F018         	goto	l4929
  4228   003056                     l4927:
  4229                           
  4230                           ;ECU_Layer/MOTOR/Motor.c: 60:         ret = gpio_pin_write_logic(&(motor_config->motor_p
      +                          ins[0]) , GPIO_LOW);
  4231   003056  C01B  F012         	movff	dc_motor_stop@motor_config,gpio_pin_write_logic@str
  4232   00305A  C01C  F013         	movff	dc_motor_stop@motor_config+1,gpio_pin_write_logic@str+1
  4233   00305E  0E00               	movlw	0
  4234   003060  6E14               	movwf	gpio_pin_write_logic@LOG^0,c
  4235   003062  EC71  F010         	call	_gpio_pin_write_logic	;wreg free
  4236   003066  6E1D               	movwf	dc_motor_stop@ret^0,c
  4237                           
  4238                           ;ECU_Layer/MOTOR/Motor.c: 61:         ret = gpio_pin_write_logic(&(motor_config->motor_p
      +                          ins[1]) , GPIO_LOW);
  4239   003068  0E01               	movlw	1
  4240   00306A  241B               	addwf	dc_motor_stop@motor_config^0,w,c
  4241   00306C  6E12               	movwf	gpio_pin_write_logic@str^0,c
  4242   00306E  0E00               	movlw	0
  4243   003070  201C               	addwfc	(dc_motor_stop@motor_config+1)^0,w,c
  4244   003072  6E13               	movwf	(gpio_pin_write_logic@str+1)^0,c
  4245   003074  0E00               	movlw	0
  4246   003076  6E14               	movwf	gpio_pin_write_logic@LOG^0,c
  4247   003078  EC71  F010         	call	_gpio_pin_write_logic	;wreg free
  4248   00307C  6E1D               	movwf	dc_motor_stop@ret^0,c
  4249   00307E                     l4929:
  4250                           
  4251                           ;ECU_Layer/MOTOR/Motor.c: 63:     return ret;
  4252   00307E  501D               	movf	dc_motor_stop@ret^0,w,c
  4253   003080  0012               	return		;funcret
  4254   003082                     __end_of_dc_motor_stop:
  4255                           	callstack 0
  4256                           
  4257 ;; *************** function _dc_motor_move_forward *****************
  4258 ;; Defined at:
  4259 ;;		line 24 in file "ECU_Layer/MOTOR/Motor.c"
  4260 ;; Parameters:    Size  Location     Type
  4261 ;;  motor_config    2   26[COMRAM] PTR struct .
  4262 ;;		 -> moto_2(2), moto_1(2), 
  4263 ;; Auto vars:     Size  Location     Type
  4264 ;;  ret             1   28[COMRAM] unsigned char 
  4265 ;; Return value:  Size  Location     Type
  4266 ;;                  1    wreg      unsigned char 
  4267 ;; Registers used:
  4268 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4269 ;; Tracked objects:
  4270 ;;		On entry : 0/0
  4271 ;;		On exit  : 0/0
  4272 ;;		Unchanged: 0/0
  4273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4274 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4275 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4277 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4278 ;;Total ram usage:        3 bytes
  4279 ;; Hardware stack levels used: 1
  4280 ;; Hardware stack levels required when called: 7
  4281 ;; This function calls:
  4282 ;;		_gpio_pin_write_logic
  4283 ;; This function is called by:
  4284 ;;		_main
  4285 ;; This function uses a non-reentrant model
  4286 ;;
  4287                           
  4288                           	psect	text24
  4289   003082                     __ptext24:
  4290                           	callstack 0
  4291   003082                     _dc_motor_move_forward:
  4292                           	callstack 23
  4293   003082                     
  4294                           ;ECU_Layer/MOTOR/Motor.c: 28:     if(((void*)0) == motor_config){
  4295   003082  501B               	movf	dc_motor_move_forward@motor_config^0,w,c
  4296   003084  101C               	iorwf	(dc_motor_move_forward@motor_config+1)^0,w,c
  4297   003086  A4D8               	btfss	status,2,c
  4298   003088  EF48  F018         	goto	u4021
  4299   00308C  EF4A  F018         	goto	u4020
  4300   003090                     u4021:
  4301   003090  EF4E  F018         	goto	l4915
  4302   003094                     u4020:
  4303   003094                     
  4304                           ;ECU_Layer/MOTOR/Motor.c: 29:         ret = (Std_ReturnType)0x01;
  4305   003094  0E01               	movlw	1
  4306   003096  6E1D               	movwf	dc_motor_move_forward@ret^0,c
  4307                           
  4308                           ;ECU_Layer/MOTOR/Motor.c: 30:     }
  4309   003098  EF62  F018         	goto	l4917
  4310   00309C                     l4915:
  4311                           
  4312                           ;ECU_Layer/MOTOR/Motor.c: 32:         ret = gpio_pin_write_logic(&(motor_config->motor_p
      +                          ins[0]) , GPIO_HIGH);
  4313   00309C  C01B  F012         	movff	dc_motor_move_forward@motor_config,gpio_pin_write_logic@str
  4314   0030A0  C01C  F013         	movff	dc_motor_move_forward@motor_config+1,gpio_pin_write_logic@str+1
  4315   0030A4  0E01               	movlw	1
  4316   0030A6  6E14               	movwf	gpio_pin_write_logic@LOG^0,c
  4317   0030A8  EC71  F010         	call	_gpio_pin_write_logic	;wreg free
  4318   0030AC  6E1D               	movwf	dc_motor_move_forward@ret^0,c
  4319                           
  4320                           ;ECU_Layer/MOTOR/Motor.c: 33:         ret = gpio_pin_write_logic(&(motor_config->motor_p
      +                          ins[1]) , GPIO_LOW);
  4321   0030AE  0E01               	movlw	1
  4322   0030B0  241B               	addwf	dc_motor_move_forward@motor_config^0,w,c
  4323   0030B2  6E12               	movwf	gpio_pin_write_logic@str^0,c
  4324   0030B4  0E00               	movlw	0
  4325   0030B6  201C               	addwfc	(dc_motor_move_forward@motor_config+1)^0,w,c
  4326   0030B8  6E13               	movwf	(gpio_pin_write_logic@str+1)^0,c
  4327   0030BA  0E00               	movlw	0
  4328   0030BC  6E14               	movwf	gpio_pin_write_logic@LOG^0,c
  4329   0030BE  EC71  F010         	call	_gpio_pin_write_logic	;wreg free
  4330   0030C2  6E1D               	movwf	dc_motor_move_forward@ret^0,c
  4331   0030C4                     l4917:
  4332                           
  4333                           ;ECU_Layer/MOTOR/Motor.c: 35:     return ret;
  4334   0030C4  501D               	movf	dc_motor_move_forward@ret^0,w,c
  4335   0030C6  0012               	return		;funcret
  4336   0030C8                     __end_of_dc_motor_move_forward:
  4337                           	callstack 0
  4338                           
  4339 ;; *************** function _gpio_pin_write_logic *****************
  4340 ;; Defined at:
  4341 ;;		line 58 in file "MCAL_Layer/GPIO/hal_gpio.c"
  4342 ;; Parameters:    Size  Location     Type
  4343 ;;  str             2   17[COMRAM] PTR const struct .
  4344 ;;		 -> moto_2.motor_pins(2), moto_2(2), moto_1.motor_pins(2), moto_1(2), 
  4345 ;;		 -> lcd_1.DATA_BITS(4), lcd_1(6), relay_off@rel_pin(1), relay_on@rel_pin(1), 
  4346 ;;		 -> relay_initialize@rel_pin(1), led_turn_off@LED_IN(1), led_turn_on@LED_IN(1), led_intialize@LED_IN(1), 
  4347 ;;  LOG             1   19[COMRAM] enum E2989
  4348 ;; Auto vars:     Size  Location     Type
  4349 ;;  ret             1    0        unsigned char 
  4350 ;; Return value:  Size  Location     Type
  4351 ;;                  1    wreg      unsigned char 
  4352 ;; Registers used:
  4353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4354 ;; Tracked objects:
  4355 ;;		On entry : 0/0
  4356 ;;		On exit  : 0/0
  4357 ;;		Unchanged: 0/0
  4358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4359 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4361 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4362 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4363 ;;Total ram usage:        9 bytes
  4364 ;; Hardware stack levels used: 1
  4365 ;; Hardware stack levels required when called: 6
  4366 ;; This function calls:
  4367 ;;		Nothing
  4368 ;; This function is called by:
  4369 ;;		_lcd_4bits_send_command
  4370 ;;		_lcd_4bits_send_char
  4371 ;;		_enable_pin_4bits
  4372 ;;		_send_4bits
  4373 ;;		_dc_motor_move_forward
  4374 ;;		_dc_motor_stop
  4375 ;;		_gpio_pin_intialize
  4376 ;;		_keypad_read_value
  4377 ;;		_turnoff_all_rows
  4378 ;;		_lcd_8bits_send_command
  4379 ;;		_lcd_8bits_send_char
  4380 ;;		_enable_pin_8bits
  4381 ;;		_led_turn_on
  4382 ;;		_led_turn_off
  4383 ;;		_dc_motor_move_backward
  4384 ;;		_relay_on
  4385 ;;		_relay_off
  4386 ;;		_seg_7_pins_write
  4387 ;; This function uses a non-reentrant model
  4388 ;;
  4389                           
  4390                           	psect	text25
  4391   0020E2                     __ptext25:
  4392                           	callstack 0
  4393   0020E2                     _gpio_pin_write_logic:
  4394                           	callstack 20
  4395   0020E2                     
  4396                           ;MCAL_Layer/GPIO/hal_gpio.c: 61:     if(str == ((void*)0) || (str->PIN > 7)){
  4397   0020E2  5012               	movf	gpio_pin_write_logic@str^0,w,c
  4398   0020E4  1013               	iorwf	(gpio_pin_write_logic@str+1)^0,w,c
  4399   0020E6  B4D8               	btfsc	status,2,c
  4400   0020E8  EF78  F010         	goto	u3341
  4401   0020EC  EF7A  F010         	goto	u3340
  4402   0020F0                     u3341:
  4403   0020F0  EF89  F010         	goto	l4333
  4404   0020F4                     u3340:
  4405   0020F4  C012  FFD9         	movff	gpio_pin_write_logic@str,fsr2l
  4406   0020F8  C013  FFDA         	movff	gpio_pin_write_logic@str+1,fsr2h
  4407   0020FC  50DF               	movf	223,w,c
  4408   0020FE  0B07               	andlw	7
  4409   002100  6E15               	movwf	??_gpio_pin_write_logic^0,c
  4410   002102  0E07               	movlw	7
  4411   002104  6415               	cpfsgt	??_gpio_pin_write_logic^0,c
  4412   002106  EF87  F010         	goto	u3351
  4413   00210A  EF89  F010         	goto	u3350
  4414   00210E                     u3351:
  4415   00210E  EFEA  F010         	goto	l4341
  4416   002112                     u3350:
  4417   002112                     l4333:
  4418                           
  4419                           ;MCAL_Layer/GPIO/hal_gpio.c: 63:     }
  4420   002112  EFFF  F010         	goto	l4343
  4421   002116                     l4335:
  4422                           
  4423                           ;MCAL_Layer/GPIO/hal_gpio.c: 68:                 (*LAT_REG[str->PORT] |= (0x01 << str->P
      +                          IN));
  4424   002116  C012  FFD9         	movff	gpio_pin_write_logic@str,fsr2l
  4425   00211A  C013  FFDA         	movff	gpio_pin_write_logic@str+1,fsr2h
  4426   00211E  50DF               	movf	223,w,c
  4427   002120  0B07               	andlw	7
  4428   002122  6E15               	movwf	??_gpio_pin_write_logic^0,c
  4429   002124  0E01               	movlw	1
  4430   002126  6E16               	movwf	(??_gpio_pin_write_logic+1)^0,c
  4431   002128  2A15               	incf	??_gpio_pin_write_logic^0,f,c
  4432   00212A  EF99  F010         	goto	u3364
  4433   00212E                     u3365:
  4434   00212E  90D8               	bcf	status,0,c
  4435   002130  3616               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  4436   002132                     u3364:
  4437   002132  2E15               	decfsz	??_gpio_pin_write_logic^0,f,c
  4438   002134  EF97  F010         	goto	u3365
  4439   002138  C012  FFD9         	movff	gpio_pin_write_logic@str,fsr2l
  4440   00213C  C013  FFDA         	movff	gpio_pin_write_logic@str+1,fsr2h
  4441   002140  30DF               	rrcf	223,w,c
  4442   002142  32E8               	rrcf	wreg,f,c
  4443   002144  32E8               	rrcf	wreg,f,c
  4444   002146  0B07               	andlw	7
  4445   002148  6E17               	movwf	(??_gpio_pin_write_logic+2)^0,c
  4446   00214A  5017               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  4447   00214C  0D02               	mullw	2
  4448   00214E  0E94               	movlw	low _LAT_REG
  4449   002150  24F3               	addwf	243,w,c
  4450   002152  6ED9               	movwf	fsr2l,c
  4451   002154  0E00               	movlw	high _LAT_REG
  4452   002156  20F4               	addwfc	prodh,w,c
  4453   002158  6EDA               	movwf	fsr2h,c
  4454   00215A  CFDE F018          	movff	postinc2,??_gpio_pin_write_logic+3
  4455   00215E  CFDD F019          	movff	postdec2,??_gpio_pin_write_logic+4
  4456   002162  C018  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  4457   002166  C019  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  4458   00216A  5016               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  4459   00216C  12DF               	iorwf	indf2,f,c
  4460                           
  4461                           ;MCAL_Layer/GPIO/hal_gpio.c: 69:                 break;
  4462   00216E  EFFF  F010         	goto	l4343
  4463   002172                     l4337:
  4464                           
  4465                           ;MCAL_Layer/GPIO/hal_gpio.c: 71:                 (*LAT_REG[str->PORT] &= ~(0x01 << str->
      +                          PIN));
  4466   002172  C012  FFD9         	movff	gpio_pin_write_logic@str,fsr2l
  4467   002176  C013  FFDA         	movff	gpio_pin_write_logic@str+1,fsr2h
  4468   00217A  50DF               	movf	223,w,c
  4469   00217C  0B07               	andlw	7
  4470   00217E  6E15               	movwf	??_gpio_pin_write_logic^0,c
  4471   002180  0E01               	movlw	1
  4472   002182  6E16               	movwf	(??_gpio_pin_write_logic+1)^0,c
  4473   002184  2A15               	incf	??_gpio_pin_write_logic^0,f,c
  4474   002186  EFC7  F010         	goto	u3374
  4475   00218A                     u3375:
  4476   00218A  90D8               	bcf	status,0,c
  4477   00218C  3616               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  4478   00218E                     u3374:
  4479   00218E  2E15               	decfsz	??_gpio_pin_write_logic^0,f,c
  4480   002190  EFC5  F010         	goto	u3375
  4481   002194  5016               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  4482   002196  0AFF               	xorlw	255
  4483   002198  6E17               	movwf	(??_gpio_pin_write_logic+2)^0,c
  4484   00219A  C012  FFD9         	movff	gpio_pin_write_logic@str,fsr2l
  4485   00219E  C013  FFDA         	movff	gpio_pin_write_logic@str+1,fsr2h
  4486   0021A2  30DF               	rrcf	223,w,c
  4487   0021A4  32E8               	rrcf	wreg,f,c
  4488   0021A6  32E8               	rrcf	wreg,f,c
  4489   0021A8  0B07               	andlw	7
  4490   0021AA  6E18               	movwf	(??_gpio_pin_write_logic+3)^0,c
  4491   0021AC  5018               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  4492   0021AE  0D02               	mullw	2
  4493   0021B0  0E94               	movlw	low _LAT_REG
  4494   0021B2  24F3               	addwf	243,w,c
  4495   0021B4  6ED9               	movwf	fsr2l,c
  4496   0021B6  0E00               	movlw	high _LAT_REG
  4497   0021B8  20F4               	addwfc	prodh,w,c
  4498   0021BA  6EDA               	movwf	fsr2h,c
  4499   0021BC  CFDE F019          	movff	postinc2,??_gpio_pin_write_logic+4
  4500   0021C0  CFDD F01A          	movff	postdec2,??_gpio_pin_write_logic+5
  4501   0021C4  C019  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  4502   0021C8  C01A  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  4503   0021CC  5017               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  4504   0021CE  16DF               	andwf	indf2,f,c
  4505                           
  4506                           ;MCAL_Layer/GPIO/hal_gpio.c: 72:                 break;
  4507   0021D0  EFFF  F010         	goto	l4343
  4508   0021D4                     l4341:
  4509   0021D4  5014               	movf	gpio_pin_write_logic@LOG^0,w,c
  4510   0021D6  6E15               	movwf	??_gpio_pin_write_logic^0,c
  4511   0021D8  6A16               	clrf	(??_gpio_pin_write_logic+1)^0,c
  4512                           
  4513                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4514                           ; Switch size 1, requested type "simple"
  4515                           ; Number of cases is 1, Range of values is 0 to 0
  4516                           ; switch strategies available:
  4517                           ; Name         Instructions Cycles
  4518                           ; simple_byte            4     3 (average)
  4519                           ;	Chosen strategy is simple_byte
  4520   0021DA  5016               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  4521   0021DC  0A00               	xorlw	0	; case 0
  4522   0021DE  B4D8               	btfsc	status,2,c
  4523   0021E0  EFF4  F010         	goto	l6877
  4524   0021E4  EF89  F010         	goto	l4333
  4525   0021E8                     l6877:
  4526                           
  4527                           ; Switch size 1, requested type "simple"
  4528                           ; Number of cases is 2, Range of values is 0 to 1
  4529                           ; switch strategies available:
  4530                           ; Name         Instructions Cycles
  4531                           ; simple_byte            7     4 (average)
  4532                           ;	Chosen strategy is simple_byte
  4533   0021E8  5015               	movf	??_gpio_pin_write_logic^0,w,c
  4534   0021EA  0A00               	xorlw	0	; case 0
  4535   0021EC  B4D8               	btfsc	status,2,c
  4536   0021EE  EFB9  F010         	goto	l4337
  4537   0021F2  0A01               	xorlw	1	; case 1
  4538   0021F4  B4D8               	btfsc	status,2,c
  4539   0021F6  EF8B  F010         	goto	l4335
  4540   0021FA  EF89  F010         	goto	l4333
  4541   0021FE                     l4343:
  4542                           
  4543                           ;MCAL_Layer/GPIO/hal_gpio.c: 78:     return ret;
  4544   0021FE  0E01               	movlw	1
  4545   002200  0012               	return		;funcret
  4546   002202                     __end_of_gpio_pin_write_logic:
  4547                           	callstack 0
  4548                           
  4549 ;; *************** function _dc_motor_initialize *****************
  4550 ;; Defined at:
  4551 ;;		line 10 in file "ECU_Layer/MOTOR/Motor.c"
  4552 ;; Parameters:    Size  Location     Type
  4553 ;;  motor_config    2   25[COMRAM] PTR struct .
  4554 ;;		 -> moto_2(2), moto_1(2), 
  4555 ;; Auto vars:     Size  Location     Type
  4556 ;;  ret             1   27[COMRAM] unsigned char 
  4557 ;; Return value:  Size  Location     Type
  4558 ;;                  1    wreg      unsigned char 
  4559 ;; Registers used:
  4560 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4561 ;; Tracked objects:
  4562 ;;		On entry : 0/0
  4563 ;;		On exit  : 0/0
  4564 ;;		Unchanged: 0/0
  4565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4566 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4567 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4569 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4570 ;;Total ram usage:        3 bytes
  4571 ;; Hardware stack levels used: 1
  4572 ;; Hardware stack levels required when called: 7
  4573 ;; This function calls:
  4574 ;;		_gpio_pin_direction_intialize
  4575 ;; This function is called by:
  4576 ;;		_main
  4577 ;; This function uses a non-reentrant model
  4578 ;;
  4579                           
  4580                           	psect	text26
  4581   00314C                     __ptext26:
  4582                           	callstack 0
  4583   00314C                     _dc_motor_initialize:
  4584                           	callstack 23
  4585   00314C                     
  4586                           ;ECU_Layer/MOTOR/Motor.c: 14:     if(((void*)0) == motor_config){
  4587   00314C  501A               	movf	dc_motor_initialize@motor_config^0,w,c
  4588   00314E  101B               	iorwf	(dc_motor_initialize@motor_config+1)^0,w,c
  4589   003150  A4D8               	btfss	status,2,c
  4590   003152  EFAD  F018         	goto	u4011
  4591   003156  EFAF  F018         	goto	u4010
  4592   00315A                     u4011:
  4593   00315A  EFB3  F018         	goto	l4903
  4594   00315E                     u4010:
  4595   00315E                     
  4596                           ;ECU_Layer/MOTOR/Motor.c: 15:         ret = (Std_ReturnType)0x01;
  4597   00315E  0E01               	movlw	1
  4598   003160  6E1C               	movwf	dc_motor_initialize@ret^0,c
  4599                           
  4600                           ;ECU_Layer/MOTOR/Motor.c: 16:     }
  4601   003162  EFC3  F018         	goto	l4905
  4602   003166                     l4903:
  4603                           
  4604                           ;ECU_Layer/MOTOR/Motor.c: 18:         ret = gpio_pin_direction_intialize(&(motor_config-
      +                          >motor_pins[0]));
  4605   003166  C01A  F012         	movff	dc_motor_initialize@motor_config,gpio_pin_direction_intialize@str
  4606   00316A  C01B  F013         	movff	dc_motor_initialize@motor_config+1,gpio_pin_direction_intialize@str+1
  4607   00316E  EC01  F011         	call	_gpio_pin_direction_intialize	;wreg free
  4608   003172  6E1C               	movwf	dc_motor_initialize@ret^0,c
  4609                           
  4610                           ;ECU_Layer/MOTOR/Motor.c: 19:         ret = gpio_pin_direction_intialize(&(motor_config-
      +                          >motor_pins[1]));
  4611   003174  0E01               	movlw	1
  4612   003176  241A               	addwf	dc_motor_initialize@motor_config^0,w,c
  4613   003178  6E12               	movwf	gpio_pin_direction_intialize@str^0,c
  4614   00317A  0E00               	movlw	0
  4615   00317C  201B               	addwfc	(dc_motor_initialize@motor_config+1)^0,w,c
  4616   00317E  6E13               	movwf	(gpio_pin_direction_intialize@str+1)^0,c
  4617   003180  EC01  F011         	call	_gpio_pin_direction_intialize	;wreg free
  4618   003184  6E1C               	movwf	dc_motor_initialize@ret^0,c
  4619   003186                     l4905:
  4620                           
  4621                           ;ECU_Layer/MOTOR/Motor.c: 21:     return ret;
  4622   003186  501C               	movf	dc_motor_initialize@ret^0,w,c
  4623   003188  0012               	return		;funcret
  4624   00318A                     __end_of_dc_motor_initialize:
  4625                           	callstack 0
  4626                           
  4627 ;; *************** function _gpio_pin_direction_intialize *****************
  4628 ;; Defined at:
  4629 ;;		line 20 in file "MCAL_Layer/GPIO/hal_gpio.c"
  4630 ;; Parameters:    Size  Location     Type
  4631 ;;  str             2   17[COMRAM] PTR const struct .
  4632 ;;		 -> moto_2.motor_pins(2), moto_2(2), moto_1.motor_pins(2), moto_1(2), 
  4633 ;;		 -> lcd_1.DATA_BITS(4), lcd_1(6), relay_initialize@rel_pin(1), led_intialize@LED_IN(1), 
  4634 ;; Auto vars:     Size  Location     Type
  4635 ;;  ret             1    0        unsigned char 
  4636 ;; Return value:  Size  Location     Type
  4637 ;;                  1    wreg      unsigned char 
  4638 ;; Registers used:
  4639 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4640 ;; Tracked objects:
  4641 ;;		On entry : 0/0
  4642 ;;		On exit  : 0/0
  4643 ;;		Unchanged: 0/0
  4644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4645 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4647 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4648 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4649 ;;Total ram usage:        8 bytes
  4650 ;; Hardware stack levels used: 1
  4651 ;; Hardware stack levels required when called: 6
  4652 ;; This function calls:
  4653 ;;		Nothing
  4654 ;; This function is called by:
  4655 ;;		_dc_motor_initialize
  4656 ;;		_gpio_pin_intialize
  4657 ;;		_button_initialize
  4658 ;;		_keypad_initialize
  4659 ;;		_EXT_INTX_Pin_Initialize
  4660 ;;		_EXT_RBX_Pin_Initialize
  4661 ;; This function uses a non-reentrant model
  4662 ;;
  4663                           
  4664                           	psect	text27
  4665   002202                     __ptext27:
  4666                           	callstack 0
  4667   002202                     _gpio_pin_direction_intialize:
  4668                           	callstack 22
  4669   002202                     
  4670                           ;MCAL_Layer/GPIO/hal_gpio.c: 24:     if(str == ((void*)0) || (str->PIN > 7)){
  4671   002202  5012               	movf	gpio_pin_direction_intialize@str^0,w,c
  4672   002204  1013               	iorwf	(gpio_pin_direction_intialize@str+1)^0,w,c
  4673   002206  B4D8               	btfsc	status,2,c
  4674   002208  EF08  F011         	goto	u3531
  4675   00220C  EF0A  F011         	goto	u3530
  4676   002210                     u3531:
  4677   002210  EF19  F011         	goto	l4465
  4678   002214                     u3530:
  4679   002214  C012  FFD9         	movff	gpio_pin_direction_intialize@str,fsr2l
  4680   002218  C013  FFDA         	movff	gpio_pin_direction_intialize@str+1,fsr2h
  4681   00221C  50DF               	movf	223,w,c
  4682   00221E  0B07               	andlw	7
  4683   002220  6E14               	movwf	??_gpio_pin_direction_intialize^0,c
  4684   002222  0E07               	movlw	7
  4685   002224  6414               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  4686   002226  EF17  F011         	goto	u3541
  4687   00222A  EF19  F011         	goto	u3540
  4688   00222E                     u3541:
  4689   00222E  EF1B  F011         	goto	l4467
  4690   002232                     u3540:
  4691   002232                     l4465:
  4692                           
  4693                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:     }
  4694   002232  EF8E  F011         	goto	l406
  4695   002236                     l4467:
  4696                           
  4697                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:         if(GPIO_DIRECTION_OUTPUT == str->Direction){
  4698   002236  C012  FFD9         	movff	gpio_pin_direction_intialize@str,fsr2l
  4699   00223A  C013  FFDA         	movff	gpio_pin_direction_intialize@str+1,fsr2h
  4700   00223E  BCDF               	btfsc	indf2,6,c
  4701   002240  EF24  F011         	goto	u3551
  4702   002244  EF26  F011         	goto	u3550
  4703   002248                     u3551:
  4704   002248  EF57  F011         	goto	l4471
  4705   00224C                     u3550:
  4706   00224C                     
  4707                           ;MCAL_Layer/GPIO/hal_gpio.c: 30:             (*TRIS_REG[str->PORT] &= ~(0x01 << str->PIN
      +                          ));
  4708   00224C  C012  FFD9         	movff	gpio_pin_direction_intialize@str,fsr2l
  4709   002250  C013  FFDA         	movff	gpio_pin_direction_intialize@str+1,fsr2h
  4710   002254  50DF               	movf	223,w,c
  4711   002256  0B07               	andlw	7
  4712   002258  6E14               	movwf	??_gpio_pin_direction_intialize^0,c
  4713   00225A  0E01               	movlw	1
  4714   00225C  6E15               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  4715   00225E  2A14               	incf	??_gpio_pin_direction_intialize^0,f,c
  4716   002260  EF34  F011         	goto	u3564
  4717   002264                     u3565:
  4718   002264  90D8               	bcf	status,0,c
  4719   002266  3615               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  4720   002268                     u3564:
  4721   002268  2E14               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  4722   00226A  EF32  F011         	goto	u3565
  4723   00226E  5015               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  4724   002270  0AFF               	xorlw	255
  4725   002272  6E16               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  4726   002274  C012  FFD9         	movff	gpio_pin_direction_intialize@str,fsr2l
  4727   002278  C013  FFDA         	movff	gpio_pin_direction_intialize@str+1,fsr2h
  4728   00227C  30DF               	rrcf	223,w,c
  4729   00227E  32E8               	rrcf	wreg,f,c
  4730   002280  32E8               	rrcf	wreg,f,c
  4731   002282  0B07               	andlw	7
  4732   002284  6E17               	movwf	(??_gpio_pin_direction_intialize+3)^0,c
  4733   002286  5017               	movf	(??_gpio_pin_direction_intialize+3)^0,w,c
  4734   002288  0D02               	mullw	2
  4735   00228A  0E8A               	movlw	low _TRIS_REG
  4736   00228C  24F3               	addwf	243,w,c
  4737   00228E  6ED9               	movwf	fsr2l,c
  4738   002290  0E00               	movlw	high _TRIS_REG
  4739   002292  20F4               	addwfc	prodh,w,c
  4740   002294  6EDA               	movwf	fsr2h,c
  4741   002296  CFDE F018          	movff	postinc2,??_gpio_pin_direction_intialize+4
  4742   00229A  CFDD F019          	movff	postdec2,??_gpio_pin_direction_intialize+5
  4743   00229E  C018  FFD9         	movff	??_gpio_pin_direction_intialize+4,fsr2l
  4744   0022A2  C019  FFDA         	movff	??_gpio_pin_direction_intialize+5,fsr2h
  4745   0022A6  5016               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  4746   0022A8  16DF               	andwf	indf2,f,c
  4747                           
  4748                           ;MCAL_Layer/GPIO/hal_gpio.c: 31:         }
  4749   0022AA  EF8E  F011         	goto	l406
  4750   0022AE                     l4471:
  4751   0022AE  C012  FFD9         	movff	gpio_pin_direction_intialize@str,fsr2l
  4752   0022B2  C013  FFDA         	movff	gpio_pin_direction_intialize@str+1,fsr2h
  4753   0022B6  ACDF               	btfss	indf2,6,c
  4754   0022B8  EF60  F011         	goto	u3571
  4755   0022BC  EF62  F011         	goto	u3570
  4756   0022C0                     u3571:
  4757   0022C0  EF19  F011         	goto	l4465
  4758   0022C4                     u3570:
  4759   0022C4                     
  4760                           ;MCAL_Layer/GPIO/hal_gpio.c: 34:             (*TRIS_REG[str->PORT] |= (0x01 << str->PIN)
      +                          );
  4761   0022C4  C012  FFD9         	movff	gpio_pin_direction_intialize@str,fsr2l
  4762   0022C8  C013  FFDA         	movff	gpio_pin_direction_intialize@str+1,fsr2h
  4763   0022CC  50DF               	movf	223,w,c
  4764   0022CE  0B07               	andlw	7
  4765   0022D0  6E14               	movwf	??_gpio_pin_direction_intialize^0,c
  4766   0022D2  0E01               	movlw	1
  4767   0022D4  6E15               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  4768   0022D6  2A14               	incf	??_gpio_pin_direction_intialize^0,f,c
  4769   0022D8  EF70  F011         	goto	u3584
  4770   0022DC                     u3585:
  4771   0022DC  90D8               	bcf	status,0,c
  4772   0022DE  3615               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  4773   0022E0                     u3584:
  4774   0022E0  2E14               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  4775   0022E2  EF6E  F011         	goto	u3585
  4776   0022E6  C012  FFD9         	movff	gpio_pin_direction_intialize@str,fsr2l
  4777   0022EA  C013  FFDA         	movff	gpio_pin_direction_intialize@str+1,fsr2h
  4778   0022EE  30DF               	rrcf	223,w,c
  4779   0022F0  32E8               	rrcf	wreg,f,c
  4780   0022F2  32E8               	rrcf	wreg,f,c
  4781   0022F4  0B07               	andlw	7
  4782   0022F6  6E16               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  4783   0022F8  5016               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  4784   0022FA  0D02               	mullw	2
  4785   0022FC  0E8A               	movlw	low _TRIS_REG
  4786   0022FE  24F3               	addwf	243,w,c
  4787   002300  6ED9               	movwf	fsr2l,c
  4788   002302  0E00               	movlw	high _TRIS_REG
  4789   002304  20F4               	addwfc	prodh,w,c
  4790   002306  6EDA               	movwf	fsr2h,c
  4791   002308  CFDE F017          	movff	postinc2,??_gpio_pin_direction_intialize+3
  4792   00230C  CFDD F018          	movff	postdec2,??_gpio_pin_direction_intialize+4
  4793   002310  C017  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  4794   002314  C018  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  4795   002318  5015               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  4796   00231A  12DF               	iorwf	indf2,f,c
  4797   00231C                     l406:
  4798                           
  4799                           ;MCAL_Layer/GPIO/hal_gpio.c: 40:     return ret;
  4800   00231C  0E01               	movlw	1
  4801   00231E  0012               	return		;funcret
  4802   002320                     __end_of_gpio_pin_direction_intialize:
  4803                           	callstack 0
  4804                           
  4805 ;; *************** function ___xxtofl *****************
  4806 ;; Defined at:
  4807 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
  4808 ;; Parameters:    Size  Location     Type
  4809 ;;  sign            1    wreg     unsigned char 
  4810 ;;  val             4   17[COMRAM] long 
  4811 ;; Auto vars:     Size  Location     Type
  4812 ;;  sign            1   25[COMRAM] unsigned char 
  4813 ;;  arg             4   27[COMRAM] unsigned long 
  4814 ;;  exp             1   26[COMRAM] unsigned char 
  4815 ;; Return value:  Size  Location     Type
  4816 ;;                  4   17[COMRAM] unsigned char 
  4817 ;; Registers used:
  4818 ;;		wreg, status,2, status,0
  4819 ;; Tracked objects:
  4820 ;;		On entry : 0/0
  4821 ;;		On exit  : 0/0
  4822 ;;		Unchanged: 0/0
  4823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4824 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4825 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4826 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4827 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4828 ;;Total ram usage:       14 bytes
  4829 ;; Hardware stack levels used: 1
  4830 ;; Hardware stack levels required when called: 6
  4831 ;; This function calls:
  4832 ;;		Nothing
  4833 ;; This function is called by:
  4834 ;;		_main
  4835 ;; This function uses a non-reentrant model
  4836 ;;
  4837                           
  4838                           	psect	text28
  4839   0019D6                     __ptext28:
  4840                           	callstack 0
  4841   0019D6                     ___xxtofl:
  4842                           	callstack 24
  4843                           
  4844                           ;incstack = 0
  4845                           ;___xxtofl@sign stored from wreg
  4846   0019D6  6E1A               	movwf	___xxtofl@sign^0,c
  4847   0019D8  501A               	movf	___xxtofl@sign^0,w,c
  4848   0019DA  B4D8               	btfsc	status,2,c
  4849   0019DC  EFF2  F00C         	goto	u4411
  4850   0019E0  EFF4  F00C         	goto	u4410
  4851   0019E4                     u4411:
  4852   0019E4  EF16  F00D         	goto	l1748
  4853   0019E8                     u4410:
  4854   0019E8  BE15               	btfsc	(___xxtofl@val+3)^0,7,c
  4855   0019EA  EFFB  F00C         	goto	u4420
  4856   0019EE  EFF9  F00C         	goto	u4421
  4857   0019F2                     u4421:
  4858   0019F2  EF16  F00D         	goto	l1748
  4859   0019F6                     u4420:
  4860   0019F6  C012  F016         	movff	___xxtofl@val,??___xxtofl
  4861   0019FA  C013  F017         	movff	___xxtofl@val+1,??___xxtofl+1
  4862   0019FE  C014  F018         	movff	___xxtofl@val+2,??___xxtofl+2
  4863   001A02  C015  F019         	movff	___xxtofl@val+3,??___xxtofl+3
  4864   001A06  1E16               	comf	??___xxtofl^0,f,c
  4865   001A08  1E17               	comf	(??___xxtofl+1)^0,f,c
  4866   001A0A  1E18               	comf	(??___xxtofl+2)^0,f,c
  4867   001A0C  1E19               	comf	(??___xxtofl+3)^0,f,c
  4868   001A0E  2A16               	incf	??___xxtofl^0,f,c
  4869   001A10  0E00               	movlw	0
  4870   001A12  2217               	addwfc	(??___xxtofl+1)^0,f,c
  4871   001A14  2218               	addwfc	(??___xxtofl+2)^0,f,c
  4872   001A16  2219               	addwfc	(??___xxtofl+3)^0,f,c
  4873   001A18  C016  F01C         	movff	??___xxtofl,___xxtofl@arg
  4874   001A1C  C017  F01D         	movff	??___xxtofl+1,___xxtofl@arg+1
  4875   001A20  C018  F01E         	movff	??___xxtofl+2,___xxtofl@arg+2
  4876   001A24  C019  F01F         	movff	??___xxtofl+3,___xxtofl@arg+3
  4877   001A28  EF1E  F00D         	goto	l5265
  4878   001A2C                     l1748:
  4879   001A2C  C012  F01C         	movff	___xxtofl@val,___xxtofl@arg
  4880   001A30  C013  F01D         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4881   001A34  C014  F01E         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4882   001A38  C015  F01F         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4883   001A3C                     l5265:
  4884   001A3C  5012               	movf	___xxtofl@val^0,w,c
  4885   001A3E  1013               	iorwf	(___xxtofl@val+1)^0,w,c
  4886   001A40  1014               	iorwf	(___xxtofl@val+2)^0,w,c
  4887   001A42  1015               	iorwf	(___xxtofl@val+3)^0,w,c
  4888   001A44  A4D8               	btfss	status,2,c
  4889   001A46  EF27  F00D         	goto	u4431
  4890   001A4A  EF29  F00D         	goto	u4430
  4891   001A4E                     u4431:
  4892   001A4E  EF33  F00D         	goto	l5271
  4893   001A52                     u4430:
  4894   001A52  0E00               	movlw	0
  4895   001A54  6E12               	movwf	?___xxtofl^0,c
  4896   001A56  0E00               	movlw	0
  4897   001A58  6E13               	movwf	(?___xxtofl+1)^0,c
  4898   001A5A  0E00               	movlw	0
  4899   001A5C  6E14               	movwf	(?___xxtofl+2)^0,c
  4900   001A5E  0E00               	movlw	0
  4901   001A60  6E15               	movwf	(?___xxtofl+3)^0,c
  4902   001A62  EFC4  F00D         	goto	l1751
  4903   001A66                     l5271:
  4904   001A66  0E96               	movlw	150
  4905   001A68  6E1B               	movwf	___xxtofl@exp^0,c
  4906   001A6A  EF3D  F00D         	goto	l5275
  4907   001A6E                     l5273:
  4908   001A6E  2A1B               	incf	___xxtofl@exp^0,f,c
  4909   001A70  90D8               	bcf	status,0,c
  4910   001A72  321F               	rrcf	(___xxtofl@arg+3)^0,f,c
  4911   001A74  321E               	rrcf	(___xxtofl@arg+2)^0,f,c
  4912   001A76  321D               	rrcf	(___xxtofl@arg+1)^0,f,c
  4913   001A78  321C               	rrcf	___xxtofl@arg^0,f,c
  4914   001A7A                     l5275:
  4915   001A7A  0E00               	movlw	0
  4916   001A7C  141C               	andwf	___xxtofl@arg^0,w,c
  4917   001A7E  6E16               	movwf	??___xxtofl^0,c
  4918   001A80  0E00               	movlw	0
  4919   001A82  141D               	andwf	(___xxtofl@arg+1)^0,w,c
  4920   001A84  6E17               	movwf	(??___xxtofl+1)^0,c
  4921   001A86  0E00               	movlw	0
  4922   001A88  141E               	andwf	(___xxtofl@arg+2)^0,w,c
  4923   001A8A  6E18               	movwf	(??___xxtofl+2)^0,c
  4924   001A8C  0EFE               	movlw	254
  4925   001A8E  141F               	andwf	(___xxtofl@arg+3)^0,w,c
  4926   001A90  6E19               	movwf	(??___xxtofl+3)^0,c
  4927   001A92  5016               	movf	??___xxtofl^0,w,c
  4928   001A94  1017               	iorwf	(??___xxtofl+1)^0,w,c
  4929   001A96  1018               	iorwf	(??___xxtofl+2)^0,w,c
  4930   001A98  1019               	iorwf	(??___xxtofl+3)^0,w,c
  4931   001A9A  A4D8               	btfss	status,2,c
  4932   001A9C  EF52  F00D         	goto	u4441
  4933   001AA0  EF54  F00D         	goto	u4440
  4934   001AA4                     u4441:
  4935   001AA4  EF37  F00D         	goto	l5273
  4936   001AA8                     u4440:
  4937   001AA8  EF62  F00D         	goto	l1755
  4938   001AAC                     l5277:
  4939   001AAC  2A1B               	incf	___xxtofl@exp^0,f,c
  4940   001AAE  0E01               	movlw	1
  4941   001AB0  261C               	addwf	___xxtofl@arg^0,f,c
  4942   001AB2  0E00               	movlw	0
  4943   001AB4  221D               	addwfc	(___xxtofl@arg+1)^0,f,c
  4944   001AB6  221E               	addwfc	(___xxtofl@arg+2)^0,f,c
  4945   001AB8  221F               	addwfc	(___xxtofl@arg+3)^0,f,c
  4946   001ABA  90D8               	bcf	status,0,c
  4947   001ABC  321F               	rrcf	(___xxtofl@arg+3)^0,f,c
  4948   001ABE  321E               	rrcf	(___xxtofl@arg+2)^0,f,c
  4949   001AC0  321D               	rrcf	(___xxtofl@arg+1)^0,f,c
  4950   001AC2  321C               	rrcf	___xxtofl@arg^0,f,c
  4951   001AC4                     l1755:
  4952   001AC4  0E00               	movlw	0
  4953   001AC6  141C               	andwf	___xxtofl@arg^0,w,c
  4954   001AC8  6E16               	movwf	??___xxtofl^0,c
  4955   001ACA  0E00               	movlw	0
  4956   001ACC  141D               	andwf	(___xxtofl@arg+1)^0,w,c
  4957   001ACE  6E17               	movwf	(??___xxtofl+1)^0,c
  4958   001AD0  0E00               	movlw	0
  4959   001AD2  141E               	andwf	(___xxtofl@arg+2)^0,w,c
  4960   001AD4  6E18               	movwf	(??___xxtofl+2)^0,c
  4961   001AD6  0EFF               	movlw	255
  4962   001AD8  141F               	andwf	(___xxtofl@arg+3)^0,w,c
  4963   001ADA  6E19               	movwf	(??___xxtofl+3)^0,c
  4964   001ADC  5016               	movf	??___xxtofl^0,w,c
  4965   001ADE  1017               	iorwf	(??___xxtofl+1)^0,w,c
  4966   001AE0  1018               	iorwf	(??___xxtofl+2)^0,w,c
  4967   001AE2  1019               	iorwf	(??___xxtofl+3)^0,w,c
  4968   001AE4  A4D8               	btfss	status,2,c
  4969   001AE6  EF77  F00D         	goto	u4451
  4970   001AEA  EF79  F00D         	goto	u4450
  4971   001AEE                     u4451:
  4972   001AEE  EF56  F00D         	goto	l5277
  4973   001AF2                     u4450:
  4974   001AF2  EF81  F00D         	goto	l5285
  4975   001AF6                     l5283:
  4976   001AF6  061B               	decf	___xxtofl@exp^0,f,c
  4977   001AF8  90D8               	bcf	status,0,c
  4978   001AFA  361C               	rlcf	___xxtofl@arg^0,f,c
  4979   001AFC  361D               	rlcf	(___xxtofl@arg+1)^0,f,c
  4980   001AFE  361E               	rlcf	(___xxtofl@arg+2)^0,f,c
  4981   001B00  361F               	rlcf	(___xxtofl@arg+3)^0,f,c
  4982   001B02                     l5285:
  4983   001B02  BE1E               	btfsc	(___xxtofl@arg+2)^0,7,c
  4984   001B04  EF86  F00D         	goto	u4461
  4985   001B08  EF88  F00D         	goto	u4460
  4986   001B0C                     u4461:
  4987   001B0C  EF90  F00D         	goto	l1762
  4988   001B10                     u4460:
  4989   001B10  0E02               	movlw	2
  4990   001B12  601B               	cpfslt	___xxtofl@exp^0,c
  4991   001B14  EF8E  F00D         	goto	u4471
  4992   001B18  EF90  F00D         	goto	u4470
  4993   001B1C                     u4471:
  4994   001B1C  EF7B  F00D         	goto	l5283
  4995   001B20                     u4470:
  4996   001B20                     l1762:
  4997   001B20  B01B               	btfsc	___xxtofl@exp^0,0,c
  4998   001B22  EF95  F00D         	goto	u4481
  4999   001B26  EF97  F00D         	goto	u4480
  5000   001B2A                     u4481:
  5001   001B2A  EF98  F00D         	goto	l5291
  5002   001B2E                     u4480:
  5003   001B2E  9E1E               	bcf	(___xxtofl@arg+2)^0,7,c
  5004   001B30                     l5291:
  5005   001B30  90D8               	bcf	status,0,c
  5006   001B32  321B               	rrcf	___xxtofl@exp^0,f,c
  5007   001B34  C01B  F016         	movff	___xxtofl@exp,??___xxtofl
  5008   001B38  6A17               	clrf	(??___xxtofl+1)^0,c
  5009   001B3A  6A18               	clrf	(??___xxtofl+2)^0,c
  5010   001B3C  6A19               	clrf	(??___xxtofl+3)^0,c
  5011   001B3E  C016  F019         	movff	??___xxtofl,??___xxtofl+3
  5012   001B42  6A18               	clrf	(??___xxtofl+2)^0,c
  5013   001B44  6A17               	clrf	(??___xxtofl+1)^0,c
  5014   001B46  6A16               	clrf	??___xxtofl^0,c
  5015   001B48  5016               	movf	??___xxtofl^0,w,c
  5016   001B4A  121C               	iorwf	___xxtofl@arg^0,f,c
  5017   001B4C  5017               	movf	(??___xxtofl+1)^0,w,c
  5018   001B4E  121D               	iorwf	(___xxtofl@arg+1)^0,f,c
  5019   001B50  5018               	movf	(??___xxtofl+2)^0,w,c
  5020   001B52  121E               	iorwf	(___xxtofl@arg+2)^0,f,c
  5021   001B54  5019               	movf	(??___xxtofl+3)^0,w,c
  5022   001B56  121F               	iorwf	(___xxtofl@arg+3)^0,f,c
  5023   001B58  501A               	movf	___xxtofl@sign^0,w,c
  5024   001B5A  B4D8               	btfsc	status,2,c
  5025   001B5C  EFB2  F00D         	goto	u4491
  5026   001B60  EFB4  F00D         	goto	u4490
  5027   001B64                     u4491:
  5028   001B64  EFBC  F00D         	goto	l5301
  5029   001B68                     u4490:
  5030   001B68  BE15               	btfsc	(___xxtofl@val+3)^0,7,c
  5031   001B6A  EFBB  F00D         	goto	u4500
  5032   001B6E  EFB9  F00D         	goto	u4501
  5033   001B72                     u4501:
  5034   001B72  EFBC  F00D         	goto	l5301
  5035   001B76                     u4500:
  5036   001B76  8E1F               	bsf	(___xxtofl@arg+3)^0,7,c
  5037   001B78                     l5301:
  5038   001B78  C01C  F012         	movff	___xxtofl@arg,?___xxtofl
  5039   001B7C  C01D  F013         	movff	___xxtofl@arg+1,?___xxtofl+1
  5040   001B80  C01E  F014         	movff	___xxtofl@arg+2,?___xxtofl+2
  5041   001B84  C01F  F015         	movff	___xxtofl@arg+3,?___xxtofl+3
  5042   001B88                     l1751:
  5043   001B88  0012               	return		;funcret
  5044   001B8A                     __end_of___xxtofl:
  5045                           	callstack 0
  5046                           
  5047 ;; *************** function ___lwdiv *****************
  5048 ;; Defined at:
  5049 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwdiv.c"
  5050 ;; Parameters:    Size  Location     Type
  5051 ;;  dividend        2   17[COMRAM] unsigned int 
  5052 ;;  divisor         2   19[COMRAM] unsigned int 
  5053 ;; Auto vars:     Size  Location     Type
  5054 ;;  quotient        2   21[COMRAM] unsigned int 
  5055 ;;  counter         1   23[COMRAM] unsigned char 
  5056 ;; Return value:  Size  Location     Type
  5057 ;;                  2   17[COMRAM] unsigned int 
  5058 ;; Registers used:
  5059 ;;		wreg, status,2, status,0
  5060 ;; Tracked objects:
  5061 ;;		On entry : 0/0
  5062 ;;		On exit  : 0/0
  5063 ;;		Unchanged: 0/0
  5064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5065 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5066 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5068 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5069 ;;Total ram usage:        7 bytes
  5070 ;; Hardware stack levels used: 1
  5071 ;; Hardware stack levels required when called: 6
  5072 ;; This function calls:
  5073 ;;		Nothing
  5074 ;; This function is called by:
  5075 ;;		_main
  5076 ;; This function uses a non-reentrant model
  5077 ;;
  5078                           
  5079                           	psect	text29
  5080   002CF6                     __ptext29:
  5081                           	callstack 0
  5082   002CF6                     ___lwdiv:
  5083                           	callstack 24
  5084   002CF6  0E00               	movlw	0
  5085   002CF8  6E17               	movwf	(___lwdiv@quotient+1)^0,c
  5086   002CFA  0E00               	movlw	0
  5087   002CFC  6E16               	movwf	___lwdiv@quotient^0,c
  5088   002CFE  5014               	movf	___lwdiv@divisor^0,w,c
  5089   002D00  1015               	iorwf	(___lwdiv@divisor+1)^0,w,c
  5090   002D02  B4D8               	btfsc	status,2,c
  5091   002D04  EF86  F016         	goto	u4381
  5092   002D08  EF88  F016         	goto	u4380
  5093   002D0C                     u4381:
  5094   002D0C  EFB0  F016         	goto	l1584
  5095   002D10                     u4380:
  5096   002D10  0E01               	movlw	1
  5097   002D12  6E18               	movwf	___lwdiv@counter^0,c
  5098   002D14  EF90  F016         	goto	l5245
  5099   002D18                     l5243:
  5100   002D18  90D8               	bcf	status,0,c
  5101   002D1A  3614               	rlcf	___lwdiv@divisor^0,f,c
  5102   002D1C  3615               	rlcf	(___lwdiv@divisor+1)^0,f,c
  5103   002D1E  2A18               	incf	___lwdiv@counter^0,f,c
  5104   002D20                     l5245:
  5105   002D20  AE15               	btfss	(___lwdiv@divisor+1)^0,7,c
  5106   002D22  EF95  F016         	goto	u4391
  5107   002D26  EF97  F016         	goto	u4390
  5108   002D2A                     u4391:
  5109   002D2A  EF8C  F016         	goto	l5243
  5110   002D2E                     u4390:
  5111   002D2E                     l5247:
  5112   002D2E  90D8               	bcf	status,0,c
  5113   002D30  3616               	rlcf	___lwdiv@quotient^0,f,c
  5114   002D32  3617               	rlcf	(___lwdiv@quotient+1)^0,f,c
  5115   002D34  5014               	movf	___lwdiv@divisor^0,w,c
  5116   002D36  5C12               	subwf	___lwdiv@dividend^0,w,c
  5117   002D38  5015               	movf	(___lwdiv@divisor+1)^0,w,c
  5118   002D3A  5813               	subwfb	(___lwdiv@dividend+1)^0,w,c
  5119   002D3C  A0D8               	btfss	status,0,c
  5120   002D3E  EFA3  F016         	goto	u4401
  5121   002D42  EFA5  F016         	goto	u4400
  5122   002D46                     u4401:
  5123   002D46  EFAA  F016         	goto	l5255
  5124   002D4A                     u4400:
  5125   002D4A  5014               	movf	___lwdiv@divisor^0,w,c
  5126   002D4C  5E12               	subwf	___lwdiv@dividend^0,f,c
  5127   002D4E  5015               	movf	(___lwdiv@divisor+1)^0,w,c
  5128   002D50  5A13               	subwfb	(___lwdiv@dividend+1)^0,f,c
  5129   002D52  8016               	bsf	___lwdiv@quotient^0,0,c
  5130   002D54                     l5255:
  5131   002D54  90D8               	bcf	status,0,c
  5132   002D56  3215               	rrcf	(___lwdiv@divisor+1)^0,f,c
  5133   002D58  3214               	rrcf	___lwdiv@divisor^0,f,c
  5134   002D5A  2E18               	decfsz	___lwdiv@counter^0,f,c
  5135   002D5C  EF97  F016         	goto	l5247
  5136   002D60                     l1584:
  5137   002D60  C016  F012         	movff	___lwdiv@quotient,?___lwdiv
  5138   002D64  C017  F013         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5139   002D68  0012               	return		;funcret
  5140   002D6A                     __end_of___lwdiv:
  5141                           	callstack 0
  5142                           
  5143 ;; *************** function ___fltol *****************
  5144 ;; Defined at:
  5145 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  5146 ;; Parameters:    Size  Location     Type
  5147 ;;  f1              4   56[COMRAM] unsigned int 
  5148 ;; Auto vars:     Size  Location     Type
  5149 ;;  exp1            1   65[COMRAM] unsigned char 
  5150 ;;  sign1           1   64[COMRAM] unsigned char 
  5151 ;; Return value:  Size  Location     Type
  5152 ;;                  4   56[COMRAM] long 
  5153 ;; Registers used:
  5154 ;;		wreg, status,2, status,0
  5155 ;; Tracked objects:
  5156 ;;		On entry : 0/0
  5157 ;;		On exit  : 0/0
  5158 ;;		Unchanged: 0/0
  5159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5160 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5161 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5162 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5163 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5164 ;;Total ram usage:       10 bytes
  5165 ;; Hardware stack levels used: 1
  5166 ;; Hardware stack levels required when called: 6
  5167 ;; This function calls:
  5168 ;;		Nothing
  5169 ;; This function is called by:
  5170 ;;		_main
  5171 ;; This function uses a non-reentrant model
  5172 ;;
  5173                           
  5174                           	psect	text30
  5175   00243E                     __ptext30:
  5176                           	callstack 0
  5177   00243E                     ___fltol:
  5178                           	callstack 24
  5179   00243E  343B               	rlcf	(___fltol@f1+2)^0,w,c
  5180   002440  343C               	rlcf	(___fltol@f1+3)^0,w,c
  5181   002442  6E42               	movwf	___fltol@exp1^0,c
  5182   002444  5042               	movf	___fltol@exp1^0,w,c
  5183   002446  A4D8               	btfss	status,2,c
  5184   002448  EF28  F012         	goto	u4311
  5185   00244C  EF2A  F012         	goto	u4310
  5186   002450                     u4311:
  5187   002450  EF34  F012         	goto	l5199
  5188   002454                     u4310:
  5189   002454                     l5195:
  5190   002454  0E00               	movlw	0
  5191   002456  6E39               	movwf	?___fltol^0,c
  5192   002458  0E00               	movlw	0
  5193   00245A  6E3A               	movwf	(?___fltol+1)^0,c
  5194   00245C  0E00               	movlw	0
  5195   00245E  6E3B               	movwf	(?___fltol+2)^0,c
  5196   002460  0E00               	movlw	0
  5197   002462  6E3C               	movwf	(?___fltol+3)^0,c
  5198   002464  EFA1  F012         	goto	l1390
  5199   002468                     l5199:
  5200   002468  C039  F03D         	movff	___fltol@f1,??___fltol
  5201   00246C  C03A  F03E         	movff	___fltol@f1+1,??___fltol+1
  5202   002470  C03B  F03F         	movff	___fltol@f1+2,??___fltol+2
  5203   002474  C03C  F040         	movff	___fltol@f1+3,??___fltol+3
  5204   002478  0E20               	movlw	32
  5205   00247A  EF44  F012         	goto	u4320
  5206   00247E                     u4325:
  5207   00247E  90D8               	bcf	status,0,c
  5208   002480  3240               	rrcf	(??___fltol+3)^0,f,c
  5209   002482  323F               	rrcf	(??___fltol+2)^0,f,c
  5210   002484  323E               	rrcf	(??___fltol+1)^0,f,c
  5211   002486  323D               	rrcf	??___fltol^0,f,c
  5212   002488                     u4320:
  5213   002488  2EE8               	decfsz	wreg,f,c
  5214   00248A  EF3F  F012         	goto	u4325
  5215   00248E  503D               	movf	??___fltol^0,w,c
  5216   002490  6E41               	movwf	___fltol@sign1^0,c
  5217   002492  8E3B               	bsf	(___fltol@f1+2)^0,7,c
  5218   002494  0EFF               	movlw	255
  5219   002496  1639               	andwf	___fltol@f1^0,f,c
  5220   002498  0EFF               	movlw	255
  5221   00249A  163A               	andwf	(___fltol@f1+1)^0,f,c
  5222   00249C  0EFF               	movlw	255
  5223   00249E  163B               	andwf	(___fltol@f1+2)^0,f,c
  5224   0024A0  0E00               	movlw	0
  5225   0024A2  163C               	andwf	(___fltol@f1+3)^0,f,c
  5226   0024A4  0E96               	movlw	150
  5227   0024A6  5E42               	subwf	___fltol@exp1^0,f,c
  5228   0024A8  BE42               	btfsc	___fltol@exp1^0,7,c
  5229   0024AA  EF5B  F012         	goto	u4330
  5230   0024AE  EF59  F012         	goto	u4331
  5231   0024B2                     u4331:
  5232   0024B2  EF71  F012         	goto	l5219
  5233   0024B6                     u4330:
  5234   0024B6  5042               	movf	___fltol@exp1^0,w,c
  5235   0024B8  0A80               	xorlw	128
  5236   0024BA  0F97               	addlw	151
  5237   0024BC  B0D8               	btfsc	status,0,c
  5238   0024BE  EF63  F012         	goto	u4341
  5239   0024C2  EF65  F012         	goto	u4340
  5240   0024C6                     u4341:
  5241   0024C6  EF67  F012         	goto	l5215
  5242   0024CA                     u4340:
  5243   0024CA  EF2A  F012         	goto	l5195
  5244   0024CE                     l5215:
  5245   0024CE  90D8               	bcf	status,0,c
  5246   0024D0  323C               	rrcf	(___fltol@f1+3)^0,f,c
  5247   0024D2  323B               	rrcf	(___fltol@f1+2)^0,f,c
  5248   0024D4  323A               	rrcf	(___fltol@f1+1)^0,f,c
  5249   0024D6  3239               	rrcf	___fltol@f1^0,f,c
  5250   0024D8  3E42               	incfsz	___fltol@exp1^0,f,c
  5251   0024DA  EF67  F012         	goto	l5215
  5252   0024DE  EF89  F012         	goto	l5229
  5253   0024E2                     l5219:
  5254   0024E2  0E1F               	movlw	31
  5255   0024E4  6442               	cpfsgt	___fltol@exp1^0,c
  5256   0024E6  EF77  F012         	goto	u4351
  5257   0024EA  EF79  F012         	goto	u4350
  5258   0024EE                     u4351:
  5259   0024EE  EF81  F012         	goto	l5227
  5260   0024F2                     u4350:
  5261   0024F2  EF2A  F012         	goto	l5195
  5262   0024F6                     l5225:
  5263   0024F6  90D8               	bcf	status,0,c
  5264   0024F8  3639               	rlcf	___fltol@f1^0,f,c
  5265   0024FA  363A               	rlcf	(___fltol@f1+1)^0,f,c
  5266   0024FC  363B               	rlcf	(___fltol@f1+2)^0,f,c
  5267   0024FE  363C               	rlcf	(___fltol@f1+3)^0,f,c
  5268   002500  0642               	decf	___fltol@exp1^0,f,c
  5269   002502                     l5227:
  5270   002502  5042               	movf	___fltol@exp1^0,w,c
  5271   002504  A4D8               	btfss	status,2,c
  5272   002506  EF87  F012         	goto	u4361
  5273   00250A  EF89  F012         	goto	u4360
  5274   00250E                     u4361:
  5275   00250E  EF7B  F012         	goto	l5225
  5276   002512                     u4360:
  5277   002512                     l5229:
  5278   002512  5041               	movf	___fltol@sign1^0,w,c
  5279   002514  B4D8               	btfsc	status,2,c
  5280   002516  EF8F  F012         	goto	u4371
  5281   00251A  EF91  F012         	goto	u4370
  5282   00251E                     u4371:
  5283   00251E  EF99  F012         	goto	l5233
  5284   002522                     u4370:
  5285   002522  1E3C               	comf	(___fltol@f1+3)^0,f,c
  5286   002524  1E3B               	comf	(___fltol@f1+2)^0,f,c
  5287   002526  1E3A               	comf	(___fltol@f1+1)^0,f,c
  5288   002528  6C39               	negf	___fltol@f1^0,c
  5289   00252A  0E00               	movlw	0
  5290   00252C  223A               	addwfc	(___fltol@f1+1)^0,f,c
  5291   00252E  223B               	addwfc	(___fltol@f1+2)^0,f,c
  5292   002530  223C               	addwfc	(___fltol@f1+3)^0,f,c
  5293   002532                     l5233:
  5294   002532  C039  F039         	movff	___fltol@f1,?___fltol
  5295   002536  C03A  F03A         	movff	___fltol@f1+1,?___fltol+1
  5296   00253A  C03B  F03B         	movff	___fltol@f1+2,?___fltol+2
  5297   00253E  C03C  F03C         	movff	___fltol@f1+3,?___fltol+3
  5298   002542                     l1390:
  5299   002542  0012               	return		;funcret
  5300   002544                     __end_of___fltol:
  5301                           	callstack 0
  5302                           
  5303 ;; *************** function ___flmul *****************
  5304 ;; Defined at:
  5305 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
  5306 ;; Parameters:    Size  Location     Type
  5307 ;;  b               4   31[COMRAM] long 
  5308 ;;  a               4   35[COMRAM] long 
  5309 ;; Auto vars:     Size  Location     Type
  5310 ;;  prod            4   50[COMRAM] struct .
  5311 ;;  grs             4   44[COMRAM] unsigned long 
  5312 ;;  temp            2   54[COMRAM] struct .
  5313 ;;  bexp            1   49[COMRAM] unsigned char 
  5314 ;;  aexp            1   48[COMRAM] unsigned char 
  5315 ;;  sign            1   43[COMRAM] unsigned char 
  5316 ;; Return value:  Size  Location     Type
  5317 ;;                  4   31[COMRAM] unsigned char 
  5318 ;; Registers used:
  5319 ;;		wreg, status,2, status,0, prodl, prodh
  5320 ;; Tracked objects:
  5321 ;;		On entry : 0/0
  5322 ;;		On exit  : 0/0
  5323 ;;		Unchanged: 0/0
  5324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5325 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5326 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5327 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5328 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5329 ;;Total ram usage:       25 bytes
  5330 ;; Hardware stack levels used: 1
  5331 ;; Hardware stack levels required when called: 6
  5332 ;; This function calls:
  5333 ;;		Nothing
  5334 ;; This function is called by:
  5335 ;;		_main
  5336 ;; This function uses a non-reentrant model
  5337 ;;
  5338                           
  5339                           	psect	text31
  5340   001030                     __ptext31:
  5341                           	callstack 0
  5342   001030                     ___flmul:
  5343                           	callstack 24
  5344   001030  5023               	movf	(___flmul@b+3)^0,w,c
  5345   001032  0B80               	andlw	128
  5346   001034  6E2C               	movwf	___flmul@sign^0,c
  5347   001036  5023               	movf	(___flmul@b+3)^0,w,c
  5348   001038  2423               	addwf	(___flmul@b+3)^0,w,c
  5349   00103A  6E32               	movwf	___flmul@bexp^0,c
  5350   00103C  AE22               	btfss	(___flmul@b+2)^0,7,c
  5351   00103E  EF23  F008         	goto	u4121
  5352   001042  EF25  F008         	goto	u4120
  5353   001046                     u4121:
  5354   001046  EF26  F008         	goto	l5069
  5355   00104A                     u4120:
  5356   00104A  8032               	bsf	___flmul@bexp^0,0,c
  5357   00104C                     l5069:
  5358   00104C  5032               	movf	___flmul@bexp^0,w,c
  5359   00104E  B4D8               	btfsc	status,2,c
  5360   001050  EF2C  F008         	goto	u4131
  5361   001054  EF2E  F008         	goto	u4130
  5362   001058                     u4131:
  5363   001058  EF41  F008         	goto	l5077
  5364   00105C                     u4130:
  5365   00105C  2832               	incf	___flmul@bexp^0,w,c
  5366   00105E  A4D8               	btfss	status,2,c
  5367   001060  EF34  F008         	goto	u4141
  5368   001064  EF36  F008         	goto	u4140
  5369   001068                     u4141:
  5370   001068  EF3E  F008         	goto	l5075
  5371   00106C                     u4140:
  5372   00106C  0E00               	movlw	0
  5373   00106E  6E20               	movwf	___flmul@b^0,c
  5374   001070  0E00               	movlw	0
  5375   001072  6E21               	movwf	(___flmul@b+1)^0,c
  5376   001074  0E00               	movlw	0
  5377   001076  6E22               	movwf	(___flmul@b+2)^0,c
  5378   001078  0E00               	movlw	0
  5379   00107A  6E23               	movwf	(___flmul@b+3)^0,c
  5380   00107C                     l5075:
  5381   00107C  8E22               	bsf	(___flmul@b+2)^0,7,c
  5382   00107E  EF49  F008         	goto	l5079
  5383   001082                     l5077:
  5384   001082  0E00               	movlw	0
  5385   001084  6E20               	movwf	___flmul@b^0,c
  5386   001086  0E00               	movlw	0
  5387   001088  6E21               	movwf	(___flmul@b+1)^0,c
  5388   00108A  0E00               	movlw	0
  5389   00108C  6E22               	movwf	(___flmul@b+2)^0,c
  5390   00108E  0E00               	movlw	0
  5391   001090  6E23               	movwf	(___flmul@b+3)^0,c
  5392   001092                     l5079:
  5393   001092  5027               	movf	(___flmul@a+3)^0,w,c
  5394   001094  0B80               	andlw	128
  5395   001096  1A2C               	xorwf	___flmul@sign^0,f,c
  5396   001098  5027               	movf	(___flmul@a+3)^0,w,c
  5397   00109A  2427               	addwf	(___flmul@a+3)^0,w,c
  5398   00109C  6E31               	movwf	___flmul@aexp^0,c
  5399   00109E  AE26               	btfss	(___flmul@a+2)^0,7,c
  5400   0010A0  EF54  F008         	goto	u4151
  5401   0010A4  EF56  F008         	goto	u4150
  5402   0010A8                     u4151:
  5403   0010A8  EF57  F008         	goto	l5087
  5404   0010AC                     u4150:
  5405   0010AC  8031               	bsf	___flmul@aexp^0,0,c
  5406   0010AE                     l5087:
  5407   0010AE  5031               	movf	___flmul@aexp^0,w,c
  5408   0010B0  B4D8               	btfsc	status,2,c
  5409   0010B2  EF5D  F008         	goto	u4161
  5410   0010B6  EF5F  F008         	goto	u4160
  5411   0010BA                     u4161:
  5412   0010BA  EF72  F008         	goto	l5095
  5413   0010BE                     u4160:
  5414   0010BE  2831               	incf	___flmul@aexp^0,w,c
  5415   0010C0  A4D8               	btfss	status,2,c
  5416   0010C2  EF65  F008         	goto	u4171
  5417   0010C6  EF67  F008         	goto	u4170
  5418   0010CA                     u4171:
  5419   0010CA  EF6F  F008         	goto	l5093
  5420   0010CE                     u4170:
  5421   0010CE  0E00               	movlw	0
  5422   0010D0  6E24               	movwf	___flmul@a^0,c
  5423   0010D2  0E00               	movlw	0
  5424   0010D4  6E25               	movwf	(___flmul@a+1)^0,c
  5425   0010D6  0E00               	movlw	0
  5426   0010D8  6E26               	movwf	(___flmul@a+2)^0,c
  5427   0010DA  0E00               	movlw	0
  5428   0010DC  6E27               	movwf	(___flmul@a+3)^0,c
  5429   0010DE                     l5093:
  5430   0010DE  8E26               	bsf	(___flmul@a+2)^0,7,c
  5431   0010E0  EF7A  F008         	goto	l1707
  5432   0010E4                     l5095:
  5433   0010E4  0E00               	movlw	0
  5434   0010E6  6E24               	movwf	___flmul@a^0,c
  5435   0010E8  0E00               	movlw	0
  5436   0010EA  6E25               	movwf	(___flmul@a+1)^0,c
  5437   0010EC  0E00               	movlw	0
  5438   0010EE  6E26               	movwf	(___flmul@a+2)^0,c
  5439   0010F0  0E00               	movlw	0
  5440   0010F2  6E27               	movwf	(___flmul@a+3)^0,c
  5441   0010F4                     l1707:
  5442   0010F4  5031               	movf	___flmul@aexp^0,w,c
  5443   0010F6  B4D8               	btfsc	status,2,c
  5444   0010F8  EF80  F008         	goto	u4181
  5445   0010FC  EF82  F008         	goto	u4180
  5446   001100                     u4181:
  5447   001100  EF8A  F008         	goto	l5099
  5448   001104                     u4180:
  5449   001104  5032               	movf	___flmul@bexp^0,w,c
  5450   001106  A4D8               	btfss	status,2,c
  5451   001108  EF88  F008         	goto	u4191
  5452   00110C  EF8A  F008         	goto	u4190
  5453   001110                     u4191:
  5454   001110  EF94  F008         	goto	l5103
  5455   001114                     u4190:
  5456   001114                     l5099:
  5457   001114  0E00               	movlw	0
  5458   001116  6E20               	movwf	?___flmul^0,c
  5459   001118  0E00               	movlw	0
  5460   00111A  6E21               	movwf	(?___flmul+1)^0,c
  5461   00111C  0E00               	movlw	0
  5462   00111E  6E22               	movwf	(?___flmul+2)^0,c
  5463   001120  0E00               	movlw	0
  5464   001122  6E23               	movwf	(?___flmul+3)^0,c
  5465   001124  EF2C  F00A         	goto	l1711
  5466   001128                     l5103:
  5467   001128  5026               	movf	(___flmul@a+2)^0,w,c
  5468   00112A  0220               	mulwf	___flmul@b^0,c
  5469   00112C  CFF3 F037          	movff	prodl,___flmul@temp
  5470   001130  CFF4 F038          	movff	prodh,___flmul@temp+1
  5471   001134  5037               	movf	___flmul@temp^0,w,c
  5472   001136  6E2D               	movwf	___flmul@grs^0,c
  5473   001138  6A2E               	clrf	(___flmul@grs+1)^0,c
  5474   00113A  6A2F               	clrf	(___flmul@grs+2)^0,c
  5475   00113C  6A30               	clrf	(___flmul@grs+3)^0,c
  5476   00113E  5038               	movf	(___flmul@temp+1)^0,w,c
  5477   001140  6E33               	movwf	___flmul@prod^0,c
  5478   001142  6A34               	clrf	(___flmul@prod+1)^0,c
  5479   001144  6A35               	clrf	(___flmul@prod+2)^0,c
  5480   001146  6A36               	clrf	(___flmul@prod+3)^0,c
  5481   001148  5025               	movf	(___flmul@a+1)^0,w,c
  5482   00114A  0221               	mulwf	(___flmul@b+1)^0,c
  5483   00114C  CFF3 F037          	movff	prodl,___flmul@temp
  5484   001150  CFF4 F038          	movff	prodh,___flmul@temp+1
  5485   001154  5037               	movf	___flmul@temp^0,w,c
  5486   001156  262D               	addwf	___flmul@grs^0,f,c
  5487   001158  0E00               	movlw	0
  5488   00115A  222E               	addwfc	(___flmul@grs+1)^0,f,c
  5489   00115C  222F               	addwfc	(___flmul@grs+2)^0,f,c
  5490   00115E  2230               	addwfc	(___flmul@grs+3)^0,f,c
  5491   001160  5038               	movf	(___flmul@temp+1)^0,w,c
  5492   001162  2633               	addwf	___flmul@prod^0,f,c
  5493   001164  0E00               	movlw	0
  5494   001166  2234               	addwfc	(___flmul@prod+1)^0,f,c
  5495   001168  2235               	addwfc	(___flmul@prod+2)^0,f,c
  5496   00116A  2236               	addwfc	(___flmul@prod+3)^0,f,c
  5497   00116C  5024               	movf	___flmul@a^0,w,c
  5498   00116E  0222               	mulwf	(___flmul@b+2)^0,c
  5499   001170  CFF3 F037          	movff	prodl,___flmul@temp
  5500   001174  CFF4 F038          	movff	prodh,___flmul@temp+1
  5501   001178  5037               	movf	___flmul@temp^0,w,c
  5502   00117A  262D               	addwf	___flmul@grs^0,f,c
  5503   00117C  0E00               	movlw	0
  5504   00117E  222E               	addwfc	(___flmul@grs+1)^0,f,c
  5505   001180  222F               	addwfc	(___flmul@grs+2)^0,f,c
  5506   001182  2230               	addwfc	(___flmul@grs+3)^0,f,c
  5507   001184  5038               	movf	(___flmul@temp+1)^0,w,c
  5508   001186  2633               	addwf	___flmul@prod^0,f,c
  5509   001188  0E00               	movlw	0
  5510   00118A  2234               	addwfc	(___flmul@prod+1)^0,f,c
  5511   00118C  2235               	addwfc	(___flmul@prod+2)^0,f,c
  5512   00118E  2236               	addwfc	(___flmul@prod+3)^0,f,c
  5513   001190  C02F  F030         	movff	___flmul@grs+2,___flmul@grs+3
  5514   001194  C02E  F02F         	movff	___flmul@grs+1,___flmul@grs+2
  5515   001198  C02D  F02E         	movff	___flmul@grs,___flmul@grs+1
  5516   00119C  6A2D               	clrf	___flmul@grs^0,c
  5517   00119E  5024               	movf	___flmul@a^0,w,c
  5518   0011A0  0221               	mulwf	(___flmul@b+1)^0,c
  5519   0011A2  CFF3 F037          	movff	prodl,___flmul@temp
  5520   0011A6  CFF4 F038          	movff	prodh,___flmul@temp+1
  5521   0011AA  5037               	movf	___flmul@temp^0,w,c
  5522   0011AC  262D               	addwf	___flmul@grs^0,f,c
  5523   0011AE  5038               	movf	(___flmul@temp+1)^0,w,c
  5524   0011B0  222E               	addwfc	(___flmul@grs+1)^0,f,c
  5525   0011B2  0E00               	movlw	0
  5526   0011B4  222F               	addwfc	(___flmul@grs+2)^0,f,c
  5527   0011B6  0E00               	movlw	0
  5528   0011B8  2230               	addwfc	(___flmul@grs+3)^0,f,c
  5529   0011BA  5025               	movf	(___flmul@a+1)^0,w,c
  5530   0011BC  0220               	mulwf	___flmul@b^0,c
  5531   0011BE  CFF3 F037          	movff	prodl,___flmul@temp
  5532   0011C2  CFF4 F038          	movff	prodh,___flmul@temp+1
  5533   0011C6  5037               	movf	___flmul@temp^0,w,c
  5534   0011C8  262D               	addwf	___flmul@grs^0,f,c
  5535   0011CA  5038               	movf	(___flmul@temp+1)^0,w,c
  5536   0011CC  222E               	addwfc	(___flmul@grs+1)^0,f,c
  5537   0011CE  0E00               	movlw	0
  5538   0011D0  222F               	addwfc	(___flmul@grs+2)^0,f,c
  5539   0011D2  0E00               	movlw	0
  5540   0011D4  2230               	addwfc	(___flmul@grs+3)^0,f,c
  5541   0011D6  C02F  F030         	movff	___flmul@grs+2,___flmul@grs+3
  5542   0011DA  C02E  F02F         	movff	___flmul@grs+1,___flmul@grs+2
  5543   0011DE  C02D  F02E         	movff	___flmul@grs,___flmul@grs+1
  5544   0011E2  6A2D               	clrf	___flmul@grs^0,c
  5545   0011E4  5024               	movf	___flmul@a^0,w,c
  5546   0011E6  0220               	mulwf	___flmul@b^0,c
  5547   0011E8  CFF3 F037          	movff	prodl,___flmul@temp
  5548   0011EC  CFF4 F038          	movff	prodh,___flmul@temp+1
  5549   0011F0  5037               	movf	___flmul@temp^0,w,c
  5550   0011F2  262D               	addwf	___flmul@grs^0,f,c
  5551   0011F4  5038               	movf	(___flmul@temp+1)^0,w,c
  5552   0011F6  222E               	addwfc	(___flmul@grs+1)^0,f,c
  5553   0011F8  0E00               	movlw	0
  5554   0011FA  222F               	addwfc	(___flmul@grs+2)^0,f,c
  5555   0011FC  0E00               	movlw	0
  5556   0011FE  2230               	addwfc	(___flmul@grs+3)^0,f,c
  5557   001200  5026               	movf	(___flmul@a+2)^0,w,c
  5558   001202  0221               	mulwf	(___flmul@b+1)^0,c
  5559   001204  CFF3 F037          	movff	prodl,___flmul@temp
  5560   001208  CFF4 F038          	movff	prodh,___flmul@temp+1
  5561   00120C  5037               	movf	___flmul@temp^0,w,c
  5562   00120E  2633               	addwf	___flmul@prod^0,f,c
  5563   001210  5038               	movf	(___flmul@temp+1)^0,w,c
  5564   001212  2234               	addwfc	(___flmul@prod+1)^0,f,c
  5565   001214  0E00               	movlw	0
  5566   001216  2235               	addwfc	(___flmul@prod+2)^0,f,c
  5567   001218  0E00               	movlw	0
  5568   00121A  2236               	addwfc	(___flmul@prod+3)^0,f,c
  5569   00121C  5025               	movf	(___flmul@a+1)^0,w,c
  5570   00121E  0222               	mulwf	(___flmul@b+2)^0,c
  5571   001220  CFF3 F037          	movff	prodl,___flmul@temp
  5572   001224  CFF4 F038          	movff	prodh,___flmul@temp+1
  5573   001228  5037               	movf	___flmul@temp^0,w,c
  5574   00122A  2633               	addwf	___flmul@prod^0,f,c
  5575   00122C  5038               	movf	(___flmul@temp+1)^0,w,c
  5576   00122E  2234               	addwfc	(___flmul@prod+1)^0,f,c
  5577   001230  0E00               	movlw	0
  5578   001232  2235               	addwfc	(___flmul@prod+2)^0,f,c
  5579   001234  0E00               	movlw	0
  5580   001236  2236               	addwfc	(___flmul@prod+3)^0,f,c
  5581   001238  5026               	movf	(___flmul@a+2)^0,w,c
  5582   00123A  0222               	mulwf	(___flmul@b+2)^0,c
  5583   00123C  CFF3 F037          	movff	prodl,___flmul@temp
  5584   001240  CFF4 F038          	movff	prodh,___flmul@temp+1
  5585   001244  5037               	movf	___flmul@temp^0,w,c
  5586   001246  6E28               	movwf	??___flmul^0,c
  5587   001248  5038               	movf	(___flmul@temp+1)^0,w,c
  5588   00124A  6E29               	movwf	(??___flmul+1)^0,c
  5589   00124C  6A2A               	clrf	(??___flmul+2)^0,c
  5590   00124E  6A2B               	clrf	(??___flmul+3)^0,c
  5591   001250  C02A  F02B         	movff	??___flmul+2,??___flmul+3
  5592   001254  C029  F02A         	movff	??___flmul+1,??___flmul+2
  5593   001258  C028  F029         	movff	??___flmul,??___flmul+1
  5594   00125C  6A28               	clrf	??___flmul^0,c
  5595   00125E  5028               	movf	??___flmul^0,w,c
  5596   001260  2633               	addwf	___flmul@prod^0,f,c
  5597   001262  5029               	movf	(??___flmul+1)^0,w,c
  5598   001264  2234               	addwfc	(___flmul@prod+1)^0,f,c
  5599   001266  502A               	movf	(??___flmul+2)^0,w,c
  5600   001268  2235               	addwfc	(___flmul@prod+2)^0,f,c
  5601   00126A  502B               	movf	(??___flmul+3)^0,w,c
  5602   00126C  2236               	addwfc	(___flmul@prod+3)^0,f,c
  5603   00126E  C02D  F028         	movff	___flmul@grs,??___flmul
  5604   001272  C02E  F029         	movff	___flmul@grs+1,??___flmul+1
  5605   001276  C02F  F02A         	movff	___flmul@grs+2,??___flmul+2
  5606   00127A  C030  F02B         	movff	___flmul@grs+3,??___flmul+3
  5607   00127E  0E19               	movlw	25
  5608   001280  EF47  F009         	goto	u4200
  5609   001284                     u4205:
  5610   001284  90D8               	bcf	status,0,c
  5611   001286  322B               	rrcf	(??___flmul+3)^0,f,c
  5612   001288  322A               	rrcf	(??___flmul+2)^0,f,c
  5613   00128A  3229               	rrcf	(??___flmul+1)^0,f,c
  5614   00128C  3228               	rrcf	??___flmul^0,f,c
  5615   00128E                     u4200:
  5616   00128E  2EE8               	decfsz	wreg,f,c
  5617   001290  EF42  F009         	goto	u4205
  5618   001294  5028               	movf	??___flmul^0,w,c
  5619   001296  2633               	addwf	___flmul@prod^0,f,c
  5620   001298  5029               	movf	(??___flmul+1)^0,w,c
  5621   00129A  2234               	addwfc	(___flmul@prod+1)^0,f,c
  5622   00129C  502A               	movf	(??___flmul+2)^0,w,c
  5623   00129E  2235               	addwfc	(___flmul@prod+2)^0,f,c
  5624   0012A0  502B               	movf	(??___flmul+3)^0,w,c
  5625   0012A2  2236               	addwfc	(___flmul@prod+3)^0,f,c
  5626   0012A4  C02F  F030         	movff	___flmul@grs+2,___flmul@grs+3
  5627   0012A8  C02E  F02F         	movff	___flmul@grs+1,___flmul@grs+2
  5628   0012AC  C02D  F02E         	movff	___flmul@grs,___flmul@grs+1
  5629   0012B0  6A2D               	clrf	___flmul@grs^0,c
  5630   0012B2  5031               	movf	___flmul@aexp^0,w,c
  5631   0012B4  C032  F028         	movff	___flmul@bexp,??___flmul
  5632   0012B8  6A29               	clrf	(??___flmul+1)^0,c
  5633   0012BA  2628               	addwf	??___flmul^0,f,c
  5634   0012BC  0E00               	movlw	0
  5635   0012BE  2229               	addwfc	(??___flmul+1)^0,f,c
  5636   0012C0  0E82               	movlw	130
  5637   0012C2  2428               	addwf	??___flmul^0,w,c
  5638   0012C4  6E37               	movwf	___flmul@temp^0,c
  5639   0012C6  0EFF               	movlw	255
  5640   0012C8  2029               	addwfc	(??___flmul+1)^0,w,c
  5641   0012CA  6E38               	movwf	(___flmul@temp+1)^0,c
  5642   0012CC  EF7D  F009         	goto	l5151
  5643   0012D0                     l5145:
  5644   0012D0  90D8               	bcf	status,0,c
  5645   0012D2  3633               	rlcf	___flmul@prod^0,f,c
  5646   0012D4  3634               	rlcf	(___flmul@prod+1)^0,f,c
  5647   0012D6  3635               	rlcf	(___flmul@prod+2)^0,f,c
  5648   0012D8  3636               	rlcf	(___flmul@prod+3)^0,f,c
  5649   0012DA  AE30               	btfss	(___flmul@grs+3)^0,7,c
  5650   0012DC  EF72  F009         	goto	u4211
  5651   0012E0  EF74  F009         	goto	u4210
  5652   0012E4                     u4211:
  5653   0012E4  EF75  F009         	goto	l1714
  5654   0012E8                     u4210:
  5655   0012E8  8033               	bsf	___flmul@prod^0,0,c
  5656   0012EA                     l1714:
  5657   0012EA  90D8               	bcf	status,0,c
  5658   0012EC  362D               	rlcf	___flmul@grs^0,f,c
  5659   0012EE  362E               	rlcf	(___flmul@grs+1)^0,f,c
  5660   0012F0  362F               	rlcf	(___flmul@grs+2)^0,f,c
  5661   0012F2  3630               	rlcf	(___flmul@grs+3)^0,f,c
  5662   0012F4  0637               	decf	___flmul@temp^0,f,c
  5663   0012F6  A0D8               	btfss	status,0,c
  5664   0012F8  0638               	decf	(___flmul@temp+1)^0,f,c
  5665   0012FA                     l5151:
  5666   0012FA  AE35               	btfss	(___flmul@prod+2)^0,7,c
  5667   0012FC  EF82  F009         	goto	u4221
  5668   001300  EF84  F009         	goto	u4220
  5669   001304                     u4221:
  5670   001304  EF68  F009         	goto	l5145
  5671   001308                     u4220:
  5672   001308  0E00               	movlw	0
  5673   00130A  6E31               	movwf	___flmul@aexp^0,c
  5674   00130C  AE30               	btfss	(___flmul@grs+3)^0,7,c
  5675   00130E  EF8B  F009         	goto	u4231
  5676   001312  EF8D  F009         	goto	u4230
  5677   001316                     u4231:
  5678   001316  EFB1  F009         	goto	l1716
  5679   00131A                     u4230:
  5680   00131A  0EFF               	movlw	255
  5681   00131C  142D               	andwf	___flmul@grs^0,w,c
  5682   00131E  6E28               	movwf	??___flmul^0,c
  5683   001320  0EFF               	movlw	255
  5684   001322  142E               	andwf	(___flmul@grs+1)^0,w,c
  5685   001324  6E29               	movwf	(??___flmul+1)^0,c
  5686   001326  0EFF               	movlw	255
  5687   001328  142F               	andwf	(___flmul@grs+2)^0,w,c
  5688   00132A  6E2A               	movwf	(??___flmul+2)^0,c
  5689   00132C  0E7F               	movlw	127
  5690   00132E  1430               	andwf	(___flmul@grs+3)^0,w,c
  5691   001330  6E2B               	movwf	(??___flmul+3)^0,c
  5692   001332  5028               	movf	??___flmul^0,w,c
  5693   001334  1029               	iorwf	(??___flmul+1)^0,w,c
  5694   001336  102A               	iorwf	(??___flmul+2)^0,w,c
  5695   001338  102B               	iorwf	(??___flmul+3)^0,w,c
  5696   00133A  B4D8               	btfsc	status,2,c
  5697   00133C  EFA2  F009         	goto	u4241
  5698   001340  EFA4  F009         	goto	u4240
  5699   001344                     u4241:
  5700   001344  EFA8  F009         	goto	l1717
  5701   001348                     u4240:
  5702   001348                     l5159:
  5703   001348  0E01               	movlw	1
  5704   00134A  6E31               	movwf	___flmul@aexp^0,c
  5705   00134C  EFB1  F009         	goto	l1716
  5706   001350                     l1717:
  5707   001350  A033               	btfss	___flmul@prod^0,0,c
  5708   001352  EFAD  F009         	goto	u4251
  5709   001356  EFAF  F009         	goto	u4250
  5710   00135A                     u4251:
  5711   00135A  EFB1  F009         	goto	l1716
  5712   00135E                     u4250:
  5713   00135E  EFA4  F009         	goto	l5159
  5714   001362                     l1716:
  5715   001362  5031               	movf	___flmul@aexp^0,w,c
  5716   001364  B4D8               	btfsc	status,2,c
  5717   001366  EFB7  F009         	goto	u4261
  5718   00136A  EFB9  F009         	goto	u4260
  5719   00136E                     u4261:
  5720   00136E  EFDD  F009         	goto	l5171
  5721   001372                     u4260:
  5722   001372  0E01               	movlw	1
  5723   001374  2633               	addwf	___flmul@prod^0,f,c
  5724   001376  0E00               	movlw	0
  5725   001378  2234               	addwfc	(___flmul@prod+1)^0,f,c
  5726   00137A  2235               	addwfc	(___flmul@prod+2)^0,f,c
  5727   00137C  2236               	addwfc	(___flmul@prod+3)^0,f,c
  5728   00137E  A036               	btfss	(___flmul@prod+3)^0,0,c
  5729   001380  EFC4  F009         	goto	u4271
  5730   001384  EFC6  F009         	goto	u4270
  5731   001388                     u4271:
  5732   001388  EFDD  F009         	goto	l5171
  5733   00138C                     u4270:
  5734   00138C  C033  F028         	movff	___flmul@prod,??___flmul
  5735   001390  C034  F029         	movff	___flmul@prod+1,??___flmul+1
  5736   001394  C035  F02A         	movff	___flmul@prod+2,??___flmul+2
  5737   001398  C036  F02B         	movff	___flmul@prod+3,??___flmul+3
  5738   00139C  342B               	rlcf	(??___flmul+3)^0,w,c
  5739   00139E  322B               	rrcf	(??___flmul+3)^0,f,c
  5740   0013A0  322A               	rrcf	(??___flmul+2)^0,f,c
  5741   0013A2  3229               	rrcf	(??___flmul+1)^0,f,c
  5742   0013A4  3228               	rrcf	??___flmul^0,f,c
  5743   0013A6  C028  F033         	movff	??___flmul,___flmul@prod
  5744   0013AA  C029  F034         	movff	??___flmul+1,___flmul@prod+1
  5745   0013AE  C02A  F035         	movff	??___flmul+2,___flmul@prod+2
  5746   0013B2  C02B  F036         	movff	??___flmul+3,___flmul@prod+3
  5747   0013B6  4A37               	infsnz	___flmul@temp^0,f,c
  5748   0013B8  2A38               	incf	(___flmul@temp+1)^0,f,c
  5749   0013BA                     l5171:
  5750   0013BA  BE38               	btfsc	(___flmul@temp+1)^0,7,c
  5751   0013BC  EFE8  F009         	goto	u4281
  5752   0013C0  5038               	movf	(___flmul@temp+1)^0,w,c
  5753   0013C2  E108               	bnz	u4280
  5754   0013C4  2837               	incf	___flmul@temp^0,w,c
  5755   0013C6  A0D8               	btfss	status,0,c
  5756   0013C8  EFE8  F009         	goto	u4281
  5757   0013CC  EFEA  F009         	goto	u4280
  5758   0013D0                     u4281:
  5759   0013D0  EFF4  F009         	goto	l5175
  5760   0013D4                     u4280:
  5761   0013D4  0E00               	movlw	0
  5762   0013D6  6E33               	movwf	___flmul@prod^0,c
  5763   0013D8  0E00               	movlw	0
  5764   0013DA  6E34               	movwf	(___flmul@prod+1)^0,c
  5765   0013DC  0E80               	movlw	128
  5766   0013DE  6E35               	movwf	(___flmul@prod+2)^0,c
  5767   0013E0  0E7F               	movlw	127
  5768   0013E2  6E36               	movwf	(___flmul@prod+3)^0,c
  5769   0013E4  EF22  F00A         	goto	l5187
  5770   0013E8                     l5175:
  5771   0013E8  BE38               	btfsc	(___flmul@temp+1)^0,7,c
  5772   0013EA  EF01  F00A         	goto	u4290
  5773   0013EE  5038               	movf	(___flmul@temp+1)^0,w,c
  5774   0013F0  E106               	bnz	u4291
  5775   0013F2  0437               	decf	___flmul@temp^0,w,c
  5776   0013F4  B0D8               	btfsc	status,0,c
  5777   0013F6  EFFF  F009         	goto	u4291
  5778   0013FA  EF01  F00A         	goto	u4290
  5779   0013FE                     u4291:
  5780   0013FE  EF0D  F00A         	goto	l1724
  5781   001402                     u4290:
  5782   001402  0E00               	movlw	0
  5783   001404  6E33               	movwf	___flmul@prod^0,c
  5784   001406  0E00               	movlw	0
  5785   001408  6E34               	movwf	(___flmul@prod+1)^0,c
  5786   00140A  0E00               	movlw	0
  5787   00140C  6E35               	movwf	(___flmul@prod+2)^0,c
  5788   00140E  0E00               	movlw	0
  5789   001410  6E36               	movwf	(___flmul@prod+3)^0,c
  5790   001412  0E00               	movlw	0
  5791   001414  6E2C               	movwf	___flmul@sign^0,c
  5792   001416  EF22  F00A         	goto	l5187
  5793   00141A                     l1724:
  5794   00141A  C037  F032         	movff	___flmul@temp,___flmul@bexp
  5795   00141E  0EFF               	movlw	255
  5796   001420  1633               	andwf	___flmul@prod^0,f,c
  5797   001422  0EFF               	movlw	255
  5798   001424  1634               	andwf	(___flmul@prod+1)^0,f,c
  5799   001426  0E7F               	movlw	127
  5800   001428  1635               	andwf	(___flmul@prod+2)^0,f,c
  5801   00142A  0E00               	movlw	0
  5802   00142C  1636               	andwf	(___flmul@prod+3)^0,f,c
  5803   00142E  A032               	btfss	___flmul@bexp^0,0,c
  5804   001430  EF1C  F00A         	goto	u4301
  5805   001434  EF1E  F00A         	goto	u4300
  5806   001438                     u4301:
  5807   001438  EF1F  F00A         	goto	l5185
  5808   00143C                     u4300:
  5809   00143C  8E35               	bsf	(___flmul@prod+2)^0,7,c
  5810   00143E                     l5185:
  5811   00143E  90D8               	bcf	status,0,c
  5812   001440  3032               	rrcf	___flmul@bexp^0,w,c
  5813   001442  6E36               	movwf	(___flmul@prod+3)^0,c
  5814   001444                     l5187:
  5815   001444  502C               	movf	___flmul@sign^0,w,c
  5816   001446  1236               	iorwf	(___flmul@prod+3)^0,f,c
  5817   001448  C033  F020         	movff	___flmul@prod,?___flmul
  5818   00144C  C034  F021         	movff	___flmul@prod+1,?___flmul+1
  5819   001450  C035  F022         	movff	___flmul@prod+2,?___flmul+2
  5820   001454  C036  F023         	movff	___flmul@prod+3,?___flmul+3
  5821   001458                     l1711:
  5822   001458  0012               	return		;funcret
  5823   00145A                     __end_of___flmul:
  5824                           	callstack 0
  5825                           
  5826 ;; *************** function _ADC_StartConversion_Interrupt *****************
  5827 ;; Defined at:
  5828 ;;		line 168 in file "MCAL_Layer/ADC/ADC.c"
  5829 ;; Parameters:    Size  Location     Type
  5830 ;;  Adc_            2   24[COMRAM] PTR struct .
  5831 ;;		 -> ADC_1(7), 
  5832 ;;  channel         1   26[COMRAM] enum E3032
  5833 ;; Auto vars:     Size  Location     Type
  5834 ;;  ret             1   27[COMRAM] unsigned char 
  5835 ;; Return value:  Size  Location     Type
  5836 ;;                  1    wreg      unsigned char 
  5837 ;; Registers used:
  5838 ;;		wreg, status,2, status,0, cstack
  5839 ;; Tracked objects:
  5840 ;;		On entry : 0/0
  5841 ;;		On exit  : 0/0
  5842 ;;		Unchanged: 0/0
  5843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5844 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5845 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5847 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5848 ;;Total ram usage:        4 bytes
  5849 ;; Hardware stack levels used: 1
  5850 ;; Hardware stack levels required when called: 8
  5851 ;; This function calls:
  5852 ;;		_ADC_Select_Channel
  5853 ;;		_ADC_Start_Conversion_Func
  5854 ;; This function is called by:
  5855 ;;		_main
  5856 ;; This function uses a non-reentrant model
  5857 ;;
  5858                           
  5859                           	psect	text32
  5860   00318A                     __ptext32:
  5861                           	callstack 0
  5862   00318A                     _ADC_StartConversion_Interrupt:
  5863                           	callstack 22
  5864   00318A                     
  5865                           ;MCAL_Layer/ADC/ADC.c: 172:     if(Adc_ == ((void*)0)){
  5866   00318A  5019               	movf	ADC_StartConversion_Interrupt@Adc_^0,w,c
  5867   00318C  101A               	iorwf	(ADC_StartConversion_Interrupt@Adc_+1)^0,w,c
  5868   00318E  A4D8               	btfss	status,2,c
  5869   003190  EFCC  F018         	goto	u4111
  5870   003194  EFCE  F018         	goto	u4110
  5871   003198                     u4111:
  5872   003198  EFD2  F018         	goto	l5057
  5873   00319C                     u4110:
  5874   00319C                     
  5875                           ;MCAL_Layer/ADC/ADC.c: 173:         ret = (Std_ReturnType)0x01;
  5876   00319C  0E01               	movlw	1
  5877   00319E  6E1C               	movwf	ADC_StartConversion_Interrupt@ret^0,c
  5878                           
  5879                           ;MCAL_Layer/ADC/ADC.c: 174:     }
  5880   0031A0  EFE2  F018         	goto	l5059
  5881   0031A4                     l5057:
  5882                           
  5883                           ;MCAL_Layer/ADC/ADC.c: 177:         ret = ADC_Select_Channel(Adc_ , channel);
  5884   0031A4  C019  F015         	movff	ADC_StartConversion_Interrupt@Adc_,ADC_Select_Channel@Adc_
  5885   0031A8  C01A  F016         	movff	ADC_StartConversion_Interrupt@Adc_+1,ADC_Select_Channel@Adc_+1
  5886   0031AC  C01B  F017         	movff	ADC_StartConversion_Interrupt@channel,ADC_Select_Channel@channel
  5887   0031B0  EC8C  F019         	call	_ADC_Select_Channel	;wreg free
  5888   0031B4  6E1C               	movwf	ADC_StartConversion_Interrupt@ret^0,c
  5889                           
  5890                           ;MCAL_Layer/ADC/ADC.c: 179:         ret = ADC_Start_Conversion_Func(Adc_);
  5891   0031B6  C019  F012         	movff	ADC_StartConversion_Interrupt@Adc_,ADC_Start_Conversion_Func@Adc_
  5892   0031BA  C01A  F013         	movff	ADC_StartConversion_Interrupt@Adc_+1,ADC_Start_Conversion_Func@Adc_+1
  5893   0031BE  ECBD  F019         	call	_ADC_Start_Conversion_Func	;wreg free
  5894   0031C2  6E1C               	movwf	ADC_StartConversion_Interrupt@ret^0,c
  5895   0031C4                     l5059:
  5896                           
  5897                           ;MCAL_Layer/ADC/ADC.c: 181:     return ret;
  5898   0031C4  501C               	movf	ADC_StartConversion_Interrupt@ret^0,w,c
  5899   0031C6  0012               	return		;funcret
  5900   0031C8                     __end_of_ADC_StartConversion_Interrupt:
  5901                           	callstack 0
  5902                           
  5903 ;; *************** function _ADC_Start_Conversion_Func *****************
  5904 ;; Defined at:
  5905 ;;		line 83 in file "MCAL_Layer/ADC/ADC.c"
  5906 ;; Parameters:    Size  Location     Type
  5907 ;;  Adc_            2   17[COMRAM] PTR struct .
  5908 ;;		 -> ADC_1(7), 
  5909 ;; Auto vars:     Size  Location     Type
  5910 ;;  ret             1    0        unsigned char 
  5911 ;; Return value:  Size  Location     Type
  5912 ;;                  1    wreg      unsigned char 
  5913 ;; Registers used:
  5914 ;;		wreg, status,2, status,0
  5915 ;; Tracked objects:
  5916 ;;		On entry : 0/0
  5917 ;;		On exit  : 0/0
  5918 ;;		Unchanged: 0/0
  5919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5920 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5923 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5924 ;;Total ram usage:        2 bytes
  5925 ;; Hardware stack levels used: 1
  5926 ;; Hardware stack levels required when called: 6
  5927 ;; This function calls:
  5928 ;;		Nothing
  5929 ;; This function is called by:
  5930 ;;		_ADC_StartConversion_Interrupt
  5931 ;;		_ADC_GetConversion_Blocking
  5932 ;; This function uses a non-reentrant model
  5933 ;;
  5934                           
  5935                           	psect	text33
  5936   00337A                     __ptext33:
  5937                           	callstack 0
  5938   00337A                     _ADC_Start_Conversion_Func:
  5939                           	callstack 23
  5940   00337A                     
  5941                           ;MCAL_Layer/ADC/ADC.c: 87:     if(Adc_ == ((void*)0)){
  5942   00337A  5012               	movf	ADC_Start_Conversion_Func@Adc_^0,w,c
  5943   00337C  1013               	iorwf	(ADC_Start_Conversion_Func@Adc_+1)^0,w,c
  5944   00337E  A4D8               	btfss	status,2,c
  5945   003380  EFC4  F019         	goto	u3861
  5946   003384  EFC6  F019         	goto	u3860
  5947   003388                     u3861:
  5948   003388  EFC8  F019         	goto	l1020
  5949   00338C                     u3860:
  5950   00338C                     
  5951                           ;MCAL_Layer/ADC/ADC.c: 89:     }
  5952   00338C  EFC9  F019         	goto	l4725
  5953   003390                     l1020:
  5954                           
  5955                           ;MCAL_Layer/ADC/ADC.c: 91:         (ADCON0bits.GO_DONE = 1);
  5956   003390  82C2               	bsf	194,1,c	;volatile
  5957   003392                     l4725:
  5958                           
  5959                           ;MCAL_Layer/ADC/ADC.c: 93:     return ret;
  5960   003392  0E01               	movlw	1
  5961   003394  0012               	return		;funcret
  5962   003396                     __end_of_ADC_Start_Conversion_Func:
  5963                           	callstack 0
  5964                           
  5965 ;; *************** function _ADC_Select_Channel *****************
  5966 ;; Defined at:
  5967 ;;		line 96 in file "MCAL_Layer/ADC/ADC.c"
  5968 ;; Parameters:    Size  Location     Type
  5969 ;;  Adc_            2   20[COMRAM] PTR struct .
  5970 ;;		 -> ADC_1(7), 
  5971 ;;  channel         1   22[COMRAM] enum E3032
  5972 ;; Auto vars:     Size  Location     Type
  5973 ;;  ret             1    0        unsigned char 
  5974 ;; Return value:  Size  Location     Type
  5975 ;;                  1    wreg      unsigned char 
  5976 ;; Registers used:
  5977 ;;		wreg, status,2, status,0, cstack
  5978 ;; Tracked objects:
  5979 ;;		On entry : 0/0
  5980 ;;		On exit  : 0/0
  5981 ;;		Unchanged: 0/0
  5982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5983 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5985 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5986 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5987 ;;Total ram usage:        4 bytes
  5988 ;; Hardware stack levels used: 1
  5989 ;; Hardware stack levels required when called: 7
  5990 ;; This function calls:
  5991 ;;		_Pins_Configration_Func
  5992 ;; This function is called by:
  5993 ;;		_ADC_StartConversion_Interrupt
  5994 ;;		_ADC_GetConversion_Blocking
  5995 ;; This function uses a non-reentrant model
  5996 ;;
  5997                           
  5998                           	psect	text34
  5999   003318                     __ptext34:
  6000                           	callstack 0
  6001   003318                     _ADC_Select_Channel:
  6002                           	callstack 22
  6003   003318                     
  6004                           ;MCAL_Layer/ADC/ADC.c: 100:     if(Adc_ == ((void*)0)){
  6005   003318  5015               	movf	ADC_Select_Channel@Adc_^0,w,c
  6006   00331A  1016               	iorwf	(ADC_Select_Channel@Adc_+1)^0,w,c
  6007   00331C  A4D8               	btfss	status,2,c
  6008   00331E  EF93  F019         	goto	u3871
  6009   003322  EF95  F019         	goto	u3870
  6010   003326                     u3871:
  6011   003326  EF97  F019         	goto	l4735
  6012   00332A                     u3870:
  6013   00332A                     
  6014                           ;MCAL_Layer/ADC/ADC.c: 102:     }
  6015   00332A  EFA3  F019         	goto	l4739
  6016   00332E                     l4735:
  6017                           
  6018                           ;MCAL_Layer/ADC/ADC.c: 104:         (ADCON0bits.CHS = channel);
  6019   00332E  C017  F018         	movff	ADC_Select_Channel@channel,??_ADC_Select_Channel
  6020   003332  4618               	rlncf	??_ADC_Select_Channel^0,f,c
  6021   003334  4618               	rlncf	??_ADC_Select_Channel^0,f,c
  6022   003336  50C2               	movf	194,w,c	;volatile
  6023   003338  1818               	xorwf	??_ADC_Select_Channel^0,w,c
  6024   00333A  0BC3               	andlw	-61
  6025   00333C  1818               	xorwf	??_ADC_Select_Channel^0,w,c
  6026   00333E  6EC2               	movwf	194,c	;volatile
  6027   003340                     
  6028                           ;MCAL_Layer/ADC/ADC.c: 105:         Pins_Configration_Func(channel);
  6029   003340  5017               	movf	ADC_Select_Channel@channel^0,w,c
  6030   003342  ECA2  F012         	call	_Pins_Configration_Func
  6031   003346                     l4739:
  6032                           
  6033                           ;MCAL_Layer/ADC/ADC.c: 108:     return ret;
  6034   003346  0E01               	movlw	1
  6035   003348  0012               	return		;funcret
  6036   00334A                     __end_of_ADC_Select_Channel:
  6037                           	callstack 0
  6038                           
  6039 ;; *************** function _ADC_Initialize *****************
  6040 ;; Defined at:
  6041 ;;		line 15 in file "MCAL_Layer/ADC/ADC.c"
  6042 ;; Parameters:    Size  Location     Type
  6043 ;;  Adc_            2   20[COMRAM] PTR struct .
  6044 ;;		 -> ADC_1(7), 
  6045 ;; Auto vars:     Size  Location     Type
  6046 ;;  ret             1    0        unsigned char 
  6047 ;; Return value:  Size  Location     Type
  6048 ;;                  1    wreg      unsigned char 
  6049 ;; Registers used:
  6050 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6051 ;; Tracked objects:
  6052 ;;		On entry : 0/0
  6053 ;;		On exit  : 0/0
  6054 ;;		Unchanged: 0/0
  6055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6056 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6058 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6059 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6060 ;;Total ram usage:        3 bytes
  6061 ;; Hardware stack levels used: 1
  6062 ;; Hardware stack levels required when called: 7
  6063 ;; This function calls:
  6064 ;;		_Interrupt_Init
  6065 ;;		_Pins_Configration_Func
  6066 ;; This function is called by:
  6067 ;;		_main
  6068 ;; This function uses a non-reentrant model
  6069 ;;
  6070                           
  6071                           	psect	text35
  6072   002320                     __ptext35:
  6073                           	callstack 0
  6074   002320                     _ADC_Initialize:
  6075                           	callstack 23
  6076   002320                     
  6077                           ;MCAL_Layer/ADC/ADC.c: 19:     if(Adc_ == ((void*)0)){
  6078   002320  5015               	movf	ADC_Initialize@Adc_^0,w,c
  6079   002322  1016               	iorwf	(ADC_Initialize@Adc_+1)^0,w,c
  6080   002324  A4D8               	btfss	status,2,c
  6081   002326  EF97  F011         	goto	u4061
  6082   00232A  EF99  F011         	goto	u4060
  6083   00232E                     u4061:
  6084   00232E  EF9B  F011         	goto	l996
  6085   002332                     u4060:
  6086   002332                     
  6087                           ;MCAL_Layer/ADC/ADC.c: 21:     }
  6088   002332  EF1D  F012         	goto	l5047
  6089   002336                     l996:
  6090                           
  6091                           ;MCAL_Layer/ADC/ADC.c: 24:         (ADCON0bits.ADON = 0);
  6092   002336  90C2               	bcf	194,0,c	;volatile
  6093   002338                     
  6094                           ;MCAL_Layer/ADC/ADC.c: 26:         if(1 == Adc_->VOLTAGE_REFERENCE){
  6095   002338  EE20 F006          	lfsr	2,6
  6096   00233C  5015               	movf	ADC_Initialize@Adc_^0,w,c
  6097   00233E  26D9               	addwf	fsr2l,f,c
  6098   002340  5016               	movf	(ADC_Initialize@Adc_+1)^0,w,c
  6099   002342  22DA               	addwfc	fsr2h,f,c
  6100   002344  A0DF               	btfss	indf2,0,c
  6101   002346  EFA7  F011         	goto	u4071
  6102   00234A  EFA9  F011         	goto	u4070
  6103   00234E                     u4071:
  6104   00234E  EFAD  F011         	goto	l5029
  6105   002352                     u4070:
  6106   002352  8AC1               	bsf	193,5,c	;volatile
  6107   002354  88C1               	bsf	193,4,c	;volatile
  6108   002356  EFC0  F011         	goto	l5031
  6109   00235A                     l5029:
  6110   00235A  EE20 F006          	lfsr	2,6
  6111   00235E  5015               	movf	ADC_Initialize@Adc_^0,w,c
  6112   002360  26D9               	addwf	fsr2l,f,c
  6113   002362  5016               	movf	(ADC_Initialize@Adc_+1)^0,w,c
  6114   002364  22DA               	addwfc	fsr2h,f,c
  6115   002366  B0DF               	btfsc	indf2,0,c
  6116   002368  EFB8  F011         	goto	u4081
  6117   00236C  EFBA  F011         	goto	u4080
  6118   002370                     u4081:
  6119   002370  EFBE  F011         	goto	l1006
  6120   002374                     u4080:
  6121   002374  9AC1               	bcf	193,5,c	;volatile
  6122   002376  98C1               	bcf	193,4,c	;volatile
  6123   002378  EFC0  F011         	goto	l5031
  6124   00237C                     l1006:
  6125   00237C  9AC1               	bcf	193,5,c	;volatile
  6126   00237E  98C1               	bcf	193,4,c	;volatile
  6127   002380                     l5031:
  6128                           
  6129                           ;MCAL_Layer/ADC/ADC.c: 36:         if(0x01U == Adc_->RESULT_FORMAT){
  6130   002380  EE20 F006          	lfsr	2,6
  6131   002384  5015               	movf	ADC_Initialize@Adc_^0,w,c
  6132   002386  26D9               	addwf	fsr2l,f,c
  6133   002388  5016               	movf	(ADC_Initialize@Adc_+1)^0,w,c
  6134   00238A  22DA               	addwfc	fsr2h,f,c
  6135   00238C  A2DF               	btfss	indf2,1,c
  6136   00238E  EFCB  F011         	goto	u4091
  6137   002392  EFCD  F011         	goto	u4090
  6138   002396                     u4091:
  6139   002396  EFD0  F011         	goto	l5035
  6140   00239A                     u4090:
  6141   00239A                     
  6142                           ;MCAL_Layer/ADC/ADC.c: 37:             (ADCON2bits.ADFM = 1);
  6143   00239A  8EC0               	bsf	192,7,c	;volatile
  6144                           
  6145                           ;MCAL_Layer/ADC/ADC.c: 38:         }
  6146   00239C  EFE1  F011         	goto	l5039
  6147   0023A0                     l5035:
  6148   0023A0  EE20 F006          	lfsr	2,6
  6149   0023A4  5015               	movf	ADC_Initialize@Adc_^0,w,c
  6150   0023A6  26D9               	addwf	fsr2l,f,c
  6151   0023A8  5016               	movf	(ADC_Initialize@Adc_+1)^0,w,c
  6152   0023AA  22DA               	addwfc	fsr2h,f,c
  6153   0023AC  B2DF               	btfsc	indf2,1,c
  6154   0023AE  EFDB  F011         	goto	u4101
  6155   0023B2  EFDD  F011         	goto	u4100
  6156   0023B6                     u4101:
  6157   0023B6  EFE0  F011         	goto	l1010
  6158   0023BA                     u4100:
  6159   0023BA                     
  6160                           ;MCAL_Layer/ADC/ADC.c: 40:             (ADCON2bits.ADFM = 0);
  6161   0023BA  9EC0               	bcf	192,7,c	;volatile
  6162                           
  6163                           ;MCAL_Layer/ADC/ADC.c: 41:         }
  6164   0023BC  EFE1  F011         	goto	l5039
  6165   0023C0                     l1010:
  6166                           
  6167                           ;MCAL_Layer/ADC/ADC.c: 43:             (ADCON2bits.ADFM = 1);
  6168   0023C0  8EC0               	bsf	192,7,c	;volatile
  6169   0023C2                     l5039:
  6170                           
  6171                           ;MCAL_Layer/ADC/ADC.c: 46:         (ADCON2bits.ACQT = Adc_->ACQU_TIME);
  6172   0023C2  EE20 F004          	lfsr	2,4
  6173   0023C6  5015               	movf	ADC_Initialize@Adc_^0,w,c
  6174   0023C8  26D9               	addwf	fsr2l,f,c
  6175   0023CA  5016               	movf	(ADC_Initialize@Adc_+1)^0,w,c
  6176   0023CC  22DA               	addwfc	fsr2h,f,c
  6177   0023CE  50DF               	movf	indf2,w,c
  6178   0023D0  6E17               	movwf	??_ADC_Initialize^0,c
  6179   0023D2  4617               	rlncf	??_ADC_Initialize^0,f,c
  6180   0023D4  4617               	rlncf	??_ADC_Initialize^0,f,c
  6181   0023D6  4617               	rlncf	??_ADC_Initialize^0,f,c
  6182   0023D8  50C0               	movf	192,w,c	;volatile
  6183   0023DA  1817               	xorwf	??_ADC_Initialize^0,w,c
  6184   0023DC  0BC7               	andlw	-57
  6185   0023DE  1817               	xorwf	??_ADC_Initialize^0,w,c
  6186   0023E0  6EC0               	movwf	192,c	;volatile
  6187                           
  6188                           ;MCAL_Layer/ADC/ADC.c: 48:         (ADCON2bits.ADCS = Adc_->CLOCK_FREQ);
  6189   0023E2  EE20 F003          	lfsr	2,3
  6190   0023E6  5015               	movf	ADC_Initialize@Adc_^0,w,c
  6191   0023E8  26D9               	addwf	fsr2l,f,c
  6192   0023EA  5016               	movf	(ADC_Initialize@Adc_+1)^0,w,c
  6193   0023EC  22DA               	addwfc	fsr2h,f,c
  6194   0023EE  50DF               	movf	indf2,w,c
  6195   0023F0  6E17               	movwf	??_ADC_Initialize^0,c
  6196   0023F2  50C0               	movf	192,w,c	;volatile
  6197   0023F4  1817               	xorwf	??_ADC_Initialize^0,w,c
  6198   0023F6  0BF8               	andlw	-8
  6199   0023F8  1817               	xorwf	??_ADC_Initialize^0,w,c
  6200   0023FA  6EC0               	movwf	192,c	;volatile
  6201                           
  6202                           ;MCAL_Layer/ADC/ADC.c: 50:         (ADCON0bits.CHS = Adc_->DEFAULT_CHANNEL);
  6203   0023FC  EE20 F005          	lfsr	2,5
  6204   002400  5015               	movf	ADC_Initialize@Adc_^0,w,c
  6205   002402  26D9               	addwf	fsr2l,f,c
  6206   002404  5016               	movf	(ADC_Initialize@Adc_+1)^0,w,c
  6207   002406  22DA               	addwfc	fsr2h,f,c
  6208   002408  50DF               	movf	indf2,w,c
  6209   00240A  6E17               	movwf	??_ADC_Initialize^0,c
  6210   00240C  4617               	rlncf	??_ADC_Initialize^0,f,c
  6211   00240E  4617               	rlncf	??_ADC_Initialize^0,f,c
  6212   002410  50C2               	movf	194,w,c	;volatile
  6213   002412  1817               	xorwf	??_ADC_Initialize^0,w,c
  6214   002414  0BC3               	andlw	-61
  6215   002416  1817               	xorwf	??_ADC_Initialize^0,w,c
  6216   002418  6EC2               	movwf	194,c	;volatile
  6217   00241A                     
  6218                           ;MCAL_Layer/ADC/ADC.c: 52:         Pins_Configration_Func(Adc_->DEFAULT_CHANNEL);
  6219   00241A  EE20 F005          	lfsr	2,5
  6220   00241E  5015               	movf	ADC_Initialize@Adc_^0,w,c
  6221   002420  26D9               	addwf	fsr2l,f,c
  6222   002422  5016               	movf	(ADC_Initialize@Adc_+1)^0,w,c
  6223   002424  22DA               	addwfc	fsr2h,f,c
  6224   002426  50DF               	movf	indf2,w,c
  6225   002428  ECA2  F012         	call	_Pins_Configration_Func
  6226   00242C                     
  6227                           ;MCAL_Layer/ADC/ADC.c: 55:         Interrupt_Init(Adc_);
  6228   00242C  C015  F012         	movff	ADC_Initialize@Adc_,Interrupt_Init@Adc_
  6229   002430  C016  F013         	movff	ADC_Initialize@Adc_+1,Interrupt_Init@Adc_+1
  6230   002434  EC20  F017         	call	_Interrupt_Init	;wreg free
  6231   002438                     
  6232                           ;MCAL_Layer/ADC/ADC.c: 58:         (ADCON0bits.ADON = 1);
  6233   002438  80C2               	bsf	194,0,c	;volatile
  6234   00243A                     l5047:
  6235                           
  6236                           ;MCAL_Layer/ADC/ADC.c: 62:     return ret;
  6237   00243A  0E01               	movlw	1
  6238   00243C  0012               	return		;funcret
  6239   00243E                     __end_of_ADC_Initialize:
  6240                           	callstack 0
  6241                           
  6242 ;; *************** function _Pins_Configration_Func *****************
  6243 ;; Defined at:
  6244 ;;		line 184 in file "MCAL_Layer/ADC/ADC.c"
  6245 ;; Parameters:    Size  Location     Type
  6246 ;;  channel         1    wreg     enum E3032
  6247 ;; Auto vars:     Size  Location     Type
  6248 ;;  channel         1   19[COMRAM] enum E3032
  6249 ;; Return value:  Size  Location     Type
  6250 ;;                  1    wreg      void 
  6251 ;; Registers used:
  6252 ;;		wreg, status,2, status,0
  6253 ;; Tracked objects:
  6254 ;;		On entry : 0/0
  6255 ;;		On exit  : 0/0
  6256 ;;		Unchanged: 0/0
  6257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6259 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6260 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6261 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6262 ;;Total ram usage:        3 bytes
  6263 ;; Hardware stack levels used: 1
  6264 ;; Hardware stack levels required when called: 6
  6265 ;; This function calls:
  6266 ;;		Nothing
  6267 ;; This function is called by:
  6268 ;;		_ADC_Initialize
  6269 ;;		_ADC_Select_Channel
  6270 ;; This function uses a non-reentrant model
  6271 ;;
  6272                           
  6273                           	psect	text36
  6274   002544                     __ptext36:
  6275                           	callstack 0
  6276   002544                     _Pins_Configration_Func:
  6277                           	callstack 22
  6278                           
  6279                           ;incstack = 0
  6280                           ;Pins_Configration_Func@channel stored from wreg
  6281   002544  6E14               	movwf	Pins_Configration_Func@channel^0,c
  6282   002546                     
  6283                           ;MCAL_Layer/ADC/ADC.c: 185:     switch(channel){
  6284   002546  EFCC  F012         	goto	l4553
  6285   00254A                     l4527:
  6286   00254A  8092               	bsf	146,0,c	;volatile
  6287   00254C  EF0D  F013         	goto	l1079
  6288   002550                     l4529:
  6289   002550  8292               	bsf	146,1,c	;volatile
  6290   002552  EF0D  F013         	goto	l1079
  6291   002556                     l4531:
  6292   002556  8492               	bsf	146,2,c	;volatile
  6293   002558  EF0D  F013         	goto	l1079
  6294   00255C                     l4533:
  6295   00255C  8692               	bsf	146,3,c	;volatile
  6296   00255E  EF0D  F013         	goto	l1079
  6297   002562                     l4535:
  6298   002562  8A92               	bsf	146,5,c	;volatile
  6299   002564  EF0D  F013         	goto	l1079
  6300   002568                     l4537:
  6301   002568  8096               	bsf	150,0,c	;volatile
  6302   00256A  EF0D  F013         	goto	l1079
  6303   00256E                     l4539:
  6304   00256E  8296               	bsf	150,1,c	;volatile
  6305   002570  EF0D  F013         	goto	l1079
  6306   002574                     l4541:
  6307   002574  8496               	bsf	150,2,c	;volatile
  6308   002576  EF0D  F013         	goto	l1079
  6309   00257A                     l4543:
  6310   00257A  8493               	bsf	147,2,c	;volatile
  6311   00257C  EF0D  F013         	goto	l1079
  6312   002580                     l4545:
  6313   002580  8693               	bsf	147,3,c	;volatile
  6314   002582  EF0D  F013         	goto	l1079
  6315   002586                     l4547:
  6316   002586  8293               	bsf	147,1,c	;volatile
  6317   002588  EF0D  F013         	goto	l1079
  6318   00258C                     l4549:
  6319   00258C  8893               	bsf	147,4,c	;volatile
  6320   00258E  EF0D  F013         	goto	l1079
  6321   002592                     l4551:
  6322   002592  8093               	bsf	147,0,c	;volatile
  6323   002594  EF0D  F013         	goto	l1079
  6324   002598                     l4553:
  6325   002598  5014               	movf	Pins_Configration_Func@channel^0,w,c
  6326   00259A  6E12               	movwf	??_Pins_Configration_Func^0,c
  6327   00259C  6A13               	clrf	(??_Pins_Configration_Func+1)^0,c
  6328                           
  6329                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6330                           ; Switch size 1, requested type "simple"
  6331                           ; Number of cases is 1, Range of values is 0 to 0
  6332                           ; switch strategies available:
  6333                           ; Name         Instructions Cycles
  6334                           ; simple_byte            4     3 (average)
  6335                           ;	Chosen strategy is simple_byte
  6336   00259E  5013               	movf	(??_Pins_Configration_Func+1)^0,w,c
  6337   0025A0  0A00               	xorlw	0	; case 0
  6338   0025A2  B4D8               	btfsc	status,2,c
  6339   0025A4  EFD6  F012         	goto	l6879
  6340   0025A8  EF0D  F013         	goto	l1079
  6341   0025AC                     l6879:
  6342                           
  6343                           ; Switch size 1, requested type "simple"
  6344                           ; Number of cases is 13, Range of values is 0 to 12
  6345                           ; switch strategies available:
  6346                           ; Name         Instructions Cycles
  6347                           ; simple_byte           40    21 (average)
  6348                           ;	Chosen strategy is simple_byte
  6349   0025AC  5012               	movf	??_Pins_Configration_Func^0,w,c
  6350   0025AE  0A00               	xorlw	0	; case 0
  6351   0025B0  B4D8               	btfsc	status,2,c
  6352   0025B2  EFA5  F012         	goto	l4527
  6353   0025B6  0A01               	xorlw	1	; case 1
  6354   0025B8  B4D8               	btfsc	status,2,c
  6355   0025BA  EFA8  F012         	goto	l4529
  6356   0025BE  0A03               	xorlw	3	; case 2
  6357   0025C0  B4D8               	btfsc	status,2,c
  6358   0025C2  EFAB  F012         	goto	l4531
  6359   0025C6  0A01               	xorlw	1	; case 3
  6360   0025C8  B4D8               	btfsc	status,2,c
  6361   0025CA  EFAE  F012         	goto	l4533
  6362   0025CE  0A07               	xorlw	7	; case 4
  6363   0025D0  B4D8               	btfsc	status,2,c
  6364   0025D2  EFB1  F012         	goto	l4535
  6365   0025D6  0A01               	xorlw	1	; case 5
  6366   0025D8  B4D8               	btfsc	status,2,c
  6367   0025DA  EFB4  F012         	goto	l4537
  6368   0025DE  0A03               	xorlw	3	; case 6
  6369   0025E0  B4D8               	btfsc	status,2,c
  6370   0025E2  EFB7  F012         	goto	l4539
  6371   0025E6  0A01               	xorlw	1	; case 7
  6372   0025E8  B4D8               	btfsc	status,2,c
  6373   0025EA  EFBA  F012         	goto	l4541
  6374   0025EE  0A0F               	xorlw	15	; case 8
  6375   0025F0  B4D8               	btfsc	status,2,c
  6376   0025F2  EFBD  F012         	goto	l4543
  6377   0025F6  0A01               	xorlw	1	; case 9
  6378   0025F8  B4D8               	btfsc	status,2,c
  6379   0025FA  EFC0  F012         	goto	l4545
  6380   0025FE  0A03               	xorlw	3	; case 10
  6381   002600  B4D8               	btfsc	status,2,c
  6382   002602  EFC3  F012         	goto	l4547
  6383   002606  0A01               	xorlw	1	; case 11
  6384   002608  B4D8               	btfsc	status,2,c
  6385   00260A  EFC6  F012         	goto	l4549
  6386   00260E  0A07               	xorlw	7	; case 12
  6387   002610  B4D8               	btfsc	status,2,c
  6388   002612  EFC9  F012         	goto	l4551
  6389   002616  EF0D  F013         	goto	l1079
  6390   00261A                     l1079:
  6391   00261A  0012               	return		;funcret
  6392   00261C                     __end_of_Pins_Configration_Func:
  6393                           	callstack 0
  6394                           
  6395 ;; *************** function _Interrupt_Init *****************
  6396 ;; Defined at:
  6397 ;;		line 203 in file "MCAL_Layer/ADC/ADC.c"
  6398 ;; Parameters:    Size  Location     Type
  6399 ;;  Adc_            2   17[COMRAM] PTR struct .
  6400 ;;		 -> ADC_1(7), 
  6401 ;; Auto vars:     Size  Location     Type
  6402 ;;		None
  6403 ;; Return value:  Size  Location     Type
  6404 ;;                  1    wreg      void 
  6405 ;; Registers used:
  6406 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6407 ;; Tracked objects:
  6408 ;;		On entry : 0/0
  6409 ;;		On exit  : 0/0
  6410 ;;		Unchanged: 0/0
  6411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6412 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6414 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6415 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6416 ;;Total ram usage:        3 bytes
  6417 ;; Hardware stack levels used: 1
  6418 ;; Hardware stack levels required when called: 6
  6419 ;; This function calls:
  6420 ;;		Nothing
  6421 ;; This function is called by:
  6422 ;;		_ADC_Initialize
  6423 ;; This function uses a non-reentrant model
  6424 ;;
  6425                           
  6426                           	psect	text37
  6427   002E40                     __ptext37:
  6428                           	callstack 0
  6429   002E40                     _Interrupt_Init:
  6430                           	callstack 23
  6431   002E40                     
  6432                           ;MCAL_Layer/ADC/ADC.c: 204:     (PIR1bits.ADIF = 0);
  6433   002E40  9C9E               	bcf	158,6,c	;volatile
  6434                           
  6435                           ;MCAL_Layer/ADC/ADC.c: 205:     (PIE1bits.ADIE = 0);
  6436   002E42  9C9D               	bcf	157,6,c	;volatile
  6437                           
  6438                           ;MCAL_Layer/ADC/ADC.c: 207:     (RCONbits.IPEN = 1);
  6439   002E44  8ED0               	bsf	208,7,c	;volatile
  6440   002E46                     
  6441                           ;MCAL_Layer/ADC/ADC.c: 208:     if(High_Priority == Adc_->ADC_Interrupt_Priority){
  6442   002E46  EE20 F002          	lfsr	2,2
  6443   002E4A  5012               	movf	Interrupt_Init@Adc_^0,w,c
  6444   002E4C  26D9               	addwf	fsr2l,f,c
  6445   002E4E  5013               	movf	(Interrupt_Init@Adc_+1)^0,w,c
  6446   002E50  22DA               	addwfc	fsr2h,f,c
  6447   002E52  04DE               	decf	postinc2,w,c
  6448   002E54  A4D8               	btfss	status,2,c
  6449   002E56  EF2F  F017         	goto	u3841
  6450   002E5A  EF31  F017         	goto	u3840
  6451   002E5E                     u3841:
  6452   002E5E  EF35  F017         	goto	l4711
  6453   002E62                     u3840:
  6454   002E62                     
  6455                           ;MCAL_Layer/ADC/ADC.c: 209:         (INTCONbits.GIEH = 1);
  6456   002E62  8EF2               	bsf	242,7,c	;volatile
  6457                           
  6458                           ;MCAL_Layer/ADC/ADC.c: 210:         (IPR1bits.ADIP = 1);
  6459   002E64  8C9F               	bsf	159,6,c	;volatile
  6460                           
  6461                           ;MCAL_Layer/ADC/ADC.c: 211:     }
  6462   002E66  EF46  F017         	goto	l4715
  6463   002E6A                     l4711:
  6464   002E6A  EE20 F002          	lfsr	2,2
  6465   002E6E  5012               	movf	Interrupt_Init@Adc_^0,w,c
  6466   002E70  26D9               	addwf	fsr2l,f,c
  6467   002E72  5013               	movf	(Interrupt_Init@Adc_+1)^0,w,c
  6468   002E74  22DA               	addwfc	fsr2h,f,c
  6469   002E76  50DF               	movf	indf2,w,c
  6470   002E78  A4D8               	btfss	status,2,c
  6471   002E7A  EF41  F017         	goto	u3851
  6472   002E7E  EF43  F017         	goto	u3850
  6473   002E82                     u3851:
  6474   002E82  EF46  F017         	goto	l4715
  6475   002E86                     u3850:
  6476   002E86                     
  6477                           ;MCAL_Layer/ADC/ADC.c: 213:         (INTCONbits.GIEH = 1);
  6478   002E86  8EF2               	bsf	242,7,c	;volatile
  6479                           
  6480                           ;MCAL_Layer/ADC/ADC.c: 214:         (INTCONbits.GIEL = 1);
  6481   002E88  8CF2               	bsf	242,6,c	;volatile
  6482                           
  6483                           ;MCAL_Layer/ADC/ADC.c: 215:         (IPR1bits.ADIP = 0);
  6484   002E8A  9C9F               	bcf	159,6,c	;volatile
  6485   002E8C                     l4715:
  6486                           
  6487                           ;MCAL_Layer/ADC/ADC.c: 221:     ADC_InterruptHandler = Adc_->ADC_INTERRUPT;
  6488   002E8C  C012  FFD9         	movff	Interrupt_Init@Adc_,fsr2l
  6489   002E90  C013  FFDA         	movff	Interrupt_Init@Adc_+1,fsr2h
  6490   002E94  CFDE F0C1          	movff	postinc2,_ADC_InterruptHandler
  6491   002E98  CFDD F0C2          	movff	postdec2,_ADC_InterruptHandler+1
  6492   002E9C                     
  6493                           ;MCAL_Layer/ADC/ADC.c: 222:     (PIE1bits.ADIE = 1);
  6494   002E9C  8C9D               	bsf	157,6,c	;volatile
  6495   002E9E  0012               	return		;funcret
  6496   002EA0                     __end_of_Interrupt_Init:
  6497                           	callstack 0
  6498                           
  6499 ;; *************** function _LOW_PRIORITY_INTERRUPTS *****************
  6500 ;; Defined at:
  6501 ;;		line 106 in file "MCAL_Layer/Interupt/mcal_interrupt_manager.c"
  6502 ;; Parameters:    Size  Location     Type
  6503 ;;		None
  6504 ;; Auto vars:     Size  Location     Type
  6505 ;;		None
  6506 ;; Return value:  Size  Location     Type
  6507 ;;                  1    wreg      void 
  6508 ;; Registers used:
  6509 ;;		wreg, status,2, status,0, cstack
  6510 ;; Tracked objects:
  6511 ;;		On entry : 0/0
  6512 ;;		On exit  : 0/0
  6513 ;;		Unchanged: 0/0
  6514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6517 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6518 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6519 ;;Total ram usage:        3 bytes
  6520 ;; Hardware stack levels used: 1
  6521 ;; Hardware stack levels required when called: 5
  6522 ;; This function calls:
  6523 ;;		_RB7_ISR
  6524 ;; This function is called by:
  6525 ;;		Interrupt level 1
  6526 ;; This function uses a non-reentrant model
  6527 ;;
  6528                           
  6529                           	psect	intcodelo
  6530   000018                     __pintcodelo:
  6531                           	callstack 0
  6532   000018                     _LOW_PRIORITY_INTERRUPTS:
  6533                           	callstack 16
  6534                           
  6535                           ;incstack = 0
  6536   000018  806D               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  6537   00001A  CFD8 F00F          	movff	status,??_LOW_PRIORITY_INTERRUPTS
  6538   00001E  CFE8 F010          	movff	wreg,??_LOW_PRIORITY_INTERRUPTS+1
  6539   000022  CFE0 F011          	movff	bsr,??_LOW_PRIORITY_INTERRUPTS+2
  6540   000026                     
  6541                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 108:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  6542   000026  A6F2               	btfss	242,3,c	;volatile
  6543   000028  EF18  F000         	goto	i1u575_21
  6544   00002C  EF1A  F000         	goto	i1u575_20
  6545   000030                     i1u575_21:
  6546   000030  EF35  F000         	goto	i1l893
  6547   000034                     i1u575_20:
  6548   000034  A0F2               	btfss	242,0,c	;volatile
  6549   000036  EF1F  F000         	goto	i1u576_21
  6550   00003A  EF21  F000         	goto	i1u576_20
  6551   00003E                     i1u576_21:
  6552   00003E  EF35  F000         	goto	i1l893
  6553   000042                     i1u576_20:
  6554   000042  AE81               	btfss	129,7,c	;volatile
  6555   000044  EF26  F000         	goto	i1u577_21
  6556   000048  EF28  F000         	goto	i1u577_20
  6557   00004C                     i1u577_21:
  6558   00004C  EF35  F000         	goto	i1l893
  6559   000050                     i1u577_20:
  6560   000050  0469               	decf	_RB7_Flag^0,w,c	;volatile
  6561   000052  A4D8               	btfss	status,2,c
  6562   000054  EF2E  F000         	goto	i1u578_21
  6563   000058  EF30  F000         	goto	i1u578_20
  6564   00005C                     i1u578_21:
  6565   00005C  EF35  F000         	goto	i1l893
  6566   000060                     i1u578_20:
  6567   000060                     
  6568                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 109:        (PORTBbits.RB7 == GPIO_HIGH) 
      +                          && (RB7_Flag == 1)){;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 110:         RB7_Flag
      +                           = 0;
  6569   000060  0E00               	movlw	0
  6570   000062  6E69               	movwf	_RB7_Flag^0,c	;volatile
  6571   000064                     
  6572                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 111:         RB7_ISR(0);
  6573   000064  0E00               	movlw	0
  6574   000066  ECE4  F018         	call	_RB7_ISR
  6575   00006A                     i1l893:
  6576                           
  6577                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 115:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  6578   00006A  A6F2               	btfss	242,3,c	;volatile
  6579   00006C  EF3A  F000         	goto	i1u579_21
  6580   000070  EF3C  F000         	goto	i1u579_20
  6581   000074                     i1u579_21:
  6582   000074  EF57  F000         	goto	i1l896
  6583   000078                     i1u579_20:
  6584   000078  A0F2               	btfss	242,0,c	;volatile
  6585   00007A  EF41  F000         	goto	i1u580_21
  6586   00007E  EF43  F000         	goto	i1u580_20
  6587   000082                     i1u580_21:
  6588   000082  EF57  F000         	goto	i1l896
  6589   000086                     i1u580_20:
  6590   000086  BE81               	btfsc	129,7,c	;volatile
  6591   000088  EF48  F000         	goto	i1u581_21
  6592   00008C  EF4A  F000         	goto	i1u581_20
  6593   000090                     i1u581_21:
  6594   000090  EF57  F000         	goto	i1l896
  6595   000094                     i1u581_20:
  6596   000094  5069               	movf	_RB7_Flag^0,w,c	;volatile
  6597   000096  A4D8               	btfss	status,2,c
  6598   000098  EF50  F000         	goto	i1u582_21
  6599   00009C  EF52  F000         	goto	i1u582_20
  6600   0000A0                     i1u582_21:
  6601   0000A0  EF57  F000         	goto	i1l896
  6602   0000A4                     i1u582_20:
  6603   0000A4                     
  6604                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 116:        (PORTBbits.RB7 == GPIO_LOW) &
      +                          & (RB7_Flag == 0)){;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 117:         RB7_Flag 
      +                          = 1;
  6605   0000A4  0E01               	movlw	1
  6606   0000A6  6E69               	movwf	_RB7_Flag^0,c	;volatile
  6607   0000A8                     
  6608                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 118:         RB7_ISR(1);
  6609   0000A8  0E01               	movlw	1
  6610   0000AA  ECE4  F018         	call	_RB7_ISR
  6611   0000AE                     i1l896:
  6612   0000AE  C011  FFE0         	movff	??_LOW_PRIORITY_INTERRUPTS+2,bsr
  6613   0000B2  C010  FFE8         	movff	??_LOW_PRIORITY_INTERRUPTS+1,wreg
  6614   0000B6  C00F  FFD8         	movff	??_LOW_PRIORITY_INTERRUPTS,status
  6615   0000BA  906D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  6616   0000BC  0010               	retfie	
  6617   0000BE                     __end_of_LOW_PRIORITY_INTERRUPTS:
  6618                           	callstack 0
  6619                           
  6620 ;; *************** function _RB7_ISR *****************
  6621 ;; Defined at:
  6622 ;;		line 550 in file "MCAL_Layer/Interupt/mcal_external_interrupt.c"
  6623 ;; Parameters:    Size  Location     Type
  6624 ;;  FUNC_DETECTI    1    wreg     unsigned char 
  6625 ;; Auto vars:     Size  Location     Type
  6626 ;;  FUNC_DETECTI    1   13[COMRAM] unsigned char 
  6627 ;; Return value:  Size  Location     Type
  6628 ;;                  1    wreg      void 
  6629 ;; Registers used:
  6630 ;;		wreg, status,2, status,0
  6631 ;; Tracked objects:
  6632 ;;		On entry : 0/0
  6633 ;;		On exit  : 0/0
  6634 ;;		Unchanged: 0/0
  6635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6637 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6638 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6639 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6640 ;;Total ram usage:        3 bytes
  6641 ;; Hardware stack levels used: 1
  6642 ;; Hardware stack levels required when called: 4
  6643 ;; This function calls:
  6644 ;;		Nothing
  6645 ;; This function is called by:
  6646 ;;		_LOW_PRIORITY_INTERRUPTS
  6647 ;; This function uses a non-reentrant model
  6648 ;;
  6649                           
  6650                           	psect	text39
  6651   0031C8                     __ptext39:
  6652                           	callstack 0
  6653   0031C8                     _RB7_ISR:
  6654                           	callstack 16
  6655                           
  6656                           ;incstack = 0
  6657                           ;RB7_ISR@FUNC_DETECTION stored from wreg
  6658   0031C8  6E0E               	movwf	RB7_ISR@FUNC_DETECTION^0,c
  6659   0031CA                     
  6660                           ;MCAL_Layer/Interupt/mcal_external_interrupt.c: 551:     (INTCONbits.RBIF = 0);
  6661   0031CA  90F2               	bcf	242,0,c	;volatile
  6662                           
  6663                           ;MCAL_Layer/Interupt/mcal_external_interrupt.c: 552:     switch(FUNC_DETECTION){
  6664   0031CC  EFEA  F018         	goto	i1l5009
  6665   0031D0                     i1l5001:
  6666   0031D0  EFFF  F018         	goto	i1l752
  6667   0031D4                     i1l5009:
  6668   0031D4  500E               	movf	RB7_ISR@FUNC_DETECTION^0,w,c
  6669   0031D6  6E0C               	movwf	??_RB7_ISR^0,c
  6670   0031D8  6A0D               	clrf	(??_RB7_ISR+1)^0,c
  6671                           
  6672                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6673                           ; Switch size 1, requested type "simple"
  6674                           ; Number of cases is 1, Range of values is 0 to 0
  6675                           ; switch strategies available:
  6676                           ; Name         Instructions Cycles
  6677                           ; simple_byte            4     3 (average)
  6678                           ;	Chosen strategy is simple_byte
  6679   0031DA  500D               	movf	(??_RB7_ISR+1)^0,w,c
  6680   0031DC  0A00               	xorlw	0	; case 0
  6681   0031DE  B4D8               	btfsc	status,2,c
  6682   0031E0  EFF4  F018         	goto	i1l6881
  6683   0031E4  EFFF  F018         	goto	i1l752
  6684   0031E8                     i1l6881:
  6685                           
  6686                           ; Switch size 1, requested type "simple"
  6687                           ; Number of cases is 2, Range of values is 0 to 1
  6688                           ; switch strategies available:
  6689                           ; Name         Instructions Cycles
  6690                           ; simple_byte            7     4 (average)
  6691                           ;	Chosen strategy is simple_byte
  6692   0031E8  500C               	movf	??_RB7_ISR^0,w,c
  6693   0031EA  0A00               	xorlw	0	; case 0
  6694   0031EC  B4D8               	btfsc	status,2,c
  6695   0031EE  EFE8  F018         	goto	i1l5001
  6696   0031F2  0A01               	xorlw	1	; case 1
  6697   0031F4  B4D8               	btfsc	status,2,c
  6698   0031F6  EFE8  F018         	goto	i1l5001
  6699   0031FA  EFFF  F018         	goto	i1l752
  6700   0031FE                     i1l752:
  6701   0031FE  0012               	return		;funcret
  6702   003200                     __end_of_RB7_ISR:
  6703                           	callstack 0
  6704                           
  6705 ;; *************** function _InterruptManagerHigh *****************
  6706 ;; Defined at:
  6707 ;;		line 14 in file "MCAL_Layer/Interupt/mcal_interrupt_manager.c"
  6708 ;; Parameters:    Size  Location     Type
  6709 ;;		None
  6710 ;; Auto vars:     Size  Location     Type
  6711 ;;		None
  6712 ;; Return value:  Size  Location     Type
  6713 ;;                  1    wreg      void 
  6714 ;; Registers used:
  6715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6716 ;; Tracked objects:
  6717 ;;		On entry : 0/0
  6718 ;;		On exit  : 0/0
  6719 ;;		Unchanged: 0/0
  6720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6723 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6724 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6725 ;;Total ram usage:        4 bytes
  6726 ;; Hardware stack levels used: 1
  6727 ;; Hardware stack levels required when called: 3
  6728 ;; This function calls:
  6729 ;;		_ADC_ISR
  6730 ;;		_INT0_ISR
  6731 ;;		_INT1_ISR
  6732 ;;		_INT2_ISR
  6733 ;;		_RB4_ISR
  6734 ;;		_RB5_ISR
  6735 ;;		_RB6_ISR
  6736 ;;		i2_RB7_ISR
  6737 ;; This function is called by:
  6738 ;;		Interrupt level 2
  6739 ;; This function uses a non-reentrant model
  6740 ;;
  6741                           
  6742                           	psect	intcode
  6743   000008                     __pintcode:
  6744                           	callstack 0
  6745   000008                     _InterruptManagerHigh:
  6746                           	callstack 16
  6747                           
  6748                           ;incstack = 0
  6749   000008  826D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6750   00000A  ED2D  F00A         	call	int_func,f	;refresh shadow registers
  6751                           
  6752                           	psect	intcode_body
  6753   00145A                     __pintcode_body:
  6754                           	callstack 16
  6755   00145A                     int_func:
  6756                           	callstack 16
  6757   00145A  0006               	pop		; remove dummy address from shadow register refresh
  6758   00145C  CFFA F008          	movff	pclath,??_InterruptManagerHigh
  6759   001460  CFFB F009          	movff	pclatu,??_InterruptManagerHigh+1
  6760   001464  CFD9 F00A          	movff	fsr2l,??_InterruptManagerHigh+2
  6761   001468  CFDA F00B          	movff	fsr2h,??_InterruptManagerHigh+3
  6762   00146C                     
  6763                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 18:     if((1 == INTCONbits.INT0IE) && (1
      +                           == INTCONbits.INT0IF)){
  6764   00146C  A8F2               	btfss	242,4,c	;volatile
  6765   00146E  EF3B  F00A         	goto	i2u535_41
  6766   001472  EF3D  F00A         	goto	i2u535_40
  6767   001476                     i2u535_41:
  6768   001476  EF46  F00A         	goto	i2l864
  6769   00147A                     i2u535_40:
  6770   00147A  A2F2               	btfss	242,1,c	;volatile
  6771   00147C  EF42  F00A         	goto	i2u536_41
  6772   001480  EF44  F00A         	goto	i2u536_40
  6773   001484                     i2u536_41:
  6774   001484  EF46  F00A         	goto	i2l864
  6775   001488                     i2u536_40:
  6776   001488                     
  6777                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 19:         INT0_ISR();
  6778   001488  ECD1  F019         	call	_INT0_ISR	;wreg free
  6779   00148C                     i2l864:
  6780                           
  6781                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 23:     if((1 == INTCON3bits.INT1IE) && (
      +                          1 == INTCON3bits.INT1IF)){
  6782   00148C  A6F0               	btfss	240,3,c	;volatile
  6783   00148E  EF4B  F00A         	goto	i2u537_41
  6784   001492  EF4D  F00A         	goto	i2u537_40
  6785   001496                     i2u537_41:
  6786   001496  EF56  F00A         	goto	i2l866
  6787   00149A                     i2u537_40:
  6788   00149A  A0F0               	btfss	240,0,c	;volatile
  6789   00149C  EF52  F00A         	goto	i2u538_41
  6790   0014A0  EF54  F00A         	goto	i2u538_40
  6791   0014A4                     i2u538_41:
  6792   0014A4  EF56  F00A         	goto	i2l866
  6793   0014A8                     i2u538_40:
  6794   0014A8                     
  6795                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 24:         INT1_ISR();
  6796   0014A8  ECCF  F019         	call	_INT1_ISR	;wreg free
  6797   0014AC                     i2l866:
  6798                           
  6799                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 28:     if((1 == INTCON3bits.INT2IE) && (
      +                          1 == INTCON3bits.INT2IF)){
  6800   0014AC  A8F0               	btfss	240,4,c	;volatile
  6801   0014AE  EF5B  F00A         	goto	i2u539_41
  6802   0014B2  EF5D  F00A         	goto	i2u539_40
  6803   0014B6                     i2u539_41:
  6804   0014B6  EF66  F00A         	goto	i2l868
  6805   0014BA                     i2u539_40:
  6806   0014BA  A2F0               	btfss	240,1,c	;volatile
  6807   0014BC  EF62  F00A         	goto	i2u540_41
  6808   0014C0  EF64  F00A         	goto	i2u540_40
  6809   0014C4                     i2u540_41:
  6810   0014C4  EF66  F00A         	goto	i2l868
  6811   0014C8                     i2u540_40:
  6812   0014C8                     
  6813                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 29:         INT2_ISR();
  6814   0014C8  ECCD  F019         	call	_INT2_ISR	;wreg free
  6815   0014CC                     i2l868:
  6816                           
  6817                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 36:     if((1 == INTCONbits.RBIE) && (1 =
      +                          = INTCONbits.RBIF) &&
  6818   0014CC  A6F2               	btfss	242,3,c	;volatile
  6819   0014CE  EF6B  F00A         	goto	i2u541_41
  6820   0014D2  EF6D  F00A         	goto	i2u541_40
  6821   0014D6                     i2u541_41:
  6822   0014D6  EF88  F00A         	goto	i2l870
  6823   0014DA                     i2u541_40:
  6824   0014DA  A0F2               	btfss	242,0,c	;volatile
  6825   0014DC  EF72  F00A         	goto	i2u542_41
  6826   0014E0  EF74  F00A         	goto	i2u542_40
  6827   0014E4                     i2u542_41:
  6828   0014E4  EF88  F00A         	goto	i2l870
  6829   0014E8                     i2u542_40:
  6830   0014E8  A881               	btfss	129,4,c	;volatile
  6831   0014EA  EF79  F00A         	goto	i2u543_41
  6832   0014EE  EF7B  F00A         	goto	i2u543_40
  6833   0014F2                     i2u543_41:
  6834   0014F2  EF88  F00A         	goto	i2l870
  6835   0014F6                     i2u543_40:
  6836   0014F6  046C               	decf	_RB4_Flag^0,w,c	;volatile
  6837   0014F8  A4D8               	btfss	status,2,c
  6838   0014FA  EF81  F00A         	goto	i2u544_41
  6839   0014FE  EF83  F00A         	goto	i2u544_40
  6840   001502                     i2u544_41:
  6841   001502  EF88  F00A         	goto	i2l870
  6842   001506                     i2u544_40:
  6843   001506                     
  6844                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 37:        (PORTBbits.RB4 == GPIO_HIGH) &
      +                          & (RB4_Flag == 1)){;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 38:         RB4_Flag =
      +                           0;
  6845   001506  0E00               	movlw	0
  6846   001508  6E6C               	movwf	_RB4_Flag^0,c	;volatile
  6847   00150A                     
  6848                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 39:         RB4_ISR(0);
  6849   00150A  0E00               	movlw	0
  6850   00150C  EC54  F019         	call	_RB4_ISR
  6851   001510                     i2l870:
  6852                           
  6853                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 43:     if((1 == INTCONbits.RBIE) && (1 =
      +                          = INTCONbits.RBIF) &&
  6854   001510  A6F2               	btfss	242,3,c	;volatile
  6855   001512  EF8D  F00A         	goto	i2u545_41
  6856   001516  EF8F  F00A         	goto	i2u545_40
  6857   00151A                     i2u545_41:
  6858   00151A  EFAA  F00A         	goto	i2l872
  6859   00151E                     i2u545_40:
  6860   00151E  A0F2               	btfss	242,0,c	;volatile
  6861   001520  EF94  F00A         	goto	i2u546_41
  6862   001524  EF96  F00A         	goto	i2u546_40
  6863   001528                     i2u546_41:
  6864   001528  EFAA  F00A         	goto	i2l872
  6865   00152C                     i2u546_40:
  6866   00152C  B881               	btfsc	129,4,c	;volatile
  6867   00152E  EF9B  F00A         	goto	i2u547_41
  6868   001532  EF9D  F00A         	goto	i2u547_40
  6869   001536                     i2u547_41:
  6870   001536  EFAA  F00A         	goto	i2l872
  6871   00153A                     i2u547_40:
  6872   00153A  506C               	movf	_RB4_Flag^0,w,c	;volatile
  6873   00153C  A4D8               	btfss	status,2,c
  6874   00153E  EFA3  F00A         	goto	i2u548_41
  6875   001542  EFA5  F00A         	goto	i2u548_40
  6876   001546                     i2u548_41:
  6877   001546  EFAA  F00A         	goto	i2l872
  6878   00154A                     i2u548_40:
  6879   00154A                     
  6880                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 44:        (PORTBbits.RB4 == GPIO_LOW) &&
      +                           (RB4_Flag == 0)){;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 45:         RB4_Flag = 
      +                          1;
  6881   00154A  0E01               	movlw	1
  6882   00154C  6E6C               	movwf	_RB4_Flag^0,c	;volatile
  6883   00154E                     
  6884                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 46:         RB4_ISR(1);
  6885   00154E  0E01               	movlw	1
  6886   001550  EC54  F019         	call	_RB4_ISR
  6887   001554                     i2l872:
  6888                           
  6889                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 50:     if((1 == INTCONbits.RBIE) && (1 =
      +                          = INTCONbits.RBIF) &&
  6890   001554  A6F2               	btfss	242,3,c	;volatile
  6891   001556  EFAF  F00A         	goto	i2u549_41
  6892   00155A  EFB1  F00A         	goto	i2u549_40
  6893   00155E                     i2u549_41:
  6894   00155E  EFCC  F00A         	goto	i2l874
  6895   001562                     i2u549_40:
  6896   001562  A0F2               	btfss	242,0,c	;volatile
  6897   001564  EFB6  F00A         	goto	i2u550_41
  6898   001568  EFB8  F00A         	goto	i2u550_40
  6899   00156C                     i2u550_41:
  6900   00156C  EFCC  F00A         	goto	i2l874
  6901   001570                     i2u550_40:
  6902   001570  AA81               	btfss	129,5,c	;volatile
  6903   001572  EFBD  F00A         	goto	i2u551_41
  6904   001576  EFBF  F00A         	goto	i2u551_40
  6905   00157A                     i2u551_41:
  6906   00157A  EFCC  F00A         	goto	i2l874
  6907   00157E                     i2u551_40:
  6908   00157E  046B               	decf	_RB5_Flag^0,w,c	;volatile
  6909   001580  A4D8               	btfss	status,2,c
  6910   001582  EFC5  F00A         	goto	i2u552_41
  6911   001586  EFC7  F00A         	goto	i2u552_40
  6912   00158A                     i2u552_41:
  6913   00158A  EFCC  F00A         	goto	i2l874
  6914   00158E                     i2u552_40:
  6915   00158E                     
  6916                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 51:        (PORTBbits.RB5 == GPIO_HIGH) &
      +                          & (RB5_Flag == 1)){;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 52:         RB5_Flag =
      +                           0;
  6917   00158E  0E00               	movlw	0
  6918   001590  6E6B               	movwf	_RB5_Flag^0,c	;volatile
  6919   001592                     
  6920                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 53:         RB5_ISR(0);
  6921   001592  0E00               	movlw	0
  6922   001594  EC38  F019         	call	_RB5_ISR
  6923   001598                     i2l874:
  6924                           
  6925                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 57:     if((1 == INTCONbits.RBIE) && (1 =
      +                          = INTCONbits.RBIF) &&
  6926   001598  A6F2               	btfss	242,3,c	;volatile
  6927   00159A  EFD1  F00A         	goto	i2u553_41
  6928   00159E  EFD3  F00A         	goto	i2u553_40
  6929   0015A2                     i2u553_41:
  6930   0015A2  EFEE  F00A         	goto	i2l876
  6931   0015A6                     i2u553_40:
  6932   0015A6  A0F2               	btfss	242,0,c	;volatile
  6933   0015A8  EFD8  F00A         	goto	i2u554_41
  6934   0015AC  EFDA  F00A         	goto	i2u554_40
  6935   0015B0                     i2u554_41:
  6936   0015B0  EFEE  F00A         	goto	i2l876
  6937   0015B4                     i2u554_40:
  6938   0015B4  BA81               	btfsc	129,5,c	;volatile
  6939   0015B6  EFDF  F00A         	goto	i2u555_41
  6940   0015BA  EFE1  F00A         	goto	i2u555_40
  6941   0015BE                     i2u555_41:
  6942   0015BE  EFEE  F00A         	goto	i2l876
  6943   0015C2                     i2u555_40:
  6944   0015C2  506B               	movf	_RB5_Flag^0,w,c	;volatile
  6945   0015C4  A4D8               	btfss	status,2,c
  6946   0015C6  EFE7  F00A         	goto	i2u556_41
  6947   0015CA  EFE9  F00A         	goto	i2u556_40
  6948   0015CE                     i2u556_41:
  6949   0015CE  EFEE  F00A         	goto	i2l876
  6950   0015D2                     i2u556_40:
  6951   0015D2                     
  6952                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 58:        (PORTBbits.RB5 == GPIO_LOW) &&
      +                           (RB5_Flag == 0)){;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 59:         RB5_Flag = 
      +                          1;
  6953   0015D2  0E01               	movlw	1
  6954   0015D4  6E6B               	movwf	_RB5_Flag^0,c	;volatile
  6955   0015D6                     
  6956                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 60:         RB5_ISR(1);
  6957   0015D6  0E01               	movlw	1
  6958   0015D8  EC38  F019         	call	_RB5_ISR
  6959   0015DC                     i2l876:
  6960                           
  6961                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 64:     if((1 == INTCONbits.RBIE) && (1 =
      +                          = INTCONbits.RBIF) &&
  6962   0015DC  A6F2               	btfss	242,3,c	;volatile
  6963   0015DE  EFF3  F00A         	goto	i2u557_41
  6964   0015E2  EFF5  F00A         	goto	i2u557_40
  6965   0015E6                     i2u557_41:
  6966   0015E6  EF10  F00B         	goto	i2l878
  6967   0015EA                     i2u557_40:
  6968   0015EA  A0F2               	btfss	242,0,c	;volatile
  6969   0015EC  EFFA  F00A         	goto	i2u558_41
  6970   0015F0  EFFC  F00A         	goto	i2u558_40
  6971   0015F4                     i2u558_41:
  6972   0015F4  EF10  F00B         	goto	i2l878
  6973   0015F8                     i2u558_40:
  6974   0015F8  AC81               	btfss	129,6,c	;volatile
  6975   0015FA  EF01  F00B         	goto	i2u559_41
  6976   0015FE  EF03  F00B         	goto	i2u559_40
  6977   001602                     i2u559_41:
  6978   001602  EF10  F00B         	goto	i2l878
  6979   001606                     i2u559_40:
  6980   001606  046A               	decf	_RB6_Flag^0,w,c	;volatile
  6981   001608  A4D8               	btfss	status,2,c
  6982   00160A  EF09  F00B         	goto	i2u560_41
  6983   00160E  EF0B  F00B         	goto	i2u560_40
  6984   001612                     i2u560_41:
  6985   001612  EF10  F00B         	goto	i2l878
  6986   001616                     i2u560_40:
  6987   001616                     
  6988                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 65:        (PORTBbits.RB6 == GPIO_HIGH) &
      +                          & (RB6_Flag == 1)){;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 66:         RB6_Flag =
      +                           0;
  6989   001616  0E00               	movlw	0
  6990   001618  6E6A               	movwf	_RB6_Flag^0,c	;volatile
  6991   00161A                     
  6992                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 67:         RB6_ISR(0);
  6993   00161A  0E00               	movlw	0
  6994   00161C  EC1C  F019         	call	_RB6_ISR
  6995   001620                     i2l878:
  6996                           
  6997                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 71:     if((1 == INTCONbits.RBIE) && (1 =
      +                          = INTCONbits.RBIF) &&
  6998   001620  A6F2               	btfss	242,3,c	;volatile
  6999   001622  EF15  F00B         	goto	i2u561_41
  7000   001626  EF17  F00B         	goto	i2u561_40
  7001   00162A                     i2u561_41:
  7002   00162A  EF32  F00B         	goto	i2l880
  7003   00162E                     i2u561_40:
  7004   00162E  A0F2               	btfss	242,0,c	;volatile
  7005   001630  EF1C  F00B         	goto	i2u562_41
  7006   001634  EF1E  F00B         	goto	i2u562_40
  7007   001638                     i2u562_41:
  7008   001638  EF32  F00B         	goto	i2l880
  7009   00163C                     i2u562_40:
  7010   00163C  BC81               	btfsc	129,6,c	;volatile
  7011   00163E  EF23  F00B         	goto	i2u563_41
  7012   001642  EF25  F00B         	goto	i2u563_40
  7013   001646                     i2u563_41:
  7014   001646  EF32  F00B         	goto	i2l880
  7015   00164A                     i2u563_40:
  7016   00164A  506A               	movf	_RB6_Flag^0,w,c	;volatile
  7017   00164C  A4D8               	btfss	status,2,c
  7018   00164E  EF2B  F00B         	goto	i2u564_41
  7019   001652  EF2D  F00B         	goto	i2u564_40
  7020   001656                     i2u564_41:
  7021   001656  EF32  F00B         	goto	i2l880
  7022   00165A                     i2u564_40:
  7023   00165A                     
  7024                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 72:        (PORTBbits.RB6 == GPIO_LOW) &&
      +                           (RB6_Flag == 0)){;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 73:         RB6_Flag = 
      +                          1;
  7025   00165A  0E01               	movlw	1
  7026   00165C  6E6A               	movwf	_RB6_Flag^0,c	;volatile
  7027   00165E                     
  7028                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 74:         RB6_ISR(1);
  7029   00165E  0E01               	movlw	1
  7030   001660  EC1C  F019         	call	_RB6_ISR
  7031   001664                     i2l880:
  7032                           
  7033                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 78:     if((1 == INTCONbits.RBIE) && (1 =
      +                          = INTCONbits.RBIF) &&
  7034   001664  A6F2               	btfss	242,3,c	;volatile
  7035   001666  EF37  F00B         	goto	i2u565_41
  7036   00166A  EF39  F00B         	goto	i2u565_40
  7037   00166E                     i2u565_41:
  7038   00166E  EF54  F00B         	goto	i2l882
  7039   001672                     i2u565_40:
  7040   001672  A0F2               	btfss	242,0,c	;volatile
  7041   001674  EF3E  F00B         	goto	i2u566_41
  7042   001678  EF40  F00B         	goto	i2u566_40
  7043   00167C                     i2u566_41:
  7044   00167C  EF54  F00B         	goto	i2l882
  7045   001680                     i2u566_40:
  7046   001680  AE81               	btfss	129,7,c	;volatile
  7047   001682  EF45  F00B         	goto	i2u567_41
  7048   001686  EF47  F00B         	goto	i2u567_40
  7049   00168A                     i2u567_41:
  7050   00168A  EF54  F00B         	goto	i2l882
  7051   00168E                     i2u567_40:
  7052   00168E  0469               	decf	_RB7_Flag^0,w,c	;volatile
  7053   001690  A4D8               	btfss	status,2,c
  7054   001692  EF4D  F00B         	goto	i2u568_41
  7055   001696  EF4F  F00B         	goto	i2u568_40
  7056   00169A                     i2u568_41:
  7057   00169A  EF54  F00B         	goto	i2l882
  7058   00169E                     i2u568_40:
  7059   00169E                     
  7060                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 79:        (PORTBbits.RB7 == GPIO_HIGH) &
      +                          & (RB7_Flag == 1)){;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 80:         RB7_Flag =
      +                           0;
  7061   00169E  0E00               	movlw	0
  7062   0016A0  6E69               	movwf	_RB7_Flag^0,c	;volatile
  7063   0016A2                     
  7064                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 81:         RB7_ISR(0);
  7065   0016A2  0E00               	movlw	0
  7066   0016A4  EC00  F019         	call	i2_RB7_ISR
  7067   0016A8                     i2l882:
  7068                           
  7069                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 85:     if((1 == INTCONbits.RBIE) && (1 =
      +                          = INTCONbits.RBIF) &&
  7070   0016A8  A6F2               	btfss	242,3,c	;volatile
  7071   0016AA  EF59  F00B         	goto	i2u569_41
  7072   0016AE  EF5B  F00B         	goto	i2u569_40
  7073   0016B2                     i2u569_41:
  7074   0016B2  EF76  F00B         	goto	i2l884
  7075   0016B6                     i2u569_40:
  7076   0016B6  A0F2               	btfss	242,0,c	;volatile
  7077   0016B8  EF60  F00B         	goto	i2u570_41
  7078   0016BC  EF62  F00B         	goto	i2u570_40
  7079   0016C0                     i2u570_41:
  7080   0016C0  EF76  F00B         	goto	i2l884
  7081   0016C4                     i2u570_40:
  7082   0016C4  BE81               	btfsc	129,7,c	;volatile
  7083   0016C6  EF67  F00B         	goto	i2u571_41
  7084   0016CA  EF69  F00B         	goto	i2u571_40
  7085   0016CE                     i2u571_41:
  7086   0016CE  EF76  F00B         	goto	i2l884
  7087   0016D2                     i2u571_40:
  7088   0016D2  5069               	movf	_RB7_Flag^0,w,c	;volatile
  7089   0016D4  A4D8               	btfss	status,2,c
  7090   0016D6  EF6F  F00B         	goto	i2u572_41
  7091   0016DA  EF71  F00B         	goto	i2u572_40
  7092   0016DE                     i2u572_41:
  7093   0016DE  EF76  F00B         	goto	i2l884
  7094   0016E2                     i2u572_40:
  7095   0016E2                     
  7096                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 86:        (PORTBbits.RB7 == GPIO_LOW) &&
      +                           (RB7_Flag == 0)){;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 87:         RB7_Flag = 
      +                          1;
  7097   0016E2  0E01               	movlw	1
  7098   0016E4  6E69               	movwf	_RB7_Flag^0,c	;volatile
  7099   0016E6                     
  7100                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 88:         RB7_ISR(1);
  7101   0016E6  0E01               	movlw	1
  7102   0016E8  EC00  F019         	call	i2_RB7_ISR
  7103   0016EC                     i2l884:
  7104                           
  7105                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 94:     if((1 == PIE1bits.ADIE) && (1 == 
      +                          PIR1bits.ADIF)){
  7106   0016EC  AC9D               	btfss	157,6,c	;volatile
  7107   0016EE  EF7B  F00B         	goto	i2u573_41
  7108   0016F2  EF7D  F00B         	goto	i2u573_40
  7109   0016F6                     i2u573_41:
  7110   0016F6  EF86  F00B         	goto	i2l887
  7111   0016FA                     i2u573_40:
  7112   0016FA  AC9E               	btfss	158,6,c	;volatile
  7113   0016FC  EF82  F00B         	goto	i2u574_41
  7114   001700  EF84  F00B         	goto	i2u574_40
  7115   001704                     i2u574_41:
  7116   001704  EF86  F00B         	goto	i2l887
  7117   001708                     i2u574_40:
  7118   001708                     
  7119                           ;MCAL_Layer/Interupt/mcal_interrupt_manager.c: 95:         ADC_ISR();
  7120   001708  ECA5  F019         	call	_ADC_ISR	;wreg free
  7121   00170C                     i2l887:
  7122   00170C  C00B  FFDA         	movff	??_InterruptManagerHigh+3,fsr2h
  7123   001710  C00A  FFD9         	movff	??_InterruptManagerHigh+2,fsr2l
  7124   001714  C009  FFFB         	movff	??_InterruptManagerHigh+1,pclatu
  7125   001718  C008  FFFA         	movff	??_InterruptManagerHigh,pclath
  7126   00171C  926D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7127   00171E  0011               	retfie		f
  7128   001720                     __end_of_InterruptManagerHigh:
  7129                           	callstack 0
  7130                           
  7131 ;; *************** function i2_RB7_ISR *****************
  7132 ;; Defined at:
  7133 ;;		line 550 in file "MCAL_Layer/Interupt/mcal_external_interrupt.c"
  7134 ;; Parameters:    Size  Location     Type
  7135 ;;  FUNC_DETECTI    1    wreg     unsigned char 
  7136 ;; Auto vars:     Size  Location     Type
  7137 ;;  FUNC_DETECTI    1    2[COMRAM] unsigned char 
  7138 ;; Return value:  Size  Location     Type
  7139 ;;                  1    wreg      void 
  7140 ;; Registers used:
  7141 ;;		wreg, status,2, status,0
  7142 ;; Tracked objects:
  7143 ;;		On entry : 0/0
  7144 ;;		On exit  : 0/0
  7145 ;;		Unchanged: 0/0
  7146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7148 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7149 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7150 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7151 ;;Total ram usage:        3 bytes
  7152 ;; Hardware stack levels used: 1
  7153 ;; This function calls:
  7154 ;;		Nothing
  7155 ;; This function is called by:
  7156 ;;		_InterruptManagerHigh
  7157 ;; This function uses a non-reentrant model
  7158 ;;
  7159                           
  7160                           	psect	text41
  7161   003200                     __ptext41:
  7162                           	callstack 0
  7163   003200                     i2_RB7_ISR:
  7164                           	callstack 18
  7165                           
  7166                           ;incstack = 0
  7167                           ;i2RB7_ISR@FUNC_DETECTION stored from wreg
  7168   003200  6E03               	movwf	i2RB7_ISR@FUNC_DETECTION^0,c
  7169   003202                     
  7170                           ;MCAL_Layer/Interupt/mcal_external_interrupt.c: 551:     (INTCONbits.RBIF = 0);
  7171   003202  90F2               	bcf	242,0,c	;volatile
  7172                           
  7173                           ;MCAL_Layer/Interupt/mcal_external_interrupt.c: 552:     switch(FUNC_DETECTION){
  7174   003204  EF06  F019         	goto	i2l5315
  7175   003208                     i2l5307:
  7176   003208  EF1B  F019         	goto	i2l752
  7177   00320C                     i2l5315:
  7178   00320C  5003               	movf	i2RB7_ISR@FUNC_DETECTION^0,w,c
  7179   00320E  6E01               	movwf	??i2_RB7_ISR^0,c
  7180   003210  6A02               	clrf	(??i2_RB7_ISR+1)^0,c
  7181                           
  7182                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7183                           ; Switch size 1, requested type "simple"
  7184                           ; Number of cases is 1, Range of values is 0 to 0
  7185                           ; switch strategies available:
  7186                           ; Name         Instructions Cycles
  7187                           ; simple_byte            4     3 (average)
  7188                           ;	Chosen strategy is simple_byte
  7189   003212  5002               	movf	(??i2_RB7_ISR+1)^0,w,c
  7190   003214  0A00               	xorlw	0	; case 0
  7191   003216  B4D8               	btfsc	status,2,c
  7192   003218  EF10  F019         	goto	i2l6883
  7193   00321C  EF1B  F019         	goto	i2l752
  7194   003220                     i2l6883:
  7195                           
  7196                           ; Switch size 1, requested type "simple"
  7197                           ; Number of cases is 2, Range of values is 0 to 1
  7198                           ; switch strategies available:
  7199                           ; Name         Instructions Cycles
  7200                           ; simple_byte            7     4 (average)
  7201                           ;	Chosen strategy is simple_byte
  7202   003220  5001               	movf	??i2_RB7_ISR^0,w,c
  7203   003222  0A00               	xorlw	0	; case 0
  7204   003224  B4D8               	btfsc	status,2,c
  7205   003226  EF04  F019         	goto	i2l5307
  7206   00322A  0A01               	xorlw	1	; case 1
  7207   00322C  B4D8               	btfsc	status,2,c
  7208   00322E  EF04  F019         	goto	i2l5307
  7209   003232  EF1B  F019         	goto	i2l752
  7210   003236                     i2l752:
  7211   003236  0012               	return		;funcret
  7212   003238                     __end_ofi2_RB7_ISR:
  7213                           	callstack 0
  7214                           
  7215 ;; *************** function _RB6_ISR *****************
  7216 ;; Defined at:
  7217 ;;		line 527 in file "MCAL_Layer/Interupt/mcal_external_interrupt.c"
  7218 ;; Parameters:    Size  Location     Type
  7219 ;;  FUNC_DETECTI    1    wreg     unsigned char 
  7220 ;; Auto vars:     Size  Location     Type
  7221 ;;  FUNC_DETECTI    1    2[COMRAM] unsigned char 
  7222 ;; Return value:  Size  Location     Type
  7223 ;;                  1    wreg      void 
  7224 ;; Registers used:
  7225 ;;		wreg, status,2, status,0
  7226 ;; Tracked objects:
  7227 ;;		On entry : 0/0
  7228 ;;		On exit  : 0/0
  7229 ;;		Unchanged: 0/0
  7230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7232 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7233 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7234 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7235 ;;Total ram usage:        3 bytes
  7236 ;; Hardware stack levels used: 1
  7237 ;; This function calls:
  7238 ;;		Nothing
  7239 ;; This function is called by:
  7240 ;;		_InterruptManagerHigh
  7241 ;; This function uses a non-reentrant model
  7242 ;;
  7243                           
  7244                           	psect	text42
  7245   003238                     __ptext42:
  7246                           	callstack 0
  7247   003238                     _RB6_ISR:
  7248                           	callstack 18
  7249                           
  7250                           ;incstack = 0
  7251                           ;RB6_ISR@FUNC_DETECTION stored from wreg
  7252   003238  6E03               	movwf	RB6_ISR@FUNC_DETECTION^0,c
  7253   00323A                     
  7254                           ;MCAL_Layer/Interupt/mcal_external_interrupt.c: 528:     (INTCONbits.RBIF = 0);
  7255   00323A  90F2               	bcf	242,0,c	;volatile
  7256                           
  7257                           ;MCAL_Layer/Interupt/mcal_external_interrupt.c: 529:     switch(FUNC_DETECTION){
  7258   00323C  EF22  F019         	goto	i2l4993
  7259   003240                     i2l4985:
  7260   003240  EF37  F019         	goto	i2l740
  7261   003244                     i2l4993:
  7262   003244  5003               	movf	RB6_ISR@FUNC_DETECTION^0,w,c
  7263   003246  6E01               	movwf	??_RB6_ISR^0,c
  7264   003248  6A02               	clrf	(??_RB6_ISR+1)^0,c
  7265                           
  7266                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7267                           ; Switch size 1, requested type "simple"
  7268                           ; Number of cases is 1, Range of values is 0 to 0
  7269                           ; switch strategies available:
  7270                           ; Name         Instructions Cycles
  7271                           ; simple_byte            4     3 (average)
  7272                           ;	Chosen strategy is simple_byte
  7273   00324A  5002               	movf	(??_RB6_ISR+1)^0,w,c
  7274   00324C  0A00               	xorlw	0	; case 0
  7275   00324E  B4D8               	btfsc	status,2,c
  7276   003250  EF2C  F019         	goto	i2l6885
  7277   003254  EF37  F019         	goto	i2l740
  7278   003258                     i2l6885:
  7279                           
  7280                           ; Switch size 1, requested type "simple"
  7281                           ; Number of cases is 2, Range of values is 0 to 1
  7282                           ; switch strategies available:
  7283                           ; Name         Instructions Cycles
  7284                           ; simple_byte            7     4 (average)
  7285                           ;	Chosen strategy is simple_byte
  7286   003258  5001               	movf	??_RB6_ISR^0,w,c
  7287   00325A  0A00               	xorlw	0	; case 0
  7288   00325C  B4D8               	btfsc	status,2,c
  7289   00325E  EF20  F019         	goto	i2l4985
  7290   003262  0A01               	xorlw	1	; case 1
  7291   003264  B4D8               	btfsc	status,2,c
  7292   003266  EF20  F019         	goto	i2l4985
  7293   00326A  EF37  F019         	goto	i2l740
  7294   00326E                     i2l740:
  7295   00326E  0012               	return		;funcret
  7296   003270                     __end_of_RB6_ISR:
  7297                           	callstack 0
  7298                           
  7299 ;; *************** function _RB5_ISR *****************
  7300 ;; Defined at:
  7301 ;;		line 504 in file "MCAL_Layer/Interupt/mcal_external_interrupt.c"
  7302 ;; Parameters:    Size  Location     Type
  7303 ;;  FUNC_DETECTI    1    wreg     unsigned char 
  7304 ;; Auto vars:     Size  Location     Type
  7305 ;;  FUNC_DETECTI    1    2[COMRAM] unsigned char 
  7306 ;; Return value:  Size  Location     Type
  7307 ;;                  1    wreg      void 
  7308 ;; Registers used:
  7309 ;;		wreg, status,2, status,0
  7310 ;; Tracked objects:
  7311 ;;		On entry : 0/0
  7312 ;;		On exit  : 0/0
  7313 ;;		Unchanged: 0/0
  7314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7316 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7317 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7318 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7319 ;;Total ram usage:        3 bytes
  7320 ;; Hardware stack levels used: 1
  7321 ;; This function calls:
  7322 ;;		Nothing
  7323 ;; This function is called by:
  7324 ;;		_InterruptManagerHigh
  7325 ;; This function uses a non-reentrant model
  7326 ;;
  7327                           
  7328                           	psect	text43
  7329   003270                     __ptext43:
  7330                           	callstack 0
  7331   003270                     _RB5_ISR:
  7332                           	callstack 18
  7333                           
  7334                           ;incstack = 0
  7335                           ;RB5_ISR@FUNC_DETECTION stored from wreg
  7336   003270  6E03               	movwf	RB5_ISR@FUNC_DETECTION^0,c
  7337   003272                     
  7338                           ;MCAL_Layer/Interupt/mcal_external_interrupt.c: 505:     (INTCONbits.RBIF = 0);
  7339   003272  90F2               	bcf	242,0,c	;volatile
  7340                           
  7341                           ;MCAL_Layer/Interupt/mcal_external_interrupt.c: 506:     switch(FUNC_DETECTION){
  7342   003274  EF3E  F019         	goto	i2l4977
  7343   003278                     i2l4969:
  7344   003278  EF53  F019         	goto	i2l728
  7345   00327C                     i2l4977:
  7346   00327C  5003               	movf	RB5_ISR@FUNC_DETECTION^0,w,c
  7347   00327E  6E01               	movwf	??_RB5_ISR^0,c
  7348   003280  6A02               	clrf	(??_RB5_ISR+1)^0,c
  7349                           
  7350                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7351                           ; Switch size 1, requested type "simple"
  7352                           ; Number of cases is 1, Range of values is 0 to 0
  7353                           ; switch strategies available:
  7354                           ; Name         Instructions Cycles
  7355                           ; simple_byte            4     3 (average)
  7356                           ;	Chosen strategy is simple_byte
  7357   003282  5002               	movf	(??_RB5_ISR+1)^0,w,c
  7358   003284  0A00               	xorlw	0	; case 0
  7359   003286  B4D8               	btfsc	status,2,c
  7360   003288  EF48  F019         	goto	i2l6887
  7361   00328C  EF53  F019         	goto	i2l728
  7362   003290                     i2l6887:
  7363                           
  7364                           ; Switch size 1, requested type "simple"
  7365                           ; Number of cases is 2, Range of values is 0 to 1
  7366                           ; switch strategies available:
  7367                           ; Name         Instructions Cycles
  7368                           ; simple_byte            7     4 (average)
  7369                           ;	Chosen strategy is simple_byte
  7370   003290  5001               	movf	??_RB5_ISR^0,w,c
  7371   003292  0A00               	xorlw	0	; case 0
  7372   003294  B4D8               	btfsc	status,2,c
  7373   003296  EF3C  F019         	goto	i2l4969
  7374   00329A  0A01               	xorlw	1	; case 1
  7375   00329C  B4D8               	btfsc	status,2,c
  7376   00329E  EF3C  F019         	goto	i2l4969
  7377   0032A2  EF53  F019         	goto	i2l728
  7378   0032A6                     i2l728:
  7379   0032A6  0012               	return		;funcret
  7380   0032A8                     __end_of_RB5_ISR:
  7381                           	callstack 0
  7382                           
  7383 ;; *************** function _RB4_ISR *****************
  7384 ;; Defined at:
  7385 ;;		line 481 in file "MCAL_Layer/Interupt/mcal_external_interrupt.c"
  7386 ;; Parameters:    Size  Location     Type
  7387 ;;  FUNC_DETECTI    1    wreg     unsigned char 
  7388 ;; Auto vars:     Size  Location     Type
  7389 ;;  FUNC_DETECTI    1    2[COMRAM] unsigned char 
  7390 ;; Return value:  Size  Location     Type
  7391 ;;                  1    wreg      void 
  7392 ;; Registers used:
  7393 ;;		wreg, status,2, status,0
  7394 ;; Tracked objects:
  7395 ;;		On entry : 0/0
  7396 ;;		On exit  : 0/0
  7397 ;;		Unchanged: 0/0
  7398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7400 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7401 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7402 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7403 ;;Total ram usage:        3 bytes
  7404 ;; Hardware stack levels used: 1
  7405 ;; This function calls:
  7406 ;;		Nothing
  7407 ;; This function is called by:
  7408 ;;		_InterruptManagerHigh
  7409 ;; This function uses a non-reentrant model
  7410 ;;
  7411                           
  7412                           	psect	text44
  7413   0032A8                     __ptext44:
  7414                           	callstack 0
  7415   0032A8                     _RB4_ISR:
  7416                           	callstack 18
  7417                           
  7418                           ;incstack = 0
  7419                           ;RB4_ISR@FUNC_DETECTION stored from wreg
  7420   0032A8  6E03               	movwf	RB4_ISR@FUNC_DETECTION^0,c
  7421   0032AA                     
  7422                           ;MCAL_Layer/Interupt/mcal_external_interrupt.c: 482:     (INTCONbits.RBIF = 0);
  7423   0032AA  90F2               	bcf	242,0,c	;volatile
  7424                           
  7425                           ;MCAL_Layer/Interupt/mcal_external_interrupt.c: 483:     switch(FUNC_DETECTION){
  7426   0032AC  EF5A  F019         	goto	i2l4961
  7427   0032B0                     i2l4953:
  7428   0032B0  EF6F  F019         	goto	i2l716
  7429   0032B4                     i2l4961:
  7430   0032B4  5003               	movf	RB4_ISR@FUNC_DETECTION^0,w,c
  7431   0032B6  6E01               	movwf	??_RB4_ISR^0,c
  7432   0032B8  6A02               	clrf	(??_RB4_ISR+1)^0,c
  7433                           
  7434                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7435                           ; Switch size 1, requested type "simple"
  7436                           ; Number of cases is 1, Range of values is 0 to 0
  7437                           ; switch strategies available:
  7438                           ; Name         Instructions Cycles
  7439                           ; simple_byte            4     3 (average)
  7440                           ;	Chosen strategy is simple_byte
  7441   0032BA  5002               	movf	(??_RB4_ISR+1)^0,w,c
  7442   0032BC  0A00               	xorlw	0	; case 0
  7443   0032BE  B4D8               	btfsc	status,2,c
  7444   0032C0  EF64  F019         	goto	i2l6889
  7445   0032C4  EF6F  F019         	goto	i2l716
  7446   0032C8                     i2l6889:
  7447                           
  7448                           ; Switch size 1, requested type "simple"
  7449                           ; Number of cases is 2, Range of values is 0 to 1
  7450                           ; switch strategies available:
  7451                           ; Name         Instructions Cycles
  7452                           ; simple_byte            7     4 (average)
  7453                           ;	Chosen strategy is simple_byte
  7454   0032C8  5001               	movf	??_RB4_ISR^0,w,c
  7455   0032CA  0A00               	xorlw	0	; case 0
  7456   0032CC  B4D8               	btfsc	status,2,c
  7457   0032CE  EF58  F019         	goto	i2l4953
  7458   0032D2  0A01               	xorlw	1	; case 1
  7459   0032D4  B4D8               	btfsc	status,2,c
  7460   0032D6  EF58  F019         	goto	i2l4953
  7461   0032DA  EF6F  F019         	goto	i2l716
  7462   0032DE                     i2l716:
  7463   0032DE  0012               	return		;funcret
  7464   0032E0                     __end_of_RB4_ISR:
  7465                           	callstack 0
  7466                           
  7467 ;; *************** function _INT2_ISR *****************
  7468 ;; Defined at:
  7469 ;;		line 136 in file "MCAL_Layer/Interupt/mcal_external_interrupt.c"
  7470 ;; Parameters:    Size  Location     Type
  7471 ;;		None
  7472 ;; Auto vars:     Size  Location     Type
  7473 ;;		None
  7474 ;; Return value:  Size  Location     Type
  7475 ;;                  1    wreg      void 
  7476 ;; Registers used:
  7477 ;;		None
  7478 ;; Tracked objects:
  7479 ;;		On entry : 0/0
  7480 ;;		On exit  : 0/0
  7481 ;;		Unchanged: 0/0
  7482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7487 ;;Total ram usage:        0 bytes
  7488 ;; Hardware stack levels used: 1
  7489 ;; This function calls:
  7490 ;;		Nothing
  7491 ;; This function is called by:
  7492 ;;		_InterruptManagerHigh
  7493 ;; This function uses a non-reentrant model
  7494 ;;
  7495                           
  7496                           	psect	text45
  7497   00339A                     __ptext45:
  7498                           	callstack 0
  7499   00339A                     _INT2_ISR:
  7500                           	callstack 18
  7501   00339A                     
  7502                           ;MCAL_Layer/Interupt/mcal_external_interrupt.c: 137:     (INTCON3bits.INT2IF = 0);
  7503   00339A  92F0               	bcf	240,1,c	;volatile
  7504   00339C  0012               	return		;funcret
  7505   00339E                     __end_of_INT2_ISR:
  7506                           	callstack 0
  7507                           
  7508 ;; *************** function _INT1_ISR *****************
  7509 ;; Defined at:
  7510 ;;		line 126 in file "MCAL_Layer/Interupt/mcal_external_interrupt.c"
  7511 ;; Parameters:    Size  Location     Type
  7512 ;;		None
  7513 ;; Auto vars:     Size  Location     Type
  7514 ;;		None
  7515 ;; Return value:  Size  Location     Type
  7516 ;;                  1    wreg      void 
  7517 ;; Registers used:
  7518 ;;		None
  7519 ;; Tracked objects:
  7520 ;;		On entry : 0/0
  7521 ;;		On exit  : 0/0
  7522 ;;		Unchanged: 0/0
  7523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7528 ;;Total ram usage:        0 bytes
  7529 ;; Hardware stack levels used: 1
  7530 ;; This function calls:
  7531 ;;		Nothing
  7532 ;; This function is called by:
  7533 ;;		_InterruptManagerHigh
  7534 ;; This function uses a non-reentrant model
  7535 ;;
  7536                           
  7537                           	psect	text46
  7538   00339E                     __ptext46:
  7539                           	callstack 0
  7540   00339E                     _INT1_ISR:
  7541                           	callstack 18
  7542   00339E                     
  7543                           ;MCAL_Layer/Interupt/mcal_external_interrupt.c: 127:     (INTCON3bits.INT1IF = 0);
  7544   00339E  90F0               	bcf	240,0,c	;volatile
  7545   0033A0  0012               	return		;funcret
  7546   0033A2                     __end_of_INT1_ISR:
  7547                           	callstack 0
  7548                           
  7549 ;; *************** function _INT0_ISR *****************
  7550 ;; Defined at:
  7551 ;;		line 116 in file "MCAL_Layer/Interupt/mcal_external_interrupt.c"
  7552 ;; Parameters:    Size  Location     Type
  7553 ;;		None
  7554 ;; Auto vars:     Size  Location     Type
  7555 ;;		None
  7556 ;; Return value:  Size  Location     Type
  7557 ;;                  1    wreg      void 
  7558 ;; Registers used:
  7559 ;;		None
  7560 ;; Tracked objects:
  7561 ;;		On entry : 0/0
  7562 ;;		On exit  : 0/0
  7563 ;;		Unchanged: 0/0
  7564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7569 ;;Total ram usage:        0 bytes
  7570 ;; Hardware stack levels used: 1
  7571 ;; This function calls:
  7572 ;;		Nothing
  7573 ;; This function is called by:
  7574 ;;		_InterruptManagerHigh
  7575 ;; This function uses a non-reentrant model
  7576 ;;
  7577                           
  7578                           	psect	text47
  7579   0033A2                     __ptext47:
  7580                           	callstack 0
  7581   0033A2                     _INT0_ISR:
  7582                           	callstack 18
  7583   0033A2                     
  7584                           ;MCAL_Layer/Interupt/mcal_external_interrupt.c: 117:     (INTCONbits.INT0IF = 0);
  7585   0033A2  92F2               	bcf	242,1,c	;volatile
  7586   0033A4  0012               	return		;funcret
  7587   0033A6                     __end_of_INT0_ISR:
  7588                           	callstack 0
  7589                           
  7590 ;; *************** function _ADC_ISR *****************
  7591 ;; Defined at:
  7592 ;;		line 227 in file "MCAL_Layer/ADC/ADC.c"
  7593 ;; Parameters:    Size  Location     Type
  7594 ;;		None
  7595 ;; Auto vars:     Size  Location     Type
  7596 ;;		None
  7597 ;; Return value:  Size  Location     Type
  7598 ;;                  1    wreg      void 
  7599 ;; Registers used:
  7600 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7601 ;; Tracked objects:
  7602 ;;		On entry : 0/0
  7603 ;;		On exit  : 0/0
  7604 ;;		Unchanged: 0/0
  7605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7610 ;;Total ram usage:        0 bytes
  7611 ;; Hardware stack levels used: 1
  7612 ;; Hardware stack levels required when called: 2
  7613 ;; This function calls:
  7614 ;;		NULL
  7615 ;;		_Adc_interr
  7616 ;; This function is called by:
  7617 ;;		_InterruptManagerHigh
  7618 ;; This function uses a non-reentrant model
  7619 ;;
  7620                           
  7621                           	psect	text48
  7622   00334A                     __ptext48:
  7623                           	callstack 0
  7624   00334A                     _ADC_ISR:
  7625                           	callstack 16
  7626   00334A                     
  7627                           ;MCAL_Layer/ADC/ADC.c: 228:     (PIR1bits.ADIF = 0);
  7628   00334A  9C9E               	bcf	158,6,c	;volatile
  7629   00334C                     
  7630                           ;MCAL_Layer/ADC/ADC.c: 229:     if(ADC_InterruptHandler){
  7631   00334C  0100               	movlb	0	; () banked
  7632   00334E  51C1               	movf	_ADC_InterruptHandler& (0+255),w,b
  7633   003350  11C2               	iorwf	(_ADC_InterruptHandler+1)& (0+255),w,b
  7634   003352  B4D8               	btfsc	status,2,c
  7635   003354  EFAE  F019         	goto	i2u404_41
  7636   003358  EFB0  F019         	goto	i2u404_40
  7637   00335C                     i2u404_41:
  7638   00335C  EFBC  F019         	goto	i2l1090
  7639   003360                     i2u404_40:
  7640   003360                     
  7641                           ; BSR set to: 0
  7642                           ;MCAL_Layer/ADC/ADC.c: 230:         ADC_InterruptHandler();
  7643   003360  D802               	call	i2u405_48
  7644   003362  EFBC  F019         	goto	i2u405_49
  7645   003366                     i2u405_48:
  7646   003366  0005               	push	
  7647   003368  6EFA               	movwf	pclath,c
  7648   00336A  51C1               	movf	_ADC_InterruptHandler& (0+255),w,b
  7649   00336C  6EFD               	movwf	tosl,c
  7650   00336E  51C2               	movf	(_ADC_InterruptHandler+1)& (0+255),w,b
  7651   003370  6EFE               	movwf	tosh,c
  7652   003372  6AFF               	clrf	tosu,c
  7653   003374  50FA               	movf	pclath,w,c
  7654   003376  0012               	return		;indir
  7655   003378                     i2u405_49:
  7656   003378                     i2l1090:
  7657   003378  0012               	return		;funcret
  7658   00337A                     __end_of_ADC_ISR:
  7659                           	callstack 0
  7660                           
  7661 ;; *************** function _Adc_interr *****************
  7662 ;; Defined at:
  7663 ;;		line 140 in file "Application.c"
  7664 ;; Parameters:    Size  Location     Type
  7665 ;;		None
  7666 ;; Auto vars:     Size  Location     Type
  7667 ;;		None
  7668 ;; Return value:  Size  Location     Type
  7669 ;;                  1    wreg      void 
  7670 ;; Registers used:
  7671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7672 ;; Tracked objects:
  7673 ;;		On entry : 0/0
  7674 ;;		On exit  : 0/0
  7675 ;;		Unchanged: 0/0
  7676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7681 ;;Total ram usage:        0 bytes
  7682 ;; Hardware stack levels used: 1
  7683 ;; Hardware stack levels required when called: 1
  7684 ;; This function calls:
  7685 ;;		_ADC_GetConversionResult
  7686 ;; This function is called by:
  7687 ;;		_ADC_ISR
  7688 ;; This function uses a non-reentrant model
  7689 ;;
  7690                           
  7691                           	psect	text49
  7692   002EA0                     __ptext49:
  7693                           	callstack 0
  7694   002EA0                     _Adc_interr:
  7695                           	callstack 16
  7696   002EA0                     
  7697                           ;Application.c: 141:     if(0 == Prog_counter){
  7698   002EA0  505D               	movf	_Prog_counter^0,w,c	;volatile
  7699   002EA2  A4D8               	btfss	status,2,c
  7700   002EA4  EF56  F017         	goto	i2u382_41
  7701   002EA8  EF58  F017         	goto	i2u382_40
  7702   002EAC                     i2u382_41:
  7703   002EAC  EF68  F017         	goto	i2l4699
  7704   002EB0                     i2u382_40:
  7705   002EB0                     
  7706                           ;Application.c: 142:             ret = ADC_GetConversionResult(&ADC_1 , &ADC_1_Result);
  7707   002EB0  0EA6               	movlw	low _ADC_1
  7708   002EB2  6E01               	movwf	ADC_GetConversionResult@Adc_^0,c
  7709   002EB4  0E00               	movlw	high _ADC_1
  7710   002EB6  6E02               	movwf	(ADC_GetConversionResult@Adc_+1)^0,c
  7711   002EB8  0E67               	movlw	low _ADC_1_Result
  7712   002EBA  6E03               	movwf	ADC_GetConversionResult@Result^0,c
  7713   002EBC  0E00               	movlw	high _ADC_1_Result
  7714   002EBE  6E04               	movwf	(ADC_GetConversionResult@Result+1)^0,c
  7715   002EC0  EC33  F014         	call	_ADC_GetConversionResult	;wreg free
  7716   002EC4  0100               	movlb	0	; () banked
  7717   002EC6  6FFF               	movwf	_ret& (0+255),b
  7718   002EC8                     
  7719                           ; BSR set to: 0
  7720                           ;Application.c: 143:             Prog_counter = 1;
  7721   002EC8  0E01               	movlw	1
  7722   002ECA  6E5D               	movwf	_Prog_counter^0,c	;volatile
  7723                           
  7724                           ;Application.c: 144:         }
  7725   002ECC  EF7E  F017         	goto	i2l961
  7726   002ED0                     i2l4699:
  7727   002ED0  045D               	decf	_Prog_counter^0,w,c	;volatile
  7728   002ED2  A4D8               	btfss	status,2,c
  7729   002ED4  EF6E  F017         	goto	i2u383_41
  7730   002ED8  EF70  F017         	goto	i2u383_40
  7731   002EDC                     i2u383_41:
  7732   002EDC  EF7E  F017         	goto	i2l961
  7733   002EE0                     i2u383_40:
  7734   002EE0                     
  7735                           ;Application.c: 146:             ret = ADC_GetConversionResult(&ADC_1 , &ADC_2_Result);
  7736   002EE0  0EA6               	movlw	low _ADC_1
  7737   002EE2  6E01               	movwf	ADC_GetConversionResult@Adc_^0,c
  7738   002EE4  0E00               	movlw	high _ADC_1
  7739   002EE6  6E02               	movwf	(ADC_GetConversionResult@Adc_+1)^0,c
  7740   002EE8  0E65               	movlw	low _ADC_2_Result
  7741   002EEA  6E03               	movwf	ADC_GetConversionResult@Result^0,c
  7742   002EEC  0E00               	movlw	high _ADC_2_Result
  7743   002EEE  6E04               	movwf	(ADC_GetConversionResult@Result+1)^0,c
  7744   002EF0  EC33  F014         	call	_ADC_GetConversionResult	;wreg free
  7745   002EF4  0100               	movlb	0	; () banked
  7746   002EF6  6FFF               	movwf	_ret& (0+255),b
  7747   002EF8                     
  7748                           ; BSR set to: 0
  7749                           ;Application.c: 147:             Prog_counter = 0;
  7750   002EF8  0E00               	movlw	0
  7751   002EFA  6E5D               	movwf	_Prog_counter^0,c	;volatile
  7752   002EFC                     i2l961:
  7753   002EFC  0012               	return		;funcret
  7754   002EFE                     __end_of_Adc_interr:
  7755                           	callstack 0
  7756                           
  7757 ;; *************** function _ADC_GetConversionResult *****************
  7758 ;; Defined at:
  7759 ;;		line 124 in file "MCAL_Layer/ADC/ADC.c"
  7760 ;; Parameters:    Size  Location     Type
  7761 ;;  Adc_            2    0[COMRAM] PTR struct .
  7762 ;;		 -> ADC_1(7), 
  7763 ;;  Result          2    2[COMRAM] PTR unsigned short 
  7764 ;;		 -> ADC_2_Result(2), ADC_1_Result(2), 
  7765 ;; Auto vars:     Size  Location     Type
  7766 ;;  ret             1    0        unsigned char 
  7767 ;; Return value:  Size  Location     Type
  7768 ;;                  1    wreg      unsigned char 
  7769 ;; Registers used:
  7770 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7771 ;; Tracked objects:
  7772 ;;		On entry : 0/0
  7773 ;;		On exit  : 0/0
  7774 ;;		Unchanged: 0/0
  7775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7776 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7778 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7779 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7780 ;;Total ram usage:        7 bytes
  7781 ;; Hardware stack levels used: 1
  7782 ;; This function calls:
  7783 ;;		Nothing
  7784 ;; This function is called by:
  7785 ;;		_Adc_interr
  7786 ;;		_ADC_GetConversion_Blocking
  7787 ;; This function uses a non-reentrant model
  7788 ;;
  7789                           
  7790                           	psect	text50
  7791   002866                     __ptext50:
  7792                           	callstack 0
  7793   002866                     _ADC_GetConversionResult:
  7794                           	callstack 16
  7795   002866                     
  7796                           ;MCAL_Layer/ADC/ADC.c: 128:     if(Adc_ == ((void*)0) || (((void*)0) ==Result)){
  7797   002866  5001               	movf	ADC_GetConversionResult@Adc_^0,w,c
  7798   002868  1002               	iorwf	(ADC_GetConversionResult@Adc_+1)^0,w,c
  7799   00286A  B4D8               	btfsc	status,2,c
  7800   00286C  EF3A  F014         	goto	i2u361_41
  7801   002870  EF3C  F014         	goto	i2u361_40
  7802   002874                     i2u361_41:
  7803   002874  EF45  F014         	goto	i2l4509
  7804   002878                     i2u361_40:
  7805   002878  5003               	movf	ADC_GetConversionResult@Result^0,w,c
  7806   00287A  1004               	iorwf	(ADC_GetConversionResult@Result+1)^0,w,c
  7807   00287C  A4D8               	btfss	status,2,c
  7808   00287E  EF43  F014         	goto	i2u362_41
  7809   002882  EF45  F014         	goto	i2u362_40
  7810   002886                     i2u362_41:
  7811   002886  EF47  F014         	goto	i2l4511
  7812   00288A                     i2u362_40:
  7813   00288A                     i2l4509:
  7814                           
  7815                           ;MCAL_Layer/ADC/ADC.c: 130:     }
  7816   00288A  EF8F  F014         	goto	i2l4521
  7817   00288E                     i2l4511:
  7818                           
  7819                           ;MCAL_Layer/ADC/ADC.c: 132:         if(0x01U == Adc_->RESULT_FORMAT){
  7820   00288E  EE20 F006          	lfsr	2,6
  7821   002892  5001               	movf	ADC_GetConversionResult@Adc_^0,w,c
  7822   002894  26D9               	addwf	fsr2l,f,c
  7823   002896  5002               	movf	(ADC_GetConversionResult@Adc_+1)^0,w,c
  7824   002898  22DA               	addwfc	fsr2h,f,c
  7825   00289A  A2DF               	btfss	indf2,1,c
  7826   00289C  EF52  F014         	goto	i2u363_41
  7827   0028A0  EF54  F014         	goto	i2u363_40
  7828   0028A4                     i2u363_41:
  7829   0028A4  EF68  F014         	goto	i2l4515
  7830   0028A8                     i2u363_40:
  7831   0028A8                     i2l4513:
  7832                           
  7833                           ;MCAL_Layer/ADC/ADC.c: 133:             *Result = (uint16)((ADRESH << 8) + ADRESL);
  7834   0028A8  50C3               	movf	195,w,c	;volatile
  7835   0028AA  CFC4 F005          	movff	4036,??_ADC_GetConversionResult	;volatile
  7836   0028AE  6A06               	clrf	(??_ADC_GetConversionResult+1)^0,c
  7837   0028B0  C005  F006         	movff	??_ADC_GetConversionResult,??_ADC_GetConversionResult+1
  7838   0028B4  6A05               	clrf	??_ADC_GetConversionResult^0,c
  7839   0028B6  2605               	addwf	??_ADC_GetConversionResult^0,f,c
  7840   0028B8  0E00               	movlw	0
  7841   0028BA  2206               	addwfc	(??_ADC_GetConversionResult+1)^0,f,c
  7842   0028BC  C003  FFD9         	movff	ADC_GetConversionResult@Result,fsr2l
  7843   0028C0  C004  FFDA         	movff	ADC_GetConversionResult@Result+1,fsr2h
  7844   0028C4  C005  FFDE         	movff	??_ADC_GetConversionResult,postinc2
  7845   0028C8  C006  FFDD         	movff	??_ADC_GetConversionResult+1,postdec2
  7846                           
  7847                           ;MCAL_Layer/ADC/ADC.c: 134:         }
  7848   0028CC  EF8F  F014         	goto	i2l4521
  7849   0028D0                     i2l4515:
  7850   0028D0  EE20 F006          	lfsr	2,6
  7851   0028D4  5001               	movf	ADC_GetConversionResult@Adc_^0,w,c
  7852   0028D6  26D9               	addwf	fsr2l,f,c
  7853   0028D8  5002               	movf	(ADC_GetConversionResult@Adc_+1)^0,w,c
  7854   0028DA  22DA               	addwfc	fsr2h,f,c
  7855   0028DC  B2DF               	btfsc	indf2,1,c
  7856   0028DE  EF73  F014         	goto	i2u364_41
  7857   0028E2  EF75  F014         	goto	i2u364_40
  7858   0028E6                     i2u364_41:
  7859   0028E6  EF54  F014         	goto	i2l4513
  7860   0028EA                     i2u364_40:
  7861   0028EA                     
  7862                           ;MCAL_Layer/ADC/ADC.c: 136:             *Result = (uint16)(((ADRESH << 8) + ADRESL) >> 6
      +                          );
  7863   0028EA  50C3               	movf	195,w,c	;volatile
  7864   0028EC  CFC4 F005          	movff	4036,??_ADC_GetConversionResult	;volatile
  7865   0028F0  6A06               	clrf	(??_ADC_GetConversionResult+1)^0,c
  7866   0028F2  C005  F006         	movff	??_ADC_GetConversionResult,??_ADC_GetConversionResult+1
  7867   0028F6  6A05               	clrf	??_ADC_GetConversionResult^0,c
  7868   0028F8  2605               	addwf	??_ADC_GetConversionResult^0,f,c
  7869   0028FA  0E00               	movlw	0
  7870   0028FC  2206               	addwfc	(??_ADC_GetConversionResult+1)^0,f,c
  7871   0028FE  0E06               	movlw	6
  7872   002900  6E07               	movwf	(??_ADC_GetConversionResult+2)^0,c
  7873   002902                     i2u365_45:
  7874   002902  3406               	rlcf	(??_ADC_GetConversionResult+1)^0,w,c
  7875   002904  3206               	rrcf	(??_ADC_GetConversionResult+1)^0,f,c
  7876   002906  3205               	rrcf	??_ADC_GetConversionResult^0,f,c
  7877   002908  2E07               	decfsz	(??_ADC_GetConversionResult+2)^0,f,c
  7878   00290A  EF81  F014         	goto	i2u365_45
  7879   00290E  C003  FFD9         	movff	ADC_GetConversionResult@Result,fsr2l
  7880   002912  C004  FFDA         	movff	ADC_GetConversionResult@Result+1,fsr2h
  7881   002916  C005  FFDE         	movff	??_ADC_GetConversionResult,postinc2
  7882   00291A  C006  FFDD         	movff	??_ADC_GetConversionResult+1,postdec2
  7883   00291E                     i2l4521:
  7884                           
  7885                           ;MCAL_Layer/ADC/ADC.c: 143:     return ret;
  7886   00291E  0E01               	movlw	1
  7887   002920  0012               	return		;funcret
  7888   002922                     __end_of_ADC_GetConversionResult:
  7889                           	callstack 0
  7890                           
  7891                           	psect	text51
  7892   000000                     __ptext51:
  7893                           	callstack 0
  7894   000000                     
  7895                           	psect	rparam
  7896   000000                     
  7897                           	psect	temp
  7898   00006D                     btemp:
  7899                           	callstack 0
  7900   00006D                     	ds	1
  7901   000000                     int$flags	set	btemp
  7902   000000                     wtemp8	set	btemp+1
  7903   000000                     ttemp5	set	btemp+1
  7904   000000                     ttemp6	set	btemp+4
  7905   000000                     ttemp7	set	btemp+8
  7906                           
  7907                           	psect	config
  7908                           
  7909                           ; Padding undefined space
  7910   300000                     	org	3145728
  7911   300000  FF                 	db	255
  7912                           
  7913                           ;Config register CONFIG1H @ 0x300001
  7914                           ;	Oscillator Selection bits
  7915                           ;	OSC = HS, HS oscillator
  7916                           ;	Fail-Safe Clock Monitor Enable bit
  7917                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7918                           ;	Internal/External Oscillator Switchover bit
  7919                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7920   300001                     	org	3145729
  7921   300001  02                 	db	2
  7922                           
  7923                           ;Config register CONFIG2L @ 0x300002
  7924                           ;	Power-up Timer Enable bit
  7925                           ;	PWRT = OFF, PWRT disabled
  7926                           ;	Brown-out Reset Enable bits
  7927                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  7928                           ;	Brown Out Reset Voltage bits
  7929                           ;	BORV = 1, 
  7930   300002                     	org	3145730
  7931   300002  09                 	db	9
  7932                           
  7933                           ;Config register CONFIG2H @ 0x300003
  7934                           ;	Watchdog Timer Enable bit
  7935                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  7936                           ;	Watchdog Timer Postscale Select bits
  7937                           ;	WDTPS = 512, 1:512
  7938   300003                     	org	3145731
  7939   300003  12                 	db	18
  7940                           
  7941                           ; Padding undefined space
  7942   300004                     	org	3145732
  7943   300004  FF                 	db	255
  7944                           
  7945                           ;Config register CONFIG3H @ 0x300005
  7946                           ;	CCP2 MUX bit
  7947                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  7948                           ;	PORTB A/D Enable bit
  7949                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  7950                           ;	Low-Power Timer1 Oscillator Enable bit
  7951                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  7952                           ;	MCLR Pin Enable bit
  7953                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  7954   300005                     	org	3145733
  7955   300005  81                 	db	129
  7956                           
  7957                           ;Config register CONFIG4L @ 0x300006
  7958                           ;	Stack Full/Underflow Reset Enable bit
  7959                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7960                           ;	Single-Supply ICSP Enable bit
  7961                           ;	LVP = OFF, Single-Supply ICSP disabled
  7962                           ;	Extended Instruction Set Enable bit
  7963                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7964                           ;	Background Debugger Enable bit
  7965                           ;	DEBUG = 0x1, unprogrammed default
  7966   300006                     	org	3145734
  7967   300006  81                 	db	129
  7968                           
  7969                           ; Padding undefined space
  7970   300007                     	org	3145735
  7971   300007  FF                 	db	255
  7972                           
  7973                           ;Config register CONFIG5L @ 0x300008
  7974                           ;	Code Protection bit
  7975                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  7976                           ;	Code Protection bit
  7977                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  7978                           ;	Code Protection bit
  7979                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  7980                           ;	Code Protection bit
  7981                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  7982   300008                     	org	3145736
  7983   300008  0F                 	db	15
  7984                           
  7985                           ;Config register CONFIG5H @ 0x300009
  7986                           ;	Boot Block Code Protection bit
  7987                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  7988                           ;	Data EEPROM Code Protection bit
  7989                           ;	CPD = OFF, Data EEPROM not code-protected
  7990   300009                     	org	3145737
  7991   300009  C0                 	db	192
  7992                           
  7993                           ;Config register CONFIG6L @ 0x30000A
  7994                           ;	Write Protection bit
  7995                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  7996                           ;	Write Protection bit
  7997                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  7998                           ;	Write Protection bit
  7999                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  8000                           ;	Write Protection bit
  8001                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  8002   30000A                     	org	3145738
  8003   30000A  0F                 	db	15
  8004                           
  8005                           ;Config register CONFIG6H @ 0x30000B
  8006                           ;	Configuration Register Write Protection bit
  8007                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  8008                           ;	Boot Block Write Protection bit
  8009                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  8010                           ;	Data EEPROM Write Protection bit
  8011                           ;	WRTD = OFF, Data EEPROM not write-protected
  8012   30000B                     	org	3145739
  8013   30000B  E0                 	db	224
  8014                           
  8015                           ;Config register CONFIG7L @ 0x30000C
  8016                           ;	Table Read Protection bit
  8017                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  8018                           ;	Table Read Protection bit
  8019                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  8020                           ;	Table Read Protection bit
  8021                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  8022                           ;	Table Read Protection bit
  8023                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  8024   30000C                     	org	3145740
  8025   30000C  0F                 	db	15
  8026                           
  8027                           ;Config register CONFIG7H @ 0x30000D
  8028                           ;	Boot Block Table Read Protection bit
  8029                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  8030   30000D                     	org	3145741
  8031   30000D  40                 	db	64
  8032                           tosu	equ	0xFFF
  8033                           tosh	equ	0xFFE
  8034                           tosl	equ	0xFFD
  8035                           stkptr	equ	0xFFC
  8036                           pclatu	equ	0xFFB
  8037                           pclath	equ	0xFFA
  8038                           pcl	equ	0xFF9
  8039                           tblptru	equ	0xFF8
  8040                           tblptrh	equ	0xFF7
  8041                           tblptrl	equ	0xFF6
  8042                           tablat	equ	0xFF5
  8043                           prodh	equ	0xFF4
  8044                           prodl	equ	0xFF3
  8045                           indf0	equ	0xFEF
  8046                           postinc0	equ	0xFEE
  8047                           postdec0	equ	0xFED
  8048                           preinc0	equ	0xFEC
  8049                           plusw0	equ	0xFEB
  8050                           fsr0h	equ	0xFEA
  8051                           fsr0l	equ	0xFE9
  8052                           wreg	equ	0xFE8
  8053                           indf1	equ	0xFE7
  8054                           postinc1	equ	0xFE6
  8055                           postdec1	equ	0xFE5
  8056                           preinc1	equ	0xFE4
  8057                           plusw1	equ	0xFE3
  8058                           fsr1h	equ	0xFE2
  8059                           fsr1l	equ	0xFE1
  8060                           bsr	equ	0xFE0
  8061                           indf2	equ	0xFDF
  8062                           postinc2	equ	0xFDE
  8063                           postdec2	equ	0xFDD
  8064                           preinc2	equ	0xFDC
  8065                           plusw2	equ	0xFDB
  8066                           fsr2h	equ	0xFDA
  8067                           fsr2l	equ	0xFD9
  8068                           status	equ	0xFD8

Data Sizes:
    Strings     29
    Constant    16
    Data        59
    BSS         95
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     87     108
    BANK0           128     26     128
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2805$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 6
		 -> number_16bit_to_string@Temp_String(BANK0[6]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S2752$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2752$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 6
		 -> TEMP_2_txt(BANK0[6]), TEMP_1_txt(BANK0[6]), 

    memset@s	PTR unsigned char  size(2) Largest target is 6
		 -> TEMP_2_txt(BANK0[6]), TEMP_1_txt(BANK0[6]), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Adc_interr(), NULL(), 

    Interrupt_Init@Adc_.ADC_INTERRUPT	PTR FTN()void  size(2) Largest target is 1
		 -> Adc_interr(), 

    Interrupt_Init@Adc_	PTR struct . size(2) Largest target is 7
		 -> ADC_1(BANK0[7]), 

    ADC_StartConversion_Interrupt@Adc_	PTR struct . size(2) Largest target is 7
		 -> ADC_1(BANK0[7]), 

    ADC_GetConversionResult@Adc_.ADC_INTERRUPT	PTR FTN()void  size(2) Largest target is 1
		 -> Adc_interr(), 

    ADC_GetConversionResult@Result	PTR unsigned short  size(2) Largest target is 2
		 -> ADC_2_Result(COMRAM[2]), ADC_1_Result(COMRAM[2]), 

    ADC_GetConversionResult@Adc_	PTR struct . size(2) Largest target is 7
		 -> ADC_1(BANK0[7]), 

    ADC_Select_Channel@Adc_	PTR struct . size(2) Largest target is 7
		 -> ADC_1(BANK0[7]), 

    ADC_Start_Conversion_Func@Adc_	PTR struct . size(2) Largest target is 7
		 -> ADC_1(BANK0[7]), 

    ADC_Initialize@Adc_.ADC_INTERRUPT	PTR FTN()void  size(2) Largest target is 1
		 -> Adc_interr(), 

    ADC_Initialize@Adc_	PTR struct . size(2) Largest target is 7
		 -> ADC_1(BANK0[7]), 

    S1793$ADC_INTERRUPT	PTR FTN()void  size(2) Largest target is 1
		 -> Adc_interr(), 

    ADC_1.ADC_INTERRUPT	PTR FTN()void  size(2) Largest target is 1
		 -> Adc_interr(), 

    EXT_RBX_Function_Initialize@RB_X.EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    EXT_RBX_Function_Initialize@RB_X.EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    EXT_RBX_Prioity_Set@RB_X.EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    EXT_RBX_Prioity_Set@RB_X.EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    EXT_RBX_Pin_Initialize@RB_X.EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    EXT_RBX_Pin_Initialize@RB_X.EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    S1173$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    EXT_RBX_Enable@RB_X.EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    S1173$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    EXT_RBX_Enable@RB_X.EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    RB7_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EXT_INTX_Function_Initialize@INT_X.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EXT_INTX_Pin_Initialize@INT_X.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EXT_INTX_Prioity_Set@INT_X.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EXT_INTX_Edge_Set@INT_X.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EXT_INTX_Clear_Flag@INT_X.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EXT_INTX_Disable_Helper@INT_X.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S930$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EXT_INTX_Enable@INT_X.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    gpio_pin_intialize@str	PTR const struct . size(2) Largest target is 6
		 -> lcd_1.DATA_BITS(BANK0[4]), lcd_1(BANK0[6]), relay_initialize@rel_pin(COMRAM[1]), led_intialize@LED_IN(COMRAM[1]), 

    gpio_pin_write_logic@str	PTR const struct . size(2) Largest target is 6
		 -> moto_2.motor_pins(BANK0[2]), moto_2(BANK0[2]), moto_1.motor_pins(BANK0[2]), moto_1(BANK0[2]), 
		 -> lcd_1.DATA_BITS(BANK0[4]), lcd_1(BANK0[6]), relay_off@rel_pin(COMRAM[1]), relay_on@rel_pin(COMRAM[1]), 
		 -> relay_initialize@rel_pin(COMRAM[1]), led_turn_off@LED_IN(COMRAM[1]), led_turn_on@LED_IN(COMRAM[1]), led_intialize@LED_IN(COMRAM[1]), 

    gpio_pin_direction_intialize@str	PTR const struct . size(2) Largest target is 6
		 -> moto_2.motor_pins(BANK0[2]), moto_2(BANK0[2]), moto_1.motor_pins(BANK0[2]), moto_1(BANK0[2]), 
		 -> lcd_1.DATA_BITS(BANK0[4]), lcd_1(BANK0[6]), relay_initialize@rel_pin(COMRAM[1]), led_intialize@LED_IN(COMRAM[1]), 

    PORT_REG	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRllll[1]), PORTD(BITBIGSFRllll[1]), PORTC(BITBIGSFRllll[1]), PORTB(BITBIGSFRllll[1]), 
		 -> PORTA(BITBIGSFRllll[1]), 

    TRIS_REG	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRlllhhl[1]), TRISD(BITBIGSFRlllhhl[1]), TRISC(BITBIGSFRlllhhl[1]), TRISB(BITBIGSFRlllhhl[1]), 
		 -> TRISA(BITBIGSFRlllhl[1]), 

    LAT_REG	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlllhl[1]), LATD(BITBIGSFRlllhl[1]), LATC(BITBIGSFRlllhl[1]), LATB(BITBIGSFRlllhl[1]), 
		 -> LATA(BITBIGSFRllll[1]), 

    dc_motor_stop@motor_config	PTR struct . size(2) Largest target is 2
		 -> moto_2(BANK0[2]), moto_1(BANK0[2]), 

    dc_motor_move_forward@motor_config	PTR struct . size(2) Largest target is 2
		 -> moto_2(BANK0[2]), moto_1(BANK0[2]), 

    dc_motor_initialize@motor_config	PTR struct . size(2) Largest target is 2
		 -> moto_2(BANK0[2]), moto_1(BANK0[2]), 

    number_16bit_to_string@str	PTR unsigned char  size(2) Largest target is 6
		 -> TEMP_2_txt(BANK0[6]), TEMP_1_txt(BANK0[6]), 

    sp__memset	PTR void  size(2) Largest target is 6
		 -> TEMP_2_txt(BANK0[6]), TEMP_1_txt(BANK0[6]), 

    send_4bits@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    enable_pin_4bits@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bits_set_cursor@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bits_send_string_pos@data	PTR unsigned char  size(2) Largest target is 9
		 -> STR_6(CODE[7]), STR_5(CODE[7]), STR_4(CODE[9]), TEMP_2_txt(BANK0[6]), 
		 -> TEMP_1_txt(BANK0[6]), 

    lcd_4bits_send_string_pos@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bits_send_string@data	PTR unsigned char  size(2) Largest target is 9
		 -> STR_6(CODE[7]), STR_5(CODE[7]), STR_4(CODE[9]), TEMP_2_txt(BANK0[6]), 
		 -> TEMP_1_txt(BANK0[6]), 

    lcd_4bits_send_string@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bits_send_char@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bits_send_command@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bits_initialze@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(BANK0[6]), 


Critical Paths under _main in COMRAM

    _number_16bit_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _lcd_4bits_send_string_pos->_lcd_4bits_set_cursor
    _lcd_4bits_set_cursor->_lcd_4bits_send_command
    _lcd_4bits_send_string->_lcd_4bits_send_char
    _lcd_4bits_send_char->_send_4bits
    _lcd_4bits_initialze->_lcd_4bits_send_command
    _lcd_4bits_send_command->_send_4bits
    _send_4bits->_gpio_pin_write_logic
    _enable_pin_4bits->_gpio_pin_write_logic
    _gpio_pin_intialize->_gpio_pin_write_logic
    _dc_motor_stop->_gpio_pin_write_logic
    _dc_motor_move_forward->_gpio_pin_write_logic
    _dc_motor_initialize->_gpio_pin_direction_intialize
    ___fltol->___flmul
    ___flmul->___xxtofl
    _ADC_StartConversion_Interrupt->_ADC_Select_Channel
    _ADC_Select_Channel->_Pins_Configration_Func
    _ADC_Initialize->_Interrupt_Init
    _ADC_Initialize->_Pins_Configration_Func

Critical Paths under _LOW_PRIORITY_INTERRUPTS in COMRAM

    _LOW_PRIORITY_INTERRUPTS->_RB7_ISR

Critical Paths under _InterruptManagerHigh in COMRAM

    _Adc_interr->_ADC_GetConversionResult

Critical Paths under _main in BANK0

    _main->_number_16bit_to_string
    _number_16bit_to_string->_sprintf

Critical Paths under _LOW_PRIORITY_INTERRUPTS in BANK0

    None.

Critical Paths under _InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LOW_PRIORITY_INTERRUPTS in BANK1

    None.

Critical Paths under _InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LOW_PRIORITY_INTERRUPTS in BANK2

    None.

Critical Paths under _InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LOW_PRIORITY_INTERRUPTS in BANK3

    None.

Critical Paths under _InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LOW_PRIORITY_INTERRUPTS in BANK4

    None.

Critical Paths under _InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LOW_PRIORITY_INTERRUPTS in BANK5

    None.

Critical Paths under _InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LOW_PRIORITY_INTERRUPTS in BANK6

    None.

Critical Paths under _InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LOW_PRIORITY_INTERRUPTS in BANK7

    None.

Critical Paths under _InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LOW_PRIORITY_INTERRUPTS in BANK8

    None.

Critical Paths under _InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LOW_PRIORITY_INTERRUPTS in BANK9

    None.

Critical Paths under _InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LOW_PRIORITY_INTERRUPTS in BANK10

    None.

Critical Paths under _InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LOW_PRIORITY_INTERRUPTS in BANK11

    None.

Critical Paths under _InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LOW_PRIORITY_INTERRUPTS in BANK12

    None.

Critical Paths under _InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LOW_PRIORITY_INTERRUPTS in BANK13

    None.

Critical Paths under _InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _LOW_PRIORITY_INTERRUPTS in BANK14

    None.

Critical Paths under _InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _LOW_PRIORITY_INTERRUPTS in BANK15

    None.

Critical Paths under _InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   88688
                     _ADC_Initialize
      _ADC_StartConversion_Interrupt
                            ___flmul
                            ___fltol
                            ___lwdiv
                           ___xxtofl
                _dc_motor_initialize
              _dc_motor_move_forward
                      _dc_motor_stop
                _lcd_4bits_initialze
          _lcd_4bits_send_string_pos
             _number_16bit_to_string
 ---------------------------------------------------------------------------------
 (1) _number_16bit_to_string                              12     8      4    9810
                                             14 BANK0     12     8      4
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             24    16      8    7642
                                             79 COMRAM     8     0      8
                                              0 BANK0     14    14      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6796
                                             71 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           19    13      6    6335
                                             57 COMRAM    14     8      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                13     9      4    4768
                                             44 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2533
                                             33 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1177
                                             26 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     857
                                             17 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             23 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                             17 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                             17 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6    1403
                                             17 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (1) _lcd_4bits_send_string_pos                            7     1      6   37446
                                             41 COMRAM     7     1      6
              _lcd_4bits_send_string
               _lcd_4bits_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bits_set_cursor                                 7     3      4   18937
                                             35 COMRAM     6     2      4
             _lcd_4bits_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bits_send_string                                5     1      4   16831
                                             35 COMRAM     5     1      4
                _lcd_4bits_send_char
 ---------------------------------------------------------------------------------
 (3) _lcd_4bits_send_char                                  4     1      3   16565
                                             31 COMRAM     4     1      3
                   _enable_pin_4bits
               _gpio_pin_write_logic
                         _send_4bits
 ---------------------------------------------------------------------------------
 (1) _lcd_4bits_initialze                                  5     3      2   25452
                                             35 COMRAM     5     3      2
                 _gpio_pin_intialize
             _lcd_4bits_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bits_send_command                               4     1      3   18237
                                             31 COMRAM     4     1      3
                   _enable_pin_4bits
               _gpio_pin_write_logic
                         _send_4bits
 ---------------------------------------------------------------------------------
 (4) _send_4bits                                           5     2      3    5726
                                             26 COMRAM     5     2      3
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _enable_pin_4bits                                     4     2      2    5287
                                             26 COMRAM     4     2      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_intialize                                   4     2      2    6748
                                             26 COMRAM     4     2      2
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_stop                                        3     1      2    5135
                                             26 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_forward                                3     1      2    5135
                                             26 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                10     7      3    4891
                                             17 COMRAM     9     6      3
 ---------------------------------------------------------------------------------
 (1) _dc_motor_initialize                                  3     1      2     977
                                             25 COMRAM     3     1      2
       _gpio_pin_direction_intialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_intialize                         9     7      2     733
                                             17 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                             17 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     466
                                             17 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     381
                                             56 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    1896
                                             31 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion_Interrupt                        4     1      3    1032
                                             24 COMRAM     4     1      3
                 _ADC_Select_Channel
          _ADC_Start_Conversion_Func
 ---------------------------------------------------------------------------------
 (2) _ADC_Start_Conversion_Func                            3     1      2     198
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Select_Channel                                   5     2      3     416
                                             20 COMRAM     4     1      3
             _Pins_Configration_Func
 ---------------------------------------------------------------------------------
 (1) _ADC_Initialize                                       4     2      2     484
                                             20 COMRAM     3     1      2
                     _Interrupt_Init
             _Pins_Configration_Func
 ---------------------------------------------------------------------------------
 (3) _Pins_Configration_Func                               3     3      0      22
                                             17 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Interrupt_Init                                       3     1      2     142
                                             17 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _LOW_PRIORITY_INTERRUPTS                             3     3      0      22
                                             14 COMRAM     3     3      0
                            _RB7_ISR
 ---------------------------------------------------------------------------------
 (11) _RB7_ISR                                             3     3      0      22
                                             11 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _InterruptManagerHigh                                4     4      0     722
                                              7 COMRAM     4     4      0
                            _ADC_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                          i2_RB7_ISR
 ---------------------------------------------------------------------------------
 (13) i2_RB7_ISR                                           3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (13) _RB6_ISR                                             3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (13) _RB5_ISR                                             3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (13) _RB4_ISR                                             3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (13) _INT2_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _INT1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _INT0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _ADC_ISR                                             0     0      0     634
                                NULL *
                         _Adc_interr *
 ---------------------------------------------------------------------------------
 (14) _Adc_interr                                          0     0      0     634
            _ADC_GetConversionResult
 ---------------------------------------------------------------------------------
 (15) _ADC_GetConversionResult                             8     4      4     634
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (14) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Initialize
     _Interrupt_Init
     _Pins_Configration_Func
   _ADC_StartConversion_Interrupt
     _ADC_Select_Channel
       _Pins_Configration_Func
     _ADC_Start_Conversion_Func
   ___flmul
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
     ___xxtofl (ARG)
   ___lwdiv
   ___xxtofl
   _dc_motor_initialize
     _gpio_pin_direction_intialize
   _dc_motor_move_forward
     _gpio_pin_write_logic
   _dc_motor_stop
     _gpio_pin_write_logic
   _lcd_4bits_initialze
     _gpio_pin_intialize
       _gpio_pin_direction_intialize
       _gpio_pin_write_logic
     _lcd_4bits_send_command
       _enable_pin_4bits
         _gpio_pin_write_logic
       _gpio_pin_write_logic
       _send_4bits
         _gpio_pin_write_logic
   _lcd_4bits_send_string_pos
     _lcd_4bits_send_string
       _lcd_4bits_send_char
         _enable_pin_4bits
         _gpio_pin_write_logic
         _send_4bits
     _lcd_4bits_set_cursor
       _lcd_4bits_send_command
   _number_16bit_to_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc

 _LOW_PRIORITY_INTERRUPTS (ROOT)
   _RB7_ISR

 _InterruptManagerHigh (ROOT)
   _ADC_ISR
     NULL(Fake) *
     _Adc_interr *
       _ADC_GetConversionResult
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   i2_RB7_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      45        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     1A      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     57      6C       1       85.7%
BITBIGSFRlhlh       1F      0       0      37        0.0%
BITBIGSFRlhlll      15      0       0      39        0.0%
BITBIGSFRh           D      0       0      36        0.0%
BITBIGSFRlhllhh      B      0       0      38        0.0%
BITBIGSFRlllhhh      6      0       0      40        0.0%
BITBIGSFRlllhhl      6      0       0      41        0.0%
BITBIGSFRlllhl       4      0       0      42        0.0%
BITBIGSFRllll        4      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10C      44        0.0%
DATA                 0      0     10C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Sep 26 02:39:17 2023

                     ??_Interrupt_Init 0014                             _Adc_interr 2EA0  
                                   l92 20E0                                     l97 2CF4  
                         ___awdiv@sign 0017                                     bsr 0FE0  
                                  l102 2C7E                                    l120 303A  
                                  l115 2B06                                    l144 2F52  
                                  l225 2864              _lcd_4bits_send_string_pos 2FF4  
                                  l411 231E                                    l139 2A7C  
                                  l149 2B8E                                    l406 231C  
                                  l430 2200                                    l451 2E3E  
                                  l284 30C6                                    l294 3080  
                                  l279 3188                                    l996 2336  
                                  l999 2352                                    _abs 310C  
               ??_InterruptManagerHigh 0008                                    _pad 2B90  
            _RB5_InterruptHandler_HIGH 00CD                        __end_of_ADC_ISR 337A  
                                  _ret 00FF                           ___awmod@sign 0017  
               _number_16bit_to_string 27AA                                    prod 0FF3  
                relay_initialize@F3042 0060                                    tosl 0FFD  
                                  wreg 0FE8                           ___flmul@aexp 0031  
                         ___flmul@bexp 0032         ?_ADC_StartConversion_Interrupt 0019  
                         ___flmul@sign 002C                           ___flmul@temp 0037  
                         ___flmul@prod 0033                        __end_of_RB4_ISR 32E0  
                      __end_of_RB5_ISR 32A8                        __end_of_RB6_ISR 3270  
                      __end_of_RB7_ISR 3200                           ___fltol@exp1 0042  
                                 l1010 23C0                                   l1003 2374  
                                 l1012 243C                                   l1020 3390  
                                 l1006 237C                                   l1022 3394  
                                 l1027 3348                                   ?_abs 0018  
                                 l1060 31C6                                   l1324 27A8  
                                 l1085 2E9E                                   l1079 261A  
                                 l1337 29D0                                   l1390 2542  
                                 l1711 1458                                   l1714 12EA  
                                 l1707 10F4                                   l1803 2BB2  
                                 l1724 141A                                   l1716 1362  
                                 l1812 1BD2                                   l5021 2320  
                                 l1717 1350                                   l1814 1BDA  
                                 l5031 2380                                   l5023 2320  
                                 l5111 1160                                   l5103 1128  
                                 l1591 2D68                                   l1751 1B88  
                                 l1807 2C08                                   l1815 1C20  
                                 l1584 2D60                                   l5041 241A  
                                 l5033 239A                                   l5025 2332  
                                 l5121 11AA                                   l5113 1178  
                                 l5105 1134                                   l5201 2492  
                                 l4401 2B08                                   l1833 1FC0  
                                 l1762 1B20                                   l1826 1D1E  
                                 l5043 242C                                   l5035 23A0  
                                 l5027 2338                                   l5051 318A  
                                 l5131 1200                                   l5123 11BA  
                                 l5115 1184                                   l5107 113E  
                                 l5203 2494                                   l1755 1AC4  
                                 l4331 20F4                                   l4403 2B0C  
                                 l1843 3142                                   l1748 1A2C  
                                 l5045 2438                                   l5037 23BA  
                                 l5029 235A                                   l5053 318A  
                                 l5141 12A4                                   l5133 121C  
                                 l5125 11C6                                   l5117 1190  
                                 l5109 1154                                   l5205 24A4  
                                 l5301 1B78                                   l4341 21D4  
                                 l4333 2112                                   l4421 2F2C  
                                 l4413 2EFE                                   l4405 2B1E  
                                 l1781 2FA2                                   l1846 314A  
                                 l5039 23C2                                   l5047 243A  
                                 l5055 319C                                   l5151 12FA  
                                 l5143 12B2                                   l5135 1228  
                                 l5127 11D6                                   l5119 119E  
                                 l5071 105C                                   l5063 1030  
                                 l5231 2522                                   l5215 24CE  
                                 l5207 24A8                                   l4335 2116  
                                 l4343 21FE                                   l4327 20E2  
                                 l4423 2F3A                                   l4415 2EFE  
                                 l4407 2B26                                   l1839 2FF2  
                                 l1768 1E94                                   l5057 31A4  
                                 l5153 1308                                   l5145 12D0  
                                 l5137 1244                                   l5129 11F0  
                                 l5081 1098                                   l5073 106C  
                                 l5065 103C                                   l5233 2532  
                                 l5225 24F6                                   l5217 24D8  
                                 l5209 24B6                                   l5241 2D10  
                                 l4337 2172                                   l4329 20E2  
                                 l4425 2F50                                   l4417 2F10  
                                 l4409 2B8C                                   l1858 26E4  
                                 l1866 310A                                   l4531 2556  
                                 l5059 31C4                                   l5163 1372  
                                 l5171 13BA                                   l5155 130C  
                                 l5147 12DA                                   l5139 126E  
                                 l5091 10CE                                   l5083 109E  
                                 l5075 107C                                   l5067 104A  
                                 l5227 2502                                   l5219 24E2  
                                 l5251 2D4A                                   l5243 2D18  
                                 l4419 2F18                                   l4611 2A94  
                                 l4541 2574                                   l4533 255C  
                                 l4525 2546                                   l5181 142E  
                                 l5173 13D4                                   l5165 137E  
                                 l5157 131A                                   l5149 12E8  
                                 l5093 10DE                                   l5085 10AC  
                                 l5077 1082                                   l5069 104C  
                                 l5229 2512                                   l5253 2D52  
                                 l5245 2D20                                   l5237 2CF6  
                                 l5261 19E8                                   l4461 2202  
                                 l4613 2A9C                                   l1869 33A6  
                                 ?_pad 0022                                   l4711 2E6A  
                                 l4551 2592                                   l4543 257A  
                                 l4535 2562                                   l4527 254A  
                                 l5183 143C                                   l5175 13E8  
                                 l5167 138C                                   l5159 1348  
                                 l5095 10E4                                   l5087 10AE  
                                 l5079 1092                                   l5255 2D54  
                                 l5247 2D2E                                   l5239 2CFE  
                                 l5271 1A66                                   l5263 19F6  
                                 l4471 22AE                                   l4463 2214  
                                 l4615 2ACE                                   l4607 2A7E  
                                 l4713 2E86                                   l4705 2E40  
                                 l4545 2580                                   l4537 2568  
                                 l4529 2550                                   l4553 2598  
                                 l4721 337A                                   l5185 143E  
                                 l5177 1402                                   l5169 13B6  
                                 l5097 1104                                   l5089 10BE  
                                 l5193 243E                                   l5257 2D5A  
                                 l5249 2D34                                   l5281 1ABA  
                                 l5273 1A6E                                   l5265 1A3C  
                                 l4473 22C4                                   l4465 2232  
                                 l4481 2C80                                   l4617 2AD2  
                                 l4609 2A82                                   l4801 2FF4  
                                 l4715 2E8C                                   l4707 2E46  
                                 l4547 2586                                   l4539 256E  
                                 l4731 3318                                   l4723 338C  
                                 l5179 141E                                   l5187 1444  
                                 l5099 1114                                   l5195 2454  
                                 l5291 1B30                                   l5283 1AF6  
                                 l5275 1A7A                                   l5267 1A52  
                                 l5259 19D8                                   l4467 2236  
                                 l4459 2202                                   l4571 2DD8  
                                 l4483 2C92                                   l4491 2C0A  
                                 l4619 2B04                                   l4811 3038  
                                 l4803 2FF4                                   l6411 2668  
                                 l6403 261C                                   l4717 2E9C  
                                 l4709 2E62                                   l4549 258C  
                                 l4733 332A                                   l4725 3392  
                                 l5189 1448                                   l5293 1B34  
                                 l5285 1B02                                   l5277 1AAC  
                                 l4469 224C                                   l4901 315E  
                                 l4573 2DEA                                   l4485 2C9A  
                                 l4493 2C0A                                   l4805 3006  
                                 l4661 1DD8                                   l4653 1D3E  
                                 l6501 29C8                                   l6413 269E  
                                 l6405 262E                                   l6421 30E6  
                                 l4735 332E                                   l4719 337A  
                                 l5199 2468                                   l5295 1B58  
                                 l5287 1B10                                   l5279 1AAE  
                                 l4903 3166                                   l4911 3082  
                                 l4575 2E08                                   l4487 2CF2  
                                 l4479 2C80                                   l4751 2004  
                                 l4743 1FC2                                   l4495 2C1C  
                                 l4591 29FE                                   l4583 29D2  
                                 l4807 300E                                   l4671 1E38  
                                 l4655 1D4A                                   l6431 2700  
                                 l6407 2640                                   l6423 30EA  
                                 l6511 2BBE                                   l4737 3340  
                                 l4729 3318                                   l5297 1B68  
                                 l5289 1B2E                                   l4905 3186  
                                 l4913 3094                                   l4921 303C  
                                 l4577 2E10                                   l4569 2DD8  
                                 l4761 201A                                   l4745 1FC6  
                                 l4497 2C24                                   l4593 2A14  
                                 l4585 29D2                                   l4809 3022  
                                 l4673 1E6C                                   l4665 1DF2  
                                 l4649 1D20                                   l6441 2726  
                                 l6433 2704                                   l6425 26E6  
                                 l6521 3126                                   l6409 264A  
                                 l6417 30C8                                   l6513 2BD2  
                                 l6505 2B90                                   l4739 3346  
                                 l5299 1B76                                   l4915 309C  
                                 l4923 303C                                   l4579 2E3C  
                                 l4771 206C                                   l4763 202A  
                                 l4747 1FD8                                   l4499 2C7C  
                                 l4595 2A2A                                   l4587 29E4  
                                 l4675 1E78                                   l4667 1E1E  
                                 l4659 1D80                                   l6451 275C  
                                 l6443 2738                                   l6435 2712  
                                 l6427 26EA                                   l6419 30D4  
                                 l6515 2BD6                                   l6507 2B9E  
                                 l6531 1BC6                                   l6523 1B8A  
                                 l6603 2FA4                                   l4917 30C4  
                                 l4909 3082                                   l4925 304E  
                                 l4781 20BC                                   l4773 207C  
                                 l4765 2038                                   l4757 2008  
                                 l4749 1FE0                                   l4589 29E8  
                                 l4597 2A40                                   l4677 1E7E  
                                 l6453 2772                                   l6445 2740  
                                 l6461 2788                                   l6437 271A  
                                 l6429 26F8                                   l6517 2BF4  
                                 l6509 2BAA                                   l6541 1C14  
                                 l6533 1BE2                                   l6525 1B9E  
                                 l6605 2FB0                                   l6621 2F92  
                                 l6613 2F54                                   l6701 193A  
                                 l4927 3056                                   l4783 20CC  
                                 l4775 208C                                   l4767 2048  
                                 l4759 2018                                   l4599 2A7A  
                                 l4679 1E82                                   l6463 2798  
                                 l6455 277A                                   l6447 2748  
                                 l6439 271E                                   l6471 2926  
                                 l6519 310C                                   l6551 1C6A  
                                 l6543 1C1C                                   l6535 1BF2  
                                 l6527 1BAE                                   l6607 2FCC  
                                 l6615 2F66                                   l6631 27C0  
                                 l6711 19AA                                   l6703 195A  
                                 l4929 307E                                   l4777 209C  
                                 l4769 2066                                   l4785 20DE  
                                 l6465 27A0                                   l6457 277C  
                                 l6449 2756                                   l6481 2956  
                                 l6473 2934                                   l6561 1CBE  
                                 l6553 1C70                                   l6545 1C28  
                                 l6537 1BF8                                   l6529 1BB6  
                                 l6609 2FEA                                   l6617 2F6E  
                                 l6641 2826                                   l6633 27D2  
                                 l6625 27AA                                   l6713 19BE  
                                 l6705 1970                                   l4779 20AC  
                                 l6459 2782                                   l6491 299C  
                                 l6483 2968                                   l6475 293C  
                                 l6563 1CD8                                   l6555 1C76  
                                 l6547 1C32                                   l6539 1C08  
                                 l6619 2F76                                   l6643 2842  
                                 l6635 27DA                                   l6627 27B0  
                                 l6707 1984                                   l6493 29A4  
                                 l6485 2970                                   l6477 2940  
                                 l6469 2922                                   l6565 1CE8  
                                 l6549 1C38                                   l6557 1C92  
                                 l6581 1EDC                                   l6573 1E96  
                                 l6645 2844                                   l6637 27F6  
                                 l6629 27BC                                   l6709 1994  
                                 l6495 29AA                                   l6487 2978  
                                 l6479 294E                                   l6567 1CEE  
                                 l6559 1CAC                                   l6583 1EEC  
                                 l6575 1EBC                                   l6639 2806  
                                 l6647 2862                                   l6671 1740  
                                 l4897 314C                                   l6489 2986  
                                 l6497 29B0                                   l6569 1CFE  
                                 l6593 1F84                                   l6585 1F0A  
                                 l6577 1ECA                                   l6681 1798  
                                 l6673 1750                                   l4899 314C  
                                 l6499 29C0                                   l6587 1F28  
                                 l6579 1ED8                                   l6691 18A2  
                                 l6683 17AC                                   l6675 1760  
                                 l6667 1720                                   l6589 1F6C  
                                 l6597 1F96                                   l6693 18BA  
                                 l6685 17FE                                   l6677 1770  
                                 l6669 1730                                   l6695 18DA  
                                 l6687 186C                                   l6679 1788  
                                 l6697 18FA                                   l6689 1888  
                                 l6875 2A54                                   l6699 191A  
                                 l6877 21E8                                   l6879 25AC  
                                 STR_1 1028                                   STR_2 102B  
                                 STR_4 1011                                   STR_5 101A  
                                 STR_6 1021                                   _LATA 0F89  
                                 _LATB 0F8A                                   _LATC 0F8B  
                                 _LATD 0F8C                                   _LATE 0F8D  
                                 u4010 315E                                   u4011 315A  
                                 u4100 23BA                                   u4020 3094  
                                 u4101 23B6                                   u4021 3090  
                                 u4110 319C                                   u4030 304E  
                                 u4111 3198                                   u4031 304A  
                                 u4200 128E                                   u4120 104A  
                                 u4121 1046                                   u4210 12E8  
                                 u4130 105C                                   u4211 12E4  
                                 u4131 1058                                   u4060 2332  
                                 u4300 143C                                   u4220 1308  
                                 u4140 106C                                   u3340 20F4  
                                 u4061 232E                                   u4301 1438  
                                 u4221 1304                                   u4205 1284  
                                 u4141 1068                                   u3341 20F0  
                                 u4070 2352                                   u4230 131A  
                                 u4150 10AC                                   u4310 2454  
                                 u3350 2112                                   u4071 234E  
                                 u4231 1316                                   u4151 10A8  
                                 u4311 2450                                   u3351 210E  
                                 u4080 2374                                   u4240 1348  
                                 u4160 10BE                                   u4320 2488  
                                 u4400 2D4A                                   u3600 2C1C  
                                 u6000 2798                                   u4081 2370  
                                 u4241 1344                                   u4161 10BA  
                                 u4401 2D46                                   u3601 2C18  
                                 u6001 2794                                   u4090 239A  
                                 u4250 135E                                   u4170 10CE  
                                 u4330 24B6                                   u4410 19E8  
                                 u3530 2214                                   u6010 2934  
                                 u4091 2396                                   u4251 135A  
                                 u4171 10CA                                   u4331 24B2  
                                 u4411 19E4                                   u3531 2210  
                                 u6011 2930                                   u4260 1372  
                                 u4180 1104                                   u4340 24CA  
                                 u4500 1B76                                   u4420 19F6  
                                 u3540 2232                                   u3364 2132  
                                 u3700 2A94                                   u6020 294E  
                                 u6100 1B9A                                   u4261 136E  
                                 u4181 1100                                   u4341 24C6  
                                 u4325 247E                                   u4501 1B72  
                                 u4421 19F2                                   u3541 222E  
                                 u3365 212E                                   u3701 2A90  
                                 u6021 294A                                   u6101 1B94  
                                 u4270 138C                                   u4190 1114  
                                 u4350 24F2                                   u4430 1A52  
                                 u3550 224C                                   u3374 218E  
                                 u3710 2AC6                                   u6030 2968  
                                 u6110 1B9C                                   u4271 1388  
                                 u4191 1110                                   u4351 24EE  
                                 u4431 1A4E                                   u3551 2248  
                                 u3375 218A                                   u6031 2964  
                                 u4280 13D4                                   u4360 2512  
                                 u4440 1AA8                                   u3480 2B1E  
                                 u3720 2AF4                                   u3800 1E34  
                                 u6040 2986                                   u6120 1BAE  
                                 u6200 1EBC                                   u4281 13D0  
                                 u4361 250E                                   u4441 1AA4  
                                 u3481 2B1A                                   u3801 1E30  
                                 u6041 2982                                   u6121 1BAA  
                                 u6201 1EB8                                   u4290 1402  
                                 u4370 2522                                   u4450 1AF2  
                                 u3570 22C4                                   u3490 2F10  
                                 u3730 2B04                                   u3810 1E94  
                                 u6050 299C                                   u6130 1BC6  
                                 u6210 1F0A                                   u4291 13FE  
                                 u4371 251E                                   u4451 1AEE  
                                 u3571 22C0                                   u3491 2F0C  
                                 u3731 2B00                                   u3811 1E90  
                                 u6051 2998                                   u6131 1BC2  
                                 u6211 1F06                                   u4380 2D10  
                                 u4460 1B10                                   u3564 2268  
                                 u6060 29C0                                   u6140 1BF2  
                                 u6220 1F28                                   u6300 19AA  
                                 u4381 2D0C                                   u4461 1B0C  
                                 u3565 2264                                   u3717 2ABC  
                                 u6061 29BC                                   u6141 1BEE  
                                 u6221 1F24                                   u6301 19A6  
                                 u4390 2D2E                                   u4470 1B20  
                                 u3670 2DEA                                   u3590 2C92  
                                 u3910 3006                                   u6070 2B9E  
                                 u6150 1C08                                   u6230 2FEA  
                                 u4391 2D2A                                   u4471 1B1C  
                                 u3671 2DE6                                   u3591 2C8E  
                                 u3727 2AEA                                   u3911 3002  
                                 u6071 2B9A                                   u6151 1C04  
                                 u6231 2FE6                                   u3840 2E62  
                                 u4480 1B2E                                   u3584 22E0  
                                 u3680 2E08                                   u6080 2BF4  
                                 u6160 1CAC                                   u3841 2E5E  
                                 u4481 1B2A                                   u3585 22DC  
                                 u3681 2E04                                   u6081 2BF0  
                                 u6161 1CA8                                   u6241 27B6  
                                 u3850 2E86                                   u4490 1B68  
                                 u3690 29E4                                   u3770 1D3A  
                                 u6090 3126                                   u6170 1CBE  
                                 u6250 27D2                                   u3851 2E82  
                                 u4491 1B64                                   u3691 29E0  
                                 u3771 1D36                                   u6091 3122  
                                 u6171 1CBA                                   u6251 27CE  
                                 u3860 338C                                   u3780 1D7C  
                                 u6180 1CD8                                   u6260 2862  
                                 u3861 3388                                   u6317 2030  
                                 u3781 1D78                                   u6181 1CD4  
                                 u6261 285E                                   u3870 332A  
                                 u3790 1DEE                                   u6190 1CE8  
                                 u6270 1770                                   u3871 3326  
                                 u6327 204E                                   u3791 1DEA  
                                 u6191 1CE4                                   u6271 176C  
                                 u3880 1FD8                                   u6280 1798  
                                 u6337 2068                                   u3881 1FD4  
                                 u6281 1794                                   u3890 202A  
                                 u6290 1970                                   u6347 2F32  
                                 u3891 2026                                   u6291 196C  
                                 u5900 262E                                   u5901 262A  
                                 u5910 2640                                   u5911 263C  
                                 u5920 2668                                   u5921 2664  
                                 u5930 269E                                   u5931 269A  
                                 u5940 310A                                   u5941 3106  
                                 u5950 26F8                                   u5951 26F4  
                                 u5960 2712                                   u5961 270E  
                                 u5970 2738                                   u5971 2734  
                                 u5980 2756                                   u5981 2752  
                                 u5990 2772                                   u5991 276E  
             _RB4_InterruptHandler_LOW 00CF                                   abs@a 0018  
                                 _dbuf 0100                                   _main 1720  
                                 _dtoa 1B8A                                   _prec 00BF  
             _RB7_InterruptHandler_LOW 00C3                                   pad@i 0029  
                                 pad@p 0026                                   fsr0h 0FEA  
                                 fsr1h 0FE2                                   indf0 0FEF  
                                 fsr2h 0FDA                                   fsr0l 0FE9  
                                 indf1 0FE7                                   indf2 0FDF  
                                 fsr1l 0FE1                                   pad@w 002B  
                                 fsr2l 0FD9                                   btemp 006D  
                         _ADC_1_Result 0067                                   prodh 0FF4  
                                 prodl 0FF3                                   start 00BE  
                         _ADC_2_Result 0065                  RB5_ISR@FUNC_DETECTION 0003  
                         ___param_bank 0000             __end_of_ADC_Select_Channel 334A  
               dc_motor_initialize@ret 001C                                  ??_abs 001A  
                 _gpio_pin_write_logic 20E2                                  ??_pad 0028  
                     __end_of_INT0_ISR 33A6                       __end_of_INT1_ISR 33A2  
                     __end_of_INT2_ISR 339E                 lcd_4bits_send_char@lcd 0020  
               lcd_4bits_send_char@ret 0023                          ___fltol@sign1 0041  
                                ?_main 0001                                  ?_dtoa 002D  
                                _ADC_1 00A6                        __end_of___awdiv 27AA  
                                _EEADR 0FA9                        __end_of___awmod 29D2  
                      __end_of___flmul 145A                        __end_of___fltol 2544  
                      ___awdiv@divisor 0014                        __end_of___lwdiv 2D6A  
                                i1l752 31FE                                  i2l571 33A4  
                                i2l716 32DE                                  i2l740 326E  
                                i2l581 339C                                  i1l893 006A  
                                i2l576 33A0                                  i2l728 32A6  
                                i2l752 3236                                  i1l896 00AE  
                                i2l870 1510                                  i2l880 1664  
                                i2l872 1554                                  i2l864 148C  
                                i2l961 2EFC                                  i2l882 16A8  
                                i2l874 1598                                  i2l866 14AC  
                                i2l884 16EC                                  i2l876 15DC  
                                i2l868 14CC                        ___awdiv@counter 0016  
                                i2l878 1620                                  i2l887 170C  
                         vfpfcnvrt@fmt 003C                 ?_lcd_4bits_send_string 0024  
                                _PORTA 0F80                                  _PORTB 0F81  
                                _PORTC 0F82                                  _PORTD 0F83  
                                _PORTE 0F84                                  _TRISA 0F92  
                                _TRISB 0F93                                  _TRISC 0F94  
                                _TRISD 0F95                                  _TRISE 0F96  
                                _lcd_1 00AD                                  _flags 005C  
                                _fputc 261C                                  _fputs 30C8  
                                pad@fp 0022                                  _width 00BD  
                                _putch 33A6                                  dtoa@d 002F  
                                dtoa@i 0038                                  dtoa@p 0033  
                                dtoa@s 0037                                  dtoa@w 0035  
                                pclath 0FFA                                  pclatu 0FFB  
                                tablat 0FF5        dc_motor_initialize@motor_config 001A  
        lcd_4bits_send_command@command 0022                                  ttemp5 006E  
                                ttemp6 0071                                  ttemp7 0075  
                                status 0FD8                                  wtemp8 006E  
                      __end_of_sprintf 2FA4              dc_motor_stop@motor_config 001B  
                      __initialization 2D6A            __end_of_lcd_4bits_initialze 20E2  
                _dc_motor_move_forward 3082                           __end_of_main 19D6  
                         __end_of_dtoa 1D20                            ?_Adc_interr 0001  
                ?_gpio_pin_write_logic 0012                              ??_ADC_ISR 0008  
          __end_of_dc_motor_initialize 318A            __end_of_lcd_4bits_send_char 2C80  
                               ??_main 0058                                 ??_dtoa 0031  
                        __activetblptr 0003          ADC_GetConversionResult@Result 0003  
                     led_turn_on@F3053 0063                              ??_RB4_ISR 0001  
              lcd_4bits_send_char@data 0022                              ??_RB5_ISR 0001  
                            ??_RB6_ISR 0001                              ??_RB7_ISR 000C  
              ?_lcd_4bits_send_command 0020                                 ?_fputc 0012  
                               ?_fputs 001B                                 _ADRESH 0FC4  
                               _EEADRH 0FAA                                 _ADRESL 0FC3  
                               _EEDATA 0FA8                                 _EECON2 0FA7  
                     ___awdiv@dividend 0012                                 ?_putch 0001  
                               i1l5001 31D0                                 i1l5009 31D4  
                               i2l1045 2920                                 i2l1090 3378  
                               i1l6161 0034                                 i1l6171 0078  
                               i1l6163 0042                                 i1l6173 0086  
                               i1l6165 0050                                 i1l6175 0094  
                               i1l6167 0060                                 i1l6159 0026  
                               i1l6177 00A4                                 i1l6169 0064  
                               i1l6179 00A8                                 i2l5015 334A  
                               i2l5017 334C                                 i2l5019 3360  
                               i2l6101 158E                                 i2l4511 288E  
                               i2l4503 2866                                 i2l6111 15D2  
                               i2l6103 1592                                 i2l4513 28A8  
                               i2l4521 291E                                 i2l4505 2866  
                               i2l5305 3202                                 i2l6121 1616  
                               i2l6113 15D6                                 i2l6105 15A6  
                               i2l4515 28D0                                 i2l4507 2878  
                               i2l5307 3208                                 i2l5315 320C  
                               i2l6131 165A                                 i2l6123 161A  
                               i2l6115 15EA                                 i2l6107 15B4  
                               i2l4517 28EA                                 i2l4509 288A  
                               i2l4701 2EE0                                 i2l6141 169E  
                               i2l6133 165E                                 i2l6125 162E  
                               i2l6117 15F8                                 i2l6109 15C2  
                               i2l6061 146C                                 i2l4703 2EF8  
                               i2l6151 16E2                                 i2l6143 16A2  
                               i2l6135 1672                                 i2l6127 163C  
                               i2l6119 1606                                 i2l6071 14BA  
                               i2l6063 147A                                 i1l4999 31CA  
                               i2l6153 16E6                                 i2l6145 16B6  
                               i2l6137 1680                                 i2l6129 164A  
                               i2l6081 1506                                 i2l6073 14C8  
                               i2l6065 1488                                 i1l6881 31E8  
                               i2l6155 16FA                                 i2l6147 16C4  
                               i2l6139 168E                                 i2l6091 154A  
                               i2l6083 150A                                 i2l6075 14DA  
                               i2l6067 149A                                 i2l6157 1708  
                               i2l6149 16D2                                 i2l6093 154E  
                               i2l6085 151E                                 i2l6077 14E8  
                               i2l6069 14A8                                 i2l6095 1562  
                               i2l6087 152C                                 i2l6079 14F6  
                               i2l6097 1570                                 i2l6089 153A  
                               i2l6099 157E                                 i2l4693 2EA0  
                               i2l4933 33A2                                 i2l4695 2EB0  
                               i2l4951 32AA                                 i2l4697 2EC8  
                               i2l4945 339A                                 i2l4953 32B0  
                               i2l4961 32B4                                 i2l4699 2ED0  
                               i2l4939 339E                                 i2l4967 3272  
                               i2l4983 323A                                 i2l4969 3278  
                               i2l4977 327C                                 i2l4985 3240  
                               i2l4993 3244                      __end_ofi2_RB7_ISR 3238  
                               i2l6883 3220                                 i2l6885 3258  
                               i2l6887 3290                                 i2l6889 32C8  
                               _TEMP_1 005A                                 _TEMP_2 0058  
                     __end_of___xxtofl 1B8A                           vfprintf@cfmt 004E  
                            ??___awdiv 0016                              ??___awmod 0016  
                            ??___flmul 0028                              ??___fltol 003D  
                            ??___lwdiv 0016                                 _memset 1D20  
                               clear_0 2DB0                                 clear_1 2DBC  
                               clear_2 2DC8                       ___awdiv@quotient 0018  
                               _moto_1 00B5                        ___awmod@divisor 0014  
                               _moto_2 00B3                                 isa$std 0001  
                      ___awmod@counter 0016                                 pad@buf 0024  
                               dtoa@fp 002D             lcd_4bits_set_cursor@COLUMN 0027  
       __end_of_lcd_4bits_send_command 2CF6                                 fputc@c 0012  
                               fputs@c 001F                                 fputs@i 0020  
                         __pdataCOMRAM 0069                                 fputs@s 001B  
                         __mediumconst 0000                                 tblptrh 0FF7  
                               tblptrl 0FF6                                 tblptru 0FF8  
                               putch@c 0001                       __end_of_vfprintf 2FF4  
                            ??_sprintf 0058               ??_Pins_Configration_Func 0012  
                         ___xxtofl@arg 001C                           ___xxtofl@exp 001B  
                         ___xxtofl@val 0012                             __accesstop 0080  
              __end_of__initialization 2DCE                              ?_INT0_ISR 0001  
                            ?_INT1_ISR 0001                              ?_INT2_ISR 0001  
                        ___rparam_used 0001                             ___fltol@f1 0039  
                   ADC_Initialize@Adc_ 0015                 ?_dc_motor_move_forward 001B  
                     _enable_pin_4bits 2EFE                 ??_gpio_pin_write_logic 0015  
                       __pcstackCOMRAM 0001                _LOW_PRIORITY_INTERRUPTS 0018  
                         __pidataBANK0 32E0                          __end_of_fputc 26E6  
                        __end_of_fputs 310C                          __end_of_putch 33A8  
              ?_number_16bit_to_string 00F3                          send_4bits@lcd 001B  
                        send_4bits@ret 001F                _ADC_GetConversionResult 2866  
             dc_motor_move_forward@ret 001D              number_16bit_to_string@ret 00FD  
            number_16bit_to_string@str 00F5                                ??_fputc 0016  
                              ??_fputs 001F                                ??_putch 0012  
                           __pbssBANK0 00B7                             __pbssBANK1 0100  
    __end_of_lcd_4bits_send_string_pos 303C                  _INT0_InterruptHandler 00D7  
                           ??_INT0_ISR 0001                             ??_INT1_ISR 0001  
                           ??_INT2_ISR 0001           __end_of_lcd_4bits_set_cursor 2A7E  
                    led_turn_off@F3058 0062         __end_of_number_16bit_to_string 2866  
                              _ADC_ISR 334A                        led_toggle@F3063 0061  
                              ?_memset 0012                ??_lcd_4bits_send_string 0028  
          number_16bit_to_string@F3219 00B7                                _RB4_ISR 32A8  
                              _RB5_ISR 3270                                _RB6_ISR 3238  
                              _RB7_ISR 31C8                                _LAT_REG 0094  
                            ?___xxtofl 0012              _RB6_InterruptHandler_HIGH 00C9  
                   _ADC_Select_Channel 3318              lcd_4bits_send_command@lcd 0020  
            lcd_4bits_send_command@ret 0023                    ?_ADC_Select_Channel 0015  
          number_16bit_to_string@value 00F3                             _btn_values 1001  
    number_16bit_to_string@DataCounter 00FE               _RB6_InterruptHandler_LOW 00C7  
            ??_LOW_PRIORITY_INTERRUPTS 000F                   _ADC_InterruptHandler 00C1  
                              __Hparam 0000                  RB4_ISR@FUNC_DETECTION 0003  
                RB7_ISR@FUNC_DETECTION 000E                                __Lparam 0000  
                         ??_Adc_interr 0008                                ___awdiv 26E6  
                              ___awmod 2922                                ___flmul 1030  
                              ___fltol 243E                                ___lwdiv 2CF6  
                 ??_ADC_Select_Channel 0018                              ?_vfprintf 0048  
                         __psmallconst 1000              ??_ADC_GetConversionResult 0005  
           __end_of_gpio_pin_intialize 2E40                                __pcinit 2D6A  
                              __ramtop 1000                          relay_on@F3047 005F  
                              __ptext0 1720                                __ptext1 27AA  
                              __ptext2 2F54                                __ptext3 2FA4  
                              __ptext4 1E96                                __ptext5 1B8A  
                              __ptext6 2B90                                __ptext7 30C8  
                              __ptext8 261C                                __ptext9 33A6  
                           ??___xxtofl 0016                       ___awmod@dividend 0012  
              lcd_4bits_set_cursor@ROW 0026                lcd_4bits_set_cursor@lcd 0024  
                           _send_4bits 2B08                                _sprintf 2F54  
                       __pintcode_body 145A                   end_of_initialization 2DCE  
      lcd_4bits_send_string_pos@COLUMN 002F                     __end_of_Adc_interr 2EFE  
                              fputc@fp 0014                                memset@c 0014  
                              memset@k 001A                                memset@n 0016  
                              memset@s 001C                                int_func 145A  
                              fputs@fp 001D                              i2_RB7_ISR 3200  
                gpio_pin_intialize@ret 001E                  gpio_pin_intialize@str 001B  
                        _dc_motor_stop 303C                      __end_of_vfpfcnvrt 1FC2  
                              postdec1 0FE5                                postdec2 0FDD  
                              postinc0 0FEE                                postinc1 0FE6  
                              postinc2 0FDE                       vfpfcnvrt@convarg 0042  
                           ??_vfprintf 004E                 _Pins_Configration_Func 2544  
     ADC_StartConversion_Interrupt@ret 001C                  _INT1_InterruptHandler 00D5  
                            _PORTBbits 0F81                   _lcd_4bits_set_cursor 29D2  
 __end_of_gpio_pin_direction_intialize 2320           _gpio_pin_direction_intialize 2202  
                        ___xxtofl@sign 001A               __end_of_enable_pin_4bits 2F54  
    dc_motor_move_forward@motor_config 001B                            ___flmul@grs 002D  
            ADC_Select_Channel@channel 0017                ??_dc_motor_move_forward 001D  
                           ?i2_RB7_ISR 0001                         ?_dc_motor_stop 001B  
                          vfpfcnvrt@ap 003E                            vfpfcnvrt@cp 0046  
                          vfpfcnvrt@fp 003A      ADC_StartConversion_Interrupt@Adc_ 0019  
                        __pidataCOMRAM 3396                         _ADC_Initialize 2320  
             lcd_4bits_send_string@lcd 0024               lcd_4bits_send_string@ret 0028  
                       __end_of_memset 1E96                  ?_lcd_4bits_set_cursor 0024  
        ADC_Start_Conversion_Func@Adc_ 0012                    enable_pin_4bits@lcd 001B  
                  enable_pin_4bits@ret 001E                    start_initialization 2D6A  
                    send_4bits@command 001D                            __end_of_abs 314C  
                          __end_of_pad 2C0A          ?_gpio_pin_direction_intialize 0012  
                    send_4bits@counter 001E                            ?_send_4bits 001B  
        lcd_4bits_send_string_pos@data 002C             ?_ADC_Start_Conversion_Func 0012  
              i2RB7_ISR@FUNC_DETECTION 0003   ADC_StartConversion_Interrupt@channel 001B  
                          vfprintf@fmt 004A                 __end_of_ADC_Initialize 243E  
                          __pdataBANK0 0080                     Interrupt_Init@Adc_ 0012  
                             ?_ADC_ISR 0001                               ??_memset 0018  
                           memset@dest 0012                          fp__Adc_interr 0000  
                     dc_motor_stop@ret 001D          __end_of_lcd_4bits_send_string 2B08  
                       _Interrupt_Init 2E40                               ?_RB4_ISR 0001  
                             ?_RB5_ISR 0001                               ?_RB6_ISR 0001  
                             ?_RB7_ISR 0001                              ___flmul@a 0024  
                            ___flmul@b 0020                            __pbssCOMRAM 0058  
                        __pcstackBANK0 00E5            ADC_GetConversionResult@Adc_ 0001  
                _INT2_InterruptHandler 00D3      __end_of_ADC_Start_Conversion_Func 3396  
                      ??_dc_motor_stop 001D        gpio_pin_direction_intialize@str 0012  
           ?_lcd_4bits_send_string_pos 002A                              __pnvBANK0 00FF  
                          ??i2_RB7_ISR 0001           __end_of_InterruptManagerHigh 1720  
                     ___lwdiv@dividend 0012                              _dtoa$2832 0031  
                            __pintcode 0008                               ?___awdiv 0012  
                             ?___awmod 0012                               ?___flmul 0020  
             ??_lcd_4bits_send_command 0023                               ?___fltol 0039  
                             ?___lwdiv 0012                        ?_ADC_Initialize 0015  
                          __pintcodelo 0018                 __end_of_Interrupt_Init 2EA0  
               ??_lcd_4bits_set_cursor 0028                            __smallconst 1000  
            _RB4_InterruptHandler_HIGH 00D1              lcd_4bits_send_string@data 0026  
            _RB7_InterruptHandler_HIGH 00C5                       ___lwdiv@quotient 0016  
                             ?_sprintf 0050      number_16bit_to_string@Temp_String 00F7  
                   _gpio_pin_intialize 2DD8         ??_gpio_pin_direction_intialize 0014  
             _RB5_InterruptHandler_LOW 00CB                               _INT0_ISR 33A2  
                             _INT1_ISR 339E                               _INT2_ISR 339A  
                  _lcd_4bits_initialze 1FC2                               _RB4_Flag 006C  
                             _RB5_Flag 006B                               _RB6_Flag 006A  
                             _RB7_Flag 0069                    ?_gpio_pin_intialize 001B  
                             _IPR1bits 0F9F                               _PIE1bits 0F9D  
                RB6_ISR@FUNC_DETECTION 0003                               i1u580_20 0086  
                             i1u580_21 0082                               i2u404_40 3360  
                             i2u404_41 335C                               i1u581_20 0094  
                             i1u581_21 0090                               i1u582_20 00A4  
                             i1u582_21 00A0                               i2u405_48 3366  
                             i2u405_49 3378                               i1u575_20 0034  
                             i1u575_21 0030                               i1u576_20 0042  
                             i1u576_21 003E                               i1u577_20 0050  
                             i1u577_21 004C                               i2u361_40 2878  
                             i2u361_41 2874                               _PIR1bits 0F9E  
                             i1u578_20 0060                               i1u578_21 005C  
                             i2u362_40 288A                               i2u362_41 2886  
                             i1u579_20 0078                               i1u579_21 0074  
                             i2u363_40 28A8                               i2u363_41 28A4  
                             i2u364_40 28EA                               i2u540_40 14C8  
                             i2u364_41 28E6                               i2u540_41 14C4  
                             i2u541_40 14DA                               i2u541_41 14D6  
                             i2u365_45 2902                               i2u382_40 2EB0  
                             i2u550_40 1570                               i2u542_40 14E8  
                             i2u382_41 2EAC                               i2u550_41 156C  
                             i2u542_41 14E4                               i2u383_40 2EE0  
                             i2u551_40 157E                               i2u543_40 14F6  
                             i2u535_40 147A                               i2u383_41 2EDC  
                             i2u551_41 157A                               i2u543_41 14F2  
                             i2u535_41 1476                               i2u560_40 1616  
                             i2u552_40 158E                               i2u544_40 1506  
                             i2u536_40 1488                               i2u560_41 1612  
                             i2u552_41 158A                               i2u544_41 1502  
                             i2u536_41 1484                               i2u561_40 162E  
                             i2u553_40 15A6                               i2u545_40 151E  
                             i2u537_40 149A                               i2u561_41 162A  
                             i2u553_41 15A2                               i2u545_41 151A  
                             i2u537_41 1496                               i2u570_40 16C4  
                             i2u562_40 163C                               i2u554_40 15B4  
                             i2u546_40 152C                               i2u538_40 14A8  
                             i2u570_41 16C0                               i2u562_41 1638  
                             i2u554_41 15B0                               i2u546_41 1528  
                             i2u538_41 14A4                               i2u571_40 16D2  
                             i2u563_40 164A                               i2u555_40 15C2  
                             i2u547_40 153A                               i2u539_40 14BA  
                             i2u571_41 16CE                               i2u563_41 1646  
                             i2u555_41 15BE                               i2u547_41 1536  
                             i2u539_41 14B6                               i2u572_40 16E2  
                             i2u564_40 165A                               i2u556_40 15D2  
                             i2u548_40 154A                               i2u572_41 16DE  
                             i2u564_41 1656                               i2u556_41 15CE  
                             i2u548_41 1546                               i2u573_40 16FA  
                             i2u565_40 1672                               i2u557_40 15EA  
                             i2u549_40 1562                               i2u573_41 16F6  
                             i2u565_41 166E                               i2u557_41 15E6  
                             i2u549_41 155E                ?_Pins_Configration_Func 0001  
                             i2u574_40 1708                               i2u566_40 1680  
                             i2u558_40 15F8                               i2u574_41 1704  
                             i2u566_41 167C                               i2u558_41 15F4  
                             i2u567_40 168E                               i2u559_40 1606  
                             i2u567_41 168A                               i2u559_41 1602  
                             i2u568_40 169E                               i2u568_41 169A  
                             i2u569_40 16B6                               i2u569_41 16B2  
                             _RCONbits 0FD0                    _dc_motor_initialize 314C  
                  _lcd_4bits_send_char 2C0A        ??_ADC_StartConversion_Interrupt 001C  
                             _PORT_REG 0080             lcd_4bits_initialze@counter 0027  
                            _vfpfcnvrt 1E96                               _TRIS_REG 008A  
                      ?_Interrupt_Init 0012                             _ADCON0bits 0FC2  
                 ?_lcd_4bits_initialze 0024                             _ADCON1bits 0FC1  
                           _ADCON2bits 0FC0                   ??_gpio_pin_intialize 001D  
                 ?_dc_motor_initialize 001A                gpio_pin_write_logic@LOG 0014  
                 ?_lcd_4bits_send_char 0020                      ?_enable_pin_4bits 001B  
              gpio_pin_write_logic@str 0012                            _INTCON2bits 0FF1  
                          _INTCON3bits 0FF0                              copy_data0 2D7E  
                            copy_data1 2D9E                     ??_enable_pin_4bits 001D  
             ?_LOW_PRIORITY_INTERRUPTS 0001                             _EECON1bits 0FA6  
        __end_of_dc_motor_move_forward 30C8         __end_of_Pins_Configration_Func 261C  
             ??_number_16bit_to_string 0058                               __Hrparam 0000  
                           vfprintf@ap 004C                               __Lrparam 0000  
                           vfprintf@fp 0048               ?_ADC_GetConversionResult 0001  
               lcd_4bits_initialze@lcd 0024                 lcd_4bits_initialze@ret 0028  
                           ?_vfpfcnvrt 003A                  ??_lcd_4bits_initialze 0026  
                   __end_of_btn_values 1011                     led_intialize@F3048 0064  
                           sprintf@fmt 0052                               ___xxtofl 19D6  
                ??_dc_motor_initialize 001C                  ??_lcd_4bits_send_char 0023  
                      ___lwdiv@divisor 0014                   _InterruptManagerHigh 0008  
                      ___lwdiv@counter 0018                               __ptext10 310C  
                             __ptext11 2922                               __ptext20 2B08  
                             __ptext12 26E6                               __ptext21 2EFE  
                             __ptext13 1D20                               __ptext30 243E  
                             __ptext22 2DD8                               __ptext14 2FF4  
                             __ptext31 1030                               __ptext23 303C  
                             __ptext15 29D2                               __ptext32 318A  
                             __ptext24 3082                               __ptext16 2A7E  
                             __ptext41 3200                               __ptext33 337A  
                             __ptext25 20E2                               __ptext17 2C0A  
                             __ptext50 2866                               __ptext42 3238  
                             __ptext34 3318                               __ptext26 314C  
                             __ptext18 1FC2                           ??_send_4bits 001E  
                             __ptext51 0000                               __ptext43 3270  
                             __ptext35 2320                               __ptext27 2202  
                             __ptext19 2C80                               __ptext44 32A8  
                             __ptext36 2544                               __ptext28 19D6  
                             __ptext45 339A                               __ptext37 2E40  
                             __ptext29 2CF6                               __ptext46 339E  
                             __ptext47 33A2                               __ptext39 31C8  
                             __ptext48 334A                               __ptext49 2EA0  
          ??_ADC_Start_Conversion_Func 0014                               _keypad_1 009E  
               ADC_Select_Channel@Adc_ 0015                         relay_off@F3052 005E  
                             isa$xinst 0000                           _Prog_counter 005D  
                             int$flags 006D                               _vfprintf 2FA4  
                   __end_of_send_4bits 2B90  __end_of_ADC_StartConversion_Interrupt 31C8  
        _ADC_StartConversion_Interrupt 318A                             _INTCONbits 0FF2  
                ?_InterruptManagerHigh 0001        __end_of_LOW_PRIORITY_INTERRUPTS 00BE  
         __end_of_gpio_pin_write_logic 2202                 _lcd_4bits_send_command 2C80  
                             intlevel1 0000                               intlevel2 0000  
                            sprintf@ap 00E5        __end_of_ADC_GetConversionResult 2922  
          ??_lcd_4bits_send_string_pos 0030                       ??_ADC_Initialize 0017  
                          ??_vfpfcnvrt 0040                             _TEMP_1_txt 00DF  
                           _TEMP_2_txt 00D9              _ADC_Start_Conversion_Func 337A  
        Pins_Configration_Func@channel 0014                               sprintf@f 00E7  
                             sprintf@s 0050                  _lcd_4bits_send_string 2A7E  
         lcd_4bits_send_string_pos@ROW 002E           lcd_4bits_send_string_pos@lcd 002A  
         lcd_4bits_send_string_pos@ret 0030                  __end_of_dc_motor_stop 3082  
